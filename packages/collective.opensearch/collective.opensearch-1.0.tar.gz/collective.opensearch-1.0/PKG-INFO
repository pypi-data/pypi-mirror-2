Metadata-Version: 1.0
Name: collective.opensearch
Version: 1.0
Summary: Collective Opensearch Collective.opensearch adds
        the ability to produce search results in the simple OpenSearch
        format.
Home-page: http://plone.org/products/plos
Author: Christian Ledermann
Author-email: christian.ledermann@gmail.com
License: GPL
Description: 
        
        Project Description
        ===================
        
        collective.opensearch adds the possibility to read and write OpenSearch
        compatible search results in your Plone site.
        
        OpenSearch is a collection of simple formats for the sharing of search results.
        
        OpenSearch helps search engines and search clients communicate by
        introducing a common set of formats to perform search requests
        and syndicate search results.
        The OpenSearch description document format can be used to describe a
        search engine so that it can be used by search client applications.
        The OpenSearch response elements can be used to extend existing
        syndication formats, such as RSS and Atom, with the extra metadata
        needed to return search results.
        
        collective.opensearch enables you to syndicate the search results of
        your plone site by formatting them in the RSS or Atom formats,
        augmented with OpenSearch response elements.
        
        collective.opensearch adds a view to the link type that lets you search
        OpenSearch (or other searches that return RSS or Atom so any plone site)
        compatible search providers within your site. When you add a link with an
        open search url this view will be automatically set.
        
        To search e.g. plone.org from your site add a search feed with the url: ::
        
            http://plone.org/search_rss?SearchableText={searchTerms}
        
        You can combine several open search links as a metasearch. All OpenSearch links
        inside a folder will be queried and their results displayed when you change
        the view of a folder to 'Open Search View'
        
        - Code repository: http://svn.plone.org/svn/collective/collective.opensearch/
        - Questions and comments to product-developers@lists.plone.org
        - Report bugs at http://plone.org/products/collective.opensearch/issues
        
        
        Change history
        **************
        
        Changelog
        =========
        
        1.0 (2011/03/29)
        ----------------
        
        - Created recipe with ZopeSkel
        - implement all functionality from PLOS and JaoP
        - add opensearch view for link
        - add opensearch view for folder, all opensearch links inside that folder
            act as a metasearch
          ["nan"]
        
        
        JaoP  0.1 (Sep 23, 2008)
        ------------------------
        
        - First Jaop release with the default opensearch properties
        - Added default autodiscovery page ( need some changes ) for Firefox / IE
        - Implemented the rss view
        - Implemented the alpha version of suggestions
        
        
        PLOS 0.2 (Jul 21, 2007)
        -----------------------
        
        - Enable Plone to search OpenSearch compliant search providers
        - added search feed content type
        - additions to the RSS and ATOM responses
        
        
        PLOS 0.1 (May 24, 2007)
        -----------------------
        
        - initial release
        
        
        
        
        Detailed Documentation
        **********************
        
        Introduction
        ============
        
        This is a full-blown functional test. The emphasis here is on testing what
        the user may input and see, and the system is largely tested as a black box.
        We use PloneTestCase to set up this test as well, so we have a full Plone site
        to play with. We *can* inspect the state of the portal, e.g. using 
        self.portal and self.folder, but it is often frowned upon since you are not
        treating the system as a black box. Also, if you, for example, log in or set
        roles using calls like self.setRoles(), these are not reflected in the test
        browser, which runs as a separate session.
        
        Being a doctest, we can tell a story here.
        
        First, we must perform some setup. We use the testbrowser that is shipped
        with Five, as this provides proper Zope 2 integration. Most of the 
        documentation, though, is in the underlying zope.testbrower package.
        
            >>> from Products.Five.testbrowser import Browser
            >>> browser = Browser()
            >>> portal_url = self.portal.absolute_url()
        
        The following is useful when writing and debugging testbrowser tests. It lets
        us see all error messages in the error_log.
        
            >>> self.portal.error_log._ignored_exceptions = ()
        
        With that in place, we can go to the portal front page and log in. We will
        do this using the default user from PloneTestCase:
        
            >>> from Products.PloneTestCase.setup import portal_owner, default_password
        
        Because add-on themes or products may remove or hide the login portlet, this test will use the login form that comes with plone.  
        
            >>> browser.open(portal_url + '/login_form')
            >>> browser.getControl(name='__ac_name').value = portal_owner
            >>> browser.getControl(name='__ac_password').value = default_password
            >>> browser.getControl(name='submit').click()
        
        Here, we set the value of the fields on the login form and then simulate a
        submit click.  We then ensure that we get the friendly logged-in message:
        
            >>> "You are now logged in" in browser.contents
            True
        
        Finally, let's return to the front page of our site before continuing
        
            >>> browser.open(portal_url)
        
        -*- extra stuff goes here -*-
        
        
        Contributors
        ************
        
        "", Author
        
        
        Download
        ********
        
Platform: UNKNOWN
Classifier: Framework :: Plone
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License (GPL)

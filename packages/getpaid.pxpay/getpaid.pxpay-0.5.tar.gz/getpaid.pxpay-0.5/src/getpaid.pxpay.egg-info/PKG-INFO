Metadata-Version: 1.0
Name: getpaid.pxpay
Version: 0.5
Summary: PXPay payment plugin
Home-page: UNKNOWN
Author: getpaid community
Author-email: getpaid-dev@googlegroups.com
License: ZPL
Description: This package contains pxpay for getpaid.
        
        
        =======
        CHANGES
        =======
        
        0.5 (2010-05-07)
        ----------------
        
        * fixed bug with timeout setting on ssl connection string
        
        0.4 (2009-10-30)
        ----------------
        
        * add an explicit certs.pem and add known CAs that paymentexpress are
        using.
        
        0.3 (2008-12-31)
        ----------------
        
        * put order id into TxnData1 so that exported DPS reports have
        an order id we can cross check against orders in getpaid order
        manager [matt.halstead]
        
        0.2 (2008-08-29)
        ----------------
        
        * Added buildout files and general text documents to project root.
        * removed setup.cfg
        
        
        Detailed Documentation
        **********************
        
        This is a Payment Processor for the PaymentExpress PXPay hosted Payments solution
        SEE: http://www.paymentexpress.com/technical_resources/ecommerce_hosted/pxpay.html
        
        Installation
        ------------
        
        You need to load both the package zcml and the overrides.zcml
        
        In buildout, make sure you have the egg getpaid.pxpay installed, in
        the zope instance configuration, add the following:
        
        eggs = getpaid.pxpay
        
        
        Mechanics
        ---------
        
        We hook into the last checkout and payment step of the checkout so
        that the user is redirected to the pxpay web interface to fill out
        their credit card details and the redirected back to our site where we
        handle success or failure status of the transaction.
        
        Deferred payment, repeating payments, authorisations, etc, are not yet
        implemented, but the PXPay interface supports them, so there's no
        reason they can't be added.
        
        Orders and Finance workflow
        ---------------------------
        
        An orders persistence and workflow is managed entirely by this payment
        processor. Since we hook into the last step of the checkout, we are
        responsible for creating the order, storing it in the manager, and
        handling the finance workflow.
        
        When a user selects "make payment"
        
        - an order is created and stored in the order manager (i.e. it is now
        persistent in the zodb)
        
        - finance workflow:  None  -->  REVIEWING
        
        - the order is authorized - which means a payment request is made to
        pxpay.
        
        If pxpay returns saying this is ok and here is the url to redirect to,
        then we update the finance workflow: REVIEWING --> CHARGEABLE -->
        CHARGING (note: CHARGEABLE --> CHARGING is an automatic transition.
        
        The user is redirected to the pxpay web interface to enter credit card
        details. The site then redirects them back to our callback and we
        negotiate a response message. This tells us whether the payment was
        successful or not.
        
        If the payment was successful, then we update the finance workflow:
        CHARGING --> CHARGED
        
        If the payment was unsuccessful, then we update the finance workflow:
        CHARGING --> PAYMENT_DECLINED
        
        If there is an error in the communication with pxpay, then we update
        the finance workflow: * --> CANCELLED_BY_PROCESSOR with a comment
        that this was a communication error. We don't destroy the cart though
        so the user can try again.
        
        The error handler for a communications error is a utility so that it
        can be overriden easily, for example to redirect the user to another
        view.
        
        Requirements
        ------------
        
        1) A developer account with PaymentExpress
        2) GetPaid core
        3) zc.ssl
        4) elementtree
        5) plone (tested on plone 3.1)
        
        
        Contributors
        ------------
        
        Darryl Dixon <darryl.dixon@winterhouseconsulting.com>
        Matt Halstead <matt@elyt.com>
        
        Download
        **********************
        
Keywords: getpaid pxpay payment
Platform: UNKNOWN
Classifier: Framework :: Plone
Classifier: Programming Language :: Python
Classifier: Framework :: Zope3
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Zope Public License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Office/Business :: Financial
Classifier: Topic :: Software Development :: Libraries

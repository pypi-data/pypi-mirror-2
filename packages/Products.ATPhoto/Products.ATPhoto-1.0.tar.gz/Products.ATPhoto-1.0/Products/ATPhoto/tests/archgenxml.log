main       DEBUG Reading command line options first.
options    DEBUG Running an action 'store' for option '-o', value '../../ATPhoto'.
main       DEBUG Model file is '/opt/zope2.7.8/Products/ATPhoto/model/ATPhoto.zuml'.
main       DEBUG Figuring out the settings we're passing to the main program...
main       DEBUG Keys available through the option parser: ['ape_support', 'author', 'backreferences_support', 'build_msgcatalog', 'config_file', 'copyright', 'customization_policy', 'default_creation_permission', 'default_field_generation', 'detailed_creation_permissions', 'email', 'force', 'generateActions', 'generateDefaultActions', 'generate_packages', 'generated_date', 'i18n_content_support', 'license', 'method_preservation', 'module_info_header', 'noclass', 'outfilename', 'parse_packages', 'prefix', 'rcs_id', 'relation_implementation', 'sql_storage_support', 'strip_html', 'unknownTypesAsString', 'widget_enhancement'].
main       DEBUG Option 'ape_support' has value '0'.
main       DEBUG Option 'author' has value ''.
main       DEBUG Option 'backreferences_support' has value 'None'.
main       DEBUG Option 'build_msgcatalog' has value '1'.
main       DEBUG Option 'config_file' has value 'None'.
main       DEBUG Option 'copyright' has value ''.
main       DEBUG Option 'customization_policy' has value '0'.
main       DEBUG Option 'default_creation_permission' has value 'Add portal content'.
main       DEBUG Option 'default_field_generation' has value '0'.
main       DEBUG Option 'detailed_creation_permissions' has value '0'.
main       DEBUG Option 'email' has value ''.
main       DEBUG Option 'force' has value '1'.
main       DEBUG Option 'generateActions' has value '1'.
main       DEBUG Option 'generateDefaultActions' has value '0'.
main       DEBUG Option 'generate_packages' has value 'None'.
main       DEBUG Option 'generated_date' has value '0'.
main       DEBUG Option 'i18n_content_support' has value '0'.
main       DEBUG Option 'license' has value 'GNU General Public Licence (GPL)

This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA'.
main       DEBUG Option 'method_preservation' has value '1'.
main       DEBUG Option 'module_info_header' has value '1'.
main       DEBUG Option 'noclass' has value '0'.
main       DEBUG Option 'outfilename' has value '../../ATPhoto'.
main       DEBUG Option 'parse_packages' has value 'None'.
main       DEBUG Option 'prefix' has value ''.
main       DEBUG Option 'rcs_id' has value '0'.
main       DEBUG Option 'relation_implementation' has value 'basic'.
main       DEBUG Option 'sql_storage_support' has value '0'.
main       DEBUG Option 'strip_html' has value '0'.
main       DEBUG Option 'unknownTypesAsString' has value '0'.
main       DEBUG Option 'widget_enhancement' has value '1'.
generator  DEBUG Initializing ArchetypesGenerator. We're being passed a file '/opt/zope2.7.8/Products/ATPhoto/model/ATPhoto.zuml' and keyword arguments {'detailed_creation_permissions': 0, 'force': 1, 'backreferences_support': None, 'prefix': '', 'generateActions': 1, 'generated_date': 0, 'relation_implementation': 'basic', 'customization_policy': 0, 'generate_packages': None, 'sql_storage_support': 0, 'copyright': '', 'author': '', 'outfilename': '../../ATPhoto', 'generateDefaultActions': 0, 'email': '', 'config_file': None, 'rcs_id': 0, 'module_info_header': 1, 'default_creation_permission': 'Add portal content', 'build_msgcatalog': 1, 'i18n_content_support': 0, 'license': 'GNU General Public Licence (GPL)\n\nThis program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\nYou should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA', 'default_field_generation': 0, 'unknownTypesAsString': 0, 'method_preservation': 1, 'widget_enhancement': 1, 'strip_html': 0, 'ape_support': 0, 'noclass': 0, 'parse_packages': None}.
generator  DEBUG After copying over the keyword arguments (read: OptionParser's options), outfilename is '../../ATPhoto'.
generator  DEBUG Stripped off the eventual trailing slashes: '../../ATPhoto'.
generator  DEBUG Targetroot is set to everything except the last directory in the outfilename: ../...
generator  DEBUG Initialization finished.
generator  INFO  Parsing...
generator  DEBUG Opening zargo...
XMIparser  DEBUG XMI version: 1.2
XMIparser  DEBUG Using xmi 1.2+ parser.
XMIparser  DEBUG Initializing from DOM: name='model 2', id='I7b5411m10672d3af2cmm7640'.
XMIparser  DEBUG Gathering the taggedvalues for element model 2.
XMIparser  DEBUG Found nothing.
XMIparser  DEBUG Initializing from DOM: name='tests', id='I108294em1067dd30a72mm7dbe'.
XMIparser  DEBUG Gathering the taggedvalues for element tests.
XMIparser  DEBUG Found nothing.
XMIparser  DEBUG Adding stereotype 'tests' to this element's internal list.
XMIparser  DEBUG Stereotype found: id='I108294em1067dd30a72mm7ed5', name='tests'.
XMIparser  DEBUG Initialising class.
XMIparser  DEBUG Package set to 'model 2'.
XMIparser  DEBUG Running StateMachineContainer's init...
XMIparser  DEBUG Running XMIElement's init...
XMIparser  DEBUG Initializing from DOM: name='ATPhoto', id='I7b5411m10672d3af2cmm763c'.
XMIparser  DEBUG Gathering the taggedvalues for element ATPhoto.
XMIparser  DEBUG Getting tagname/tagvalue pair from tag. Looking recursively for that taggedvalue.
XMIparser  DEBUG Found tag 'base_class' with value 'ATImage'.
XMIparser  DEBUG Getting tagname/tagvalue pair from tag. Looking recursively for that taggedvalue.
XMIparser  DEBUG Found tag 'base_schema' with value 'ATImageSchema'.
XMIparser  DEBUG Getting tagname/tagvalue pair from tag. Looking recursively for that taggedvalue.
XMIparser  DEBUG Found tag 'imports' with value 'from PIL import Image as PILImage '.
XMIparser  DEBUG Getting tagname/tagvalue pair from tag. Looking recursively for that taggedvalue.
XMIparser  DEBUG Found tag 'imports' with value 'from PIL.IptcImagePlugin  import getiptcinfo'.
XMIparser  DEBUG Invoking Poseidon multiline fix for tagname 'imports'.
XMIparser  DEBUG Getting tagname/tagvalue pair from tag. Looking recursively for that taggedvalue.
XMIparser  DEBUG Found tag 'imports' with value 'from Products.ATPhoto.IPTCInfo import IPTCInfo '.
XMIparser  DEBUG Invoking Poseidon multiline fix for tagname 'imports'.
XMIparser  DEBUG Getting tagname/tagvalue pair from tag. Looking recursively for that taggedvalue.
XMIparser  DEBUG Found tag 'imports' with value 'from Products.ATContentTypes.content.image import ATImageSchema'.
XMIparser  DEBUG Invoking Poseidon multiline fix for tagname 'imports'.
TGVregistry DEBUG Checking tag 'base_class' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'base_class' (category 'class') exists in the registry.
TGVregistry DEBUG Checking tag 'base_schema' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'base_schema' (category 'class') exists in the registry.
TGVregistry DEBUG Checking tag 'imports' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'imports' (category 'class') exists in the registry.
XMIparser  DEBUG Found the following tagged values: {u'base_class': u'ATImage', u'base_schema': u'ATImageSchema', u'imports': u'from PIL import Image as PILImage \nfrom PIL.IptcImagePlugin  import getiptcinfo\nfrom Products.ATPhoto.IPTCInfo import IPTCInfo \nfrom Products.ATContentTypes.content.image import ATImageSchema'}.
XMIparser  DEBUG Trying to find statemachines...
XMIparser  DEBUG Setting ownedElement to self.domElement as fallback.
XMIparser  DEBUG We set the owned element as: <DOM Element: UML:Class at 0xb7a4df0c>.
XMIparser  DEBUG Found the following statemachines: [].
XMIparser  DEBUG Initializing from DOM: name='iptcDescription', id='I7b5411m10672d3af2cmm761d'.
XMIparser  DEBUG Gathering the taggedvalues for element iptcDescription.
XMIparser  DEBUG Getting tagname/tagvalue pair from tag. Looking recursively for that taggedvalue.
XMIparser  DEBUG Found tag 'widget:label' with value 'IPTC Description'.
TGVregistry DEBUG Checking tag 'widget:label' (category 'XMIParser.XMIAttribute') in the registry...
TGVregistry DEBUG Tag 'widget:label' (category 'attribute') exists in the registry.
XMIparser  DEBUG Found the following tagged values: {u'widget:label': u'IPTC Description'}.
XMIparser  DEBUG Initializing from DOM: name='iptcCredit', id='I7b5411m10672d3af2cmm7607'.
XMIparser  DEBUG Gathering the taggedvalues for element iptcCredit.
XMIparser  DEBUG Getting tagname/tagvalue pair from tag. Looking recursively for that taggedvalue.
XMIparser  DEBUG Found tag 'widget:label' with value 'IPTC Credit'.
TGVregistry DEBUG Checking tag 'widget:label' (category 'XMIParser.XMIAttribute') in the registry...
TGVregistry DEBUG Tag 'widget:label' (category 'attribute') exists in the registry.
XMIparser  DEBUG Found the following tagged values: {u'widget:label': u'IPTC Credit'}.
XMIparser  DEBUG Initializing from DOM: name='attribute_1', id='I7544a6m1067d719db4mm7efc'.
XMIparser  DEBUG Gathering the taggedvalues for element attribute_1.
XMIparser  DEBUG Found nothing.
XMIparser  DEBUG Initialising class.
XMIparser  DEBUG Package set to 'model 2'.
XMIparser  DEBUG Running StateMachineContainer's init...
XMIparser  DEBUG Running XMIElement's init...
XMIparser  DEBUG Initializing from DOM: name='string', id='I7b5411m10672d3af2cmm7608'.
XMIparser  DEBUG Gathering the taggedvalues for element string.
XMIparser  DEBUG Found nothing.
XMIparser  DEBUG Trying to find statemachines...
XMIparser  DEBUG Setting ownedElement to self.domElement as fallback.
XMIparser  DEBUG We set the owned element as: <DOM Element: UML:Class at 0xb784404c>.
XMIparser  DEBUG Found the following statemachines: [].
XMIparser  DEBUG Initialising class.
XMIparser  DEBUG Package set to 'model 2'.
XMIparser  DEBUG Running StateMachineContainer's init...
XMIparser  DEBUG Running XMIElement's init...
XMIparser  DEBUG Initializing from DOM: name='computed', id='I7b5411m10672d3af2cmm75cc'.
XMIparser  DEBUG Gathering the taggedvalues for element computed.
XMIparser  DEBUG Found nothing.
XMIparser  DEBUG Trying to find statemachines...
XMIparser  DEBUG Setting ownedElement to self.domElement as fallback.
XMIparser  DEBUG We set the owned element as: <DOM Element: UML:Class at 0xb784a08c>.
XMIparser  DEBUG Found the following statemachines: [].
XMIparser  DEBUG Initialising class.
XMIparser  DEBUG Package set to 'tests'.
XMIparser  DEBUG Running StateMachineContainer's init...
XMIparser  DEBUG Running XMIElement's init...
XMIparser  DEBUG Initializing from DOM: name='testATContentTypeBase', id='I108294em1067dd30a72mm7d92'.
XMIparser  DEBUG Gathering the taggedvalues for element testATContentTypeBase.
XMIparser  DEBUG Found nothing.
XMIparser  DEBUG Adding stereotype 'plone_testcase' to this element's internal list.
XMIparser  DEBUG Stereotype found: id='I108294em1067dd30a72mm7ea8', name='plone_testcase'.
XMIparser  DEBUG Trying to find statemachines...
XMIparser  DEBUG Setting ownedElement to self.domElement as fallback.
XMIparser  DEBUG We set the owned element as: <DOM Element: UML:Class at 0xb784d82c>.
XMIparser  DEBUG Found the following statemachines: [].
XMIparser  DEBUG Initialising class.
XMIparser  DEBUG Package set to 'tests'.
XMIparser  DEBUG Running StateMachineContainer's init...
XMIparser  DEBUG Running XMIElement's init...
XMIparser  DEBUG Initializing from DOM: name='testATContentTypeExifInterface', id='I108294em1067dd30a72mm7d8b'.
XMIparser  DEBUG Gathering the taggedvalues for element testATContentTypeExifInterface.
XMIparser  DEBUG Found nothing.
XMIparser  DEBUG Adding stereotype 'doc_testcase' to this element's internal list.
XMIparser  DEBUG Stereotype found: id='I108294em1067dd30a72mm7e9f', name='doc_testcase'.
XMIparser  DEBUG Trying to find statemachines...
XMIparser  DEBUG Setting ownedElement to self.domElement as fallback.
XMIparser  DEBUG We set the owned element as: <DOM Element: UML:Class at 0xb784de0c>.
XMIparser  DEBUG Found the following statemachines: [].
XMIparser  DEBUG Found the following state machines: [].
XMIparser  DEBUG Trying to find statemachines...
XMIparser  DEBUG We set the owned element as: <DOM Element: UML:Namespace.ownedElement at 0xb784d7cc>.
XMIparser  DEBUG Found the following statemachines: [].
XMIparser  DEBUG Initializing from DOM: name='Class Diagram_1', id='I7b5411m10672d3af2cmm763f'.
XMIparser  DEBUG Gathering the taggedvalues for element Class Diagram_1.
XMIparser  DEBUG Found nothing.
XMIparser  DEBUG Initializing from DOM: name='Package Overview: tests', id='I108294em1067dd30a72mm7dbd'.
XMIparser  DEBUG Gathering the taggedvalues for element Package Overview: tests.
XMIparser  DEBUG Found nothing.
XMIparser  DEBUG Initializing from DOM: name='Package Overview: model 2', id='I108294em1067dd30a72mm7d69'.
XMIparser  DEBUG Gathering the taggedvalues for element Package Overview: model 2.
XMIparser  DEBUG Found nothing.
XMIparser  DEBUG Looking if element has stereotype ['field', 'compound_field']
XMIparser  DEBUG Getting method definitions (recursive=0)...
XMIparser  DEBUG Our own methods: [].
XMIparser  DEBUG Internal class (not generated): 'string'.
XMIparser  DEBUG Looking if element has stereotype ['field', 'compound_field']
XMIparser  DEBUG Getting method definitions (recursive=0)...
XMIparser  DEBUG Our own methods: [].
XMIparser  DEBUG Internal class (not generated): 'computed'.
generator  DEBUG We've got an self.outfilename: ../../ATPhoto.
generator  DEBUG We've split off the last directory name: ATPhoto.
XMIparser  DEBUG Setting our name to 'ATPhoto' the hard way. The automatic mechanism set it to 'model 2' already.
generator  DEBUG Set the name of the root generator to that directory name.
generator  INFO  Directory in which we're generating the files: '../../ATPhoto'.
generator  INFO  Generating...
generator  DEBUG Method bodies will be preserved
generator  WARNING Can't strip html from doc-strings. Module 'stripogram' not found.
XMIparser  DEBUG Looking if element has stereotype ['odStub', 'stub']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIModel'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIModel'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIModel'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIModel'].
XMIparser  DEBUG Stereotype '%s' is registered.
generator  INFO  Starting new Product: 'ATPhoto'.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Calling makeDir to create 'ATPhoto'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto'.
utils      DEBUG Trying to make directory '../../ATPhoto' (force=1).
utils      DEBUG Directory already exists. Fine.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Calling makeDir to create 'ATPhoto/skins'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/skins'.
utils      DEBUG Trying to make directory '../../ATPhoto/skins' (force=1).
utils      DEBUG Directory already exists. Fine.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Calling makeDir to create 'ATPhoto/skins/ATPhoto'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/skins/ATPhoto'.
utils      DEBUG Trying to make directory '../../ATPhoto/skins/ATPhoto' (force=1).
utils      DEBUG Directory already exists. Fine.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Calling makeDir to create 'ATPhoto/skins/ATPhoto_public'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/skins/ATPhoto_public'.
utils      DEBUG Trying to make directory '../../ATPhoto/skins/ATPhoto_public' (force=1).
utils      DEBUG Directory already exists. Fine.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Calling makeFile to create 'ATPhoto/skins/ATPhoto_public/readme.txt'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/skins/ATPhoto_public/readme.txt'.
utils      DEBUG Making file '../../ATPhoto/skins/ATPhoto_public/readme.txt' (force=1).
utils      DEBUG Opening the file for writing and returning it.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Calling makeFile to create 'ATPhoto/skins/ATPhoto/readme.txt'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/skins/ATPhoto/readme.txt'.
utils      DEBUG Making file '../../ATPhoto/skins/ATPhoto/readme.txt' (force=1).
utils      DEBUG Opening the file for writing and returning it.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Calling makeDir to create 'ATPhoto/i18n'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/i18n'.
utils      DEBUG Trying to make directory '../../ATPhoto/i18n' (force=1).
utils      DEBUG Directory already exists. Fine.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Calling makeFile to create 'ATPhoto/i18n/generated.pot'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/i18n/generated.pot'.
utils      DEBUG Making file '../../ATPhoto/i18n/generated.pot' (force=1).
utils      DEBUG Opening the file for writing and returning it.
XMIparser  DEBUG Finding associations originating at this class...
XMIparser  DEBUG Params: aggtypes='['none']', aggtypesTo='['none']'.
XMIparser  DEBUG Associations found: [].
XMIparser  DEBUG Finding associations originating at this class...
XMIparser  DEBUG Params: aggtypes='['none']', aggtypesTo='['none']'.
XMIparser  DEBUG Associations found: [].
XMIparser  DEBUG Finding associations originating at this class...
XMIparser  DEBUG Params: aggtypes='['none']', aggtypesTo='['none']'.
XMIparser  DEBUG Associations found: [].
XMIparser  DEBUG Finding associations originating at this class...
XMIparser  DEBUG Params: aggtypes='['none']', aggtypesTo='['none']'.
XMIparser  DEBUG Associations found: [].
XMIparser  DEBUG Finding associations originating at this class...
XMIparser  DEBUG Params: aggtypes='['none']', aggtypesTo='['none']'.
XMIparser  DEBUG Associations found: [].
XMIparser  DEBUG Finding associations originating at this class...
XMIparser  DEBUG Params: aggtypes='['none']', aggtypesTo='['none']'.
XMIparser  DEBUG Associations found: [].
XMIparser  DEBUG Finding associations originating at this class...
XMIparser  DEBUG Params: aggtypes='['none']', aggtypesTo='['none']'.
XMIparser  DEBUG Associations found: [].
generator  DEBUG Generating package <XMIParser.XMIModel instance at 0xb7a4292c>.
XMIparser  DEBUG Looking if element has stereotype ['odStub', 'stub']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIModel'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIModel'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIModel'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIModel'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Calling makeDir to create 'ATPhoto'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto'.
utils      DEBUG Trying to make directory '../../ATPhoto' (force=1).
utils      DEBUG Directory already exists. Fine.
XMIparser  DEBUG Looking if element has stereotype ['odStub', 'stub']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'module' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Filename (joined with targetroot) is '../../ATPhoto/ATPhoto.py'.
pyparser   DEBUG Initialising module parser for file '../../ATPhoto/ATPhoto.py'.
generator  DEBUG Existing sources found for element ATPhoto: ATPhoto/ATPhoto.py.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Getting info for the header...
basegenerator DEBUG Trying to get value of option 'copyright' for element 'ATPhoto' (default value is '', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is ''.
generator  DEBUG Copyright = 'Copyright (c) 2005 by '.
basegenerator DEBUG Trying to get value of option 'license' for element 'ATPhoto' (default value is 'GNU General Public Licence (GPL)

This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is 'GNU General Public Licence (GPL)

This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA'.
generator  DEBUG License: 'GNU General Public Licence (GPL)\n# \n# This program is free software; you can redistribute it and/or modify it under\n# the terms of the GNU General Public License as published by the Free Software\n# Foundation; either version 2 of the License, or (at your option) any later\n# version.\n# This program is distributed in the hope that it will be useful, but WITHOUT\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n# details.\n# You should have received a copy of the GNU General Public License along with\n# this program; if not, write to the Free Software Foundation, Inc., 59 Temple\n# Place, Suite 330, Boston, MA  02111-1307  USA'.
generator  DEBUG Getting the authors...
basegenerator DEBUG Trying to get value of option 'author' for element 'ATPhoto' (default value is '', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is ''.
generator  DEBUG Trying to split authors on ','.
generator  DEBUG Found the following authors: ['unknown'].
generator  DEBUG Getting the email addresses.
basegenerator DEBUG Trying to get value of option 'email' for element 'ATPhoto' (default value is '', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is ''.
generator  DEBUG Found the following email addresses: ['<unknown>'].
basegenerator DEBUG Trying to get value of option 'rcs_id' for element 'ATPhoto' (default value is 'False', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is '0'.
generator  DEBUG Not creating those pesky svn-unfriendly rcs-id tags.
basegenerator DEBUG Trying to get value of option 'generated_date' for element 'ATPhoto' (default value is 'False', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is '0'.
basegenerator DEBUG Finding suitable dispatching stereotype for element...
umlprofile DEBUG Finding stereotypes for entities ['XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
basegenerator DEBUG Dispatching stereotypes found in our UML profile: [<StereoType name=plone_testcase entities=['XMIClass']>, <StereoType name=widget entities=['XMIClass']>, <StereoType name=content_class entities=['XMIClass']>, <StereoType name=field entities=['XMIClass']>, <StereoType name=setup_testcase entities=['XMIClass']>, <StereoType name=interface_testcase entities=['XMIClass']>, <StereoType name=testcase entities=['XMIClass']>, <StereoType name=doc_testcase entities=['XMIClass']>, <StereoType name=python_class entities=['XMIClass']>].
XMIparser  DEBUG Looking if element has stereotype 'plone_testcase'
XMIparser  DEBUG Looking if element has stereotype 'widget'
XMIparser  DEBUG Looking if element has stereotype 'content_class'
XMIparser  DEBUG Looking if element has stereotype 'field'
XMIparser  DEBUG Looking if element has stereotype 'setup_testcase'
XMIparser  DEBUG Looking if element has stereotype 'interface_testcase'
XMIparser  DEBUG Looking if element has stereotype 'testcase'
XMIparser  DEBUG Looking if element has stereotype 'doc_testcase'
XMIparser  DEBUG Looking if element has stereotype 'python_class'
generator  INFO      Generating class 'ATPhoto'.
basegenerator DEBUG Trying to get value of option 'creation_permission' for element 'ATPhoto' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'creation_roles' for element 'ATPhoto' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'i18ncontent' for element 'ATPhoto' (default value is '0', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value '0'.
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Found the following parents: '[]'.
generator  DEBUG Generating dependent imports...
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Found the following parents: '[]'.
XMIparser  DEBUG Finding associations originating at this class...
XMIparser  DEBUG Params: aggtypes='['none']', aggtypesTo='['none']'.
XMIparser  DEBUG Associations found: [].
XMIparser  DEBUG Getting value for tag 'validation_expression' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'validation_expression' (category 'XMIParser.XMIAttribute') in the registry...
TGVregistry DEBUG Tag 'validation_expression' (category 'attribute') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'validation_expression' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'validation_expression' (category 'XMIParser.XMIAttribute') in the registry...
TGVregistry DEBUG Tag 'validation_expression' (category 'attribute') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'validation_expression' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'validation_expression' (category 'XMIParser.XMIAttribute') in the registry...
TGVregistry DEBUG Tag 'validation_expression' (category 'attribute') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Also looking recursively up the family tree.
XMIparser  DEBUG Found the following parents: '[]'.
generator  DEBUG Generating additional imports...
XMIparser  DEBUG Finding associations originating at this class...
XMIparser  DEBUG Params: aggtypes='['none']', aggtypesTo='['none']'.
XMIparser  DEBUG Associations found: [].
XMIparser  DEBUG Finding associations pointing at this class...
XMIparser  DEBUG Params: aggtypes='['none']', aggtypesTo='['none']'.
XMIparser  DEBUG Associations found: [].
XMIparser  DEBUG Looking if element has stereotype 'variable_schema'
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['vocabulary_term']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['vocabulary']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Searching for presence of an attribute with tag 'vocabulary:type'.
XMIparser  DEBUG But the value should be 'ATVocabularyManager'.
XMIparser  DEBUG No, found nothing.
XMIparser  DEBUG Looking if element has stereotype ['CMFMember', 'member']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
basegenerator DEBUG Trying to get value of option 'sql_storage_support' for element 'ATPhoto' (default value is '0', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is '0'.
basegenerator DEBUG Trying to get value of option 'imports' for element 'ATPhoto' (default value is 'None', aggregate is 'True').
basegenerator DEBUG Found the element.
basegenerator DEBUG The element has a matching tagged value.
XMIparser  DEBUG Getting value for tag 'imports' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'imports' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'imports' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value 'from PIL import Image as PILImage 
from PIL.IptcImagePlugin  import getiptcinfo
from Products.ATPhoto.IPTCInfo import IPTCInfo 
from Products.ATContentTypes.content.image import ATImageSchema',
basegenerator DEBUG The value is 'from PIL import Image as PILImage 
from PIL.IptcImagePlugin  import getiptcinfo
from Products.ATPhoto.IPTCInfo import IPTCInfo 
from Products.ATContentTypes.content.image import ATImageSchema'.
basegenerator DEBUG Adding the value to the aggregate.
XMIparser  DEBUG Getting value for tag 'imports' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'imports' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'imports' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value 'from PIL import Image as PILImage 
from PIL.IptcImagePlugin  import getiptcinfo
from Products.ATPhoto.IPTCInfo import IPTCInfo 
from Products.ATContentTypes.content.image import ATImageSchema',
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Didn't find anything, return the current aggregated value.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Looking if element has stereotype ['CMFMember', 'member']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Getting value for tag 'disable_polymorphing' (default=0). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'disable_polymorphing' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'disable_polymorphing' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '0',
XMIparser  DEBUG Getting value for tag 'allowed_content_types' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'allowed_content_types' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'allowed_content_types' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Found the following parents: '[]'.
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Found the following parents: '[]'.
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Also looking recursively up the family tree.
XMIparser  DEBUG Found the following parents: '[]'.
XMIparser  DEBUG Getting value for tag 'additional_parents' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'additional_parents' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'additional_parents' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Determining whether the element 'ATPhoto' is folderish...
generator  DEBUG Found 0 aggregated classes.
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Found the following parents: '[]'.
generator  DEBUG Found 0 parents with aggregated classes.
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Also looking recursively up the family tree.
XMIparser  DEBUG Found the following parents: '[]'.
generator  DEBUG Found 0 aggregated interfaces.
generator  DEBUG Based on this info and the tagged value 'folderish' or the stereotypes 'folder' and 'ordered', we look if it's a folder.
XMIparser  DEBUG Getting value for tag 'folderish' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'folderish' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'folderish' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Looking if element has stereotype ['folder', 'ordered', 'large', 'btree']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
generator  DEBUG End verdict on folderish character: False.
XMIparser  DEBUG Looking if element has stereotype ['CMFMember', 'member']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Getting value for tag 'base_class' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'base_class' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'base_class' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value 'ATImage',
XMIparser  DEBUG Getting value for tag 'base_class' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'base_class' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'base_class' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value 'ATImage',
XMIparser  DEBUG Getting value for tag 'base_schema' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'base_schema' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'base_schema' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value 'ATImageSchema',
XMIparser  DEBUG Getting value for tag 'base_schema' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'base_schema' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'base_schema' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value 'ATImageSchema',
XMIparser  DEBUG Getting value for tag 'base_class' (default=1). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'base_class' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'base_class' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value 'ATImage',
XMIparser  DEBUG Looking if element has stereotype 'mixin'
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype 'variable_schema'
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Also looking recursively up the family tree.
XMIparser  DEBUG Found the following parents: '[]'.
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
TGVregistry DEBUG Checking tag 'widget:label' (category 'XMIParser.XMIAttribute') in the registry...
TGVregistry DEBUG Tag 'widget:label' (category 'attribute') exists in the registry.
basegenerator DEBUG Trying to get value of option 'storage' for element 'iptcDescription' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'callStorageOnSet' for element 'iptcDescription' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'call_storage_on_set' for element 'iptcDescription' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'read_permission' for element 'iptcDescription' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'write_permission' for element 'iptcDescription' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
TGVregistry DEBUG Checking tag 'widget:label' (category 'XMIParser.XMIAttribute') in the registry...
TGVregistry DEBUG Tag 'widget:label' (category 'attribute') exists in the registry.
basegenerator DEBUG Trying to get value of option 'default:widget:computed' for element 'iptcDescription' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
TGVregistry DEBUG Checking tag 'widget:label' (category 'XMIParser.XMIAttribute') in the registry...
TGVregistry DEBUG Tag 'widget:label' (category 'attribute') exists in the registry.
XMIparser  DEBUG Trying to find documentation for this element.
XMIparser  DEBUG First trying a tagged value.
XMIparser  DEBUG Getting value for tag 'documentation' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'documentation' (category 'XMIParser.XMIAttribute') in the registry...
TGVregistry DEBUG Tag 'documentation' (category 'attribute') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Didn't find a tagged value 'documentation'. Returning empty string.
generator  DEBUG Trying to get formatted field. name='iptcDescription', fieldtype='ComputedField', doc='', rawType='computed'.
TGVregistry DEBUG Checking tag 'widget:label' (category 'XMIParser.XMIAttribute') in the registry...
TGVregistry DEBUG Tag 'widget:label' (category 'attribute') exists in the registry.
basegenerator DEBUG Trying to get value of option 'storage' for element 'iptcCredit' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'callStorageOnSet' for element 'iptcCredit' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'call_storage_on_set' for element 'iptcCredit' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'read_permission' for element 'iptcCredit' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'write_permission' for element 'iptcCredit' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
TGVregistry DEBUG Checking tag 'widget:label' (category 'XMIParser.XMIAttribute') in the registry...
TGVregistry DEBUG Tag 'widget:label' (category 'attribute') exists in the registry.
basegenerator DEBUG Trying to get value of option 'default:widget:computed' for element 'iptcCredit' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
TGVregistry DEBUG Checking tag 'widget:label' (category 'XMIParser.XMIAttribute') in the registry...
TGVregistry DEBUG Tag 'widget:label' (category 'attribute') exists in the registry.
XMIparser  DEBUG Trying to find documentation for this element.
XMIparser  DEBUG First trying a tagged value.
XMIparser  DEBUG Getting value for tag 'documentation' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'documentation' (category 'XMIParser.XMIAttribute') in the registry...
TGVregistry DEBUG Tag 'documentation' (category 'attribute') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Didn't find a tagged value 'documentation'. Returning empty string.
generator  DEBUG Trying to get formatted field. name='iptcCredit', fieldtype='ComputedField', doc='', rawType='computed'.
basegenerator DEBUG Trying to get value of option 'storage' for element 'attribute_1' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'callStorageOnSet' for element 'attribute_1' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'call_storage_on_set' for element 'attribute_1' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'read_permission' for element 'attribute_1' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'write_permission' for element 'attribute_1' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'default:widget:string' for element 'attribute_1' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
XMIparser  DEBUG Trying to find documentation for this element.
XMIparser  DEBUG First trying a tagged value.
XMIparser  DEBUG Getting value for tag 'documentation' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'documentation' (category 'XMIParser.XMIAttribute') in the registry...
TGVregistry DEBUG Tag 'documentation' (category 'attribute') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Didn't find a tagged value 'documentation'. Returning empty string.
generator  DEBUG Trying to get formatted field. name='attribute_1', fieldtype='StringField', doc='', rawType='string'.
XMIparser  DEBUG Finding associations originating at this class...
XMIparser  DEBUG Params: aggtypes='['none']', aggtypesTo='['none']'.
XMIparser  DEBUG Associations found: [].
XMIparser  DEBUG Finding associations pointing at this class...
XMIparser  DEBUG Params: aggtypes='['none']', aggtypesTo='['none']'.
XMIparser  DEBUG Associations found: [].
XMIparser  DEBUG Getting value for tag 'marshaller' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'marshaller' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'marshaller' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'marshall' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'marshall' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'marshall' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Found the following parents: '[]'.
XMIparser  DEBUG Looking if element has stereotype ['CMFMember', 'member']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Trying to find documentation for this element.
XMIparser  DEBUG First trying a tagged value.
XMIparser  DEBUG Getting value for tag 'documentation' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'documentation' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'documentation' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Didn't find a tagged value 'documentation'. Returning empty string.
XMIparser  DEBUG Getting value for tag 'class_header' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'class_header' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'class_header' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'archetype_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'archetype_name' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'archetype_name' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'label' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'label' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'label' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'portal_type' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'portal_type' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'portal_type' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'inherit_allowed_types' (default=True). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'inherit_allowed_types' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'inherit_allowed_types' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value 'True',
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Found the following parents: '[]'.
XMIparser  DEBUG Getting value for tag 'inherit_allowed_types' (default=True). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'inherit_allowed_types' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'inherit_allowed_types' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value 'True',
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Found the following parents: '[]'.
XMIparser  DEBUG Getting value for tag 'base_actions' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'base_actions' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'base_actions' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'default_actions' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'default_actions' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'default_actions' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Generating method actions...
generator  DEBUG First finding our methods.
XMIparser  DEBUG Getting method definitions (recursive=0)...
XMIparser  DEBUG Our own methods: [].
XMIparser  DEBUG Getting value for tag 'immediate_view' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'immediate_view' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'immediate_view' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'default_view' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'default_view' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'default_view' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'suppl_views' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'suppl_views' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'suppl_views' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Trying to figure out if the class is dependent.
XMIparser  DEBUG Finding associations pointing at this class...
XMIparser  DEBUG Params: aggtypes='['aggregate']', aggtypesTo='['none']'.
XMIparser  DEBUG Associations found: [].
XMIparser  DEBUG Found aggregations that contain us: [].
XMIparser  DEBUG Finding associations pointing at this class...
XMIparser  DEBUG Params: aggtypes='['composite']', aggtypesTo='['none']'.
XMIparser  DEBUG Associations found: [].
XMIparser  DEBUG Found compositions that contain us: [].
XMIparser  DEBUG Our placing is not fixed, we're not dependent.
XMIparser  DEBUG Check, though, if one of the parents is dependent.If True, count the class as dependent.
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Found the following parents: '[]'.
XMIparser  DEBUG End verdict: dependent = '0'.
XMIparser  DEBUG Looking if element has stereotype 'hidden'
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['vocabulary_term']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['CMFMember', 'member']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Getting value for tag 'global_allow' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'global_allow' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'global_allow' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'global_allow' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'global_allow' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'global_allow' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'content_icon' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'content_icon' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'content_icon' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Getting value for tag 'toolicon' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'toolicon' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'toolicon' (category 'tool') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'allow_discussion' (default=0). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'allow_discussion' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'allow_discussion' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '0',
generator  DEBUG Determining whether the element 'ATPhoto' is folderish...
generator  DEBUG Found 0 aggregated classes.
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Found the following parents: '[]'.
generator  DEBUG Found 0 parents with aggregated classes.
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Also looking recursively up the family tree.
XMIparser  DEBUG Found the following parents: '[]'.
generator  DEBUG Found 0 aggregated interfaces.
generator  DEBUG Based on this info and the tagged value 'folderish' or the stereotypes 'folder' and 'ordered', we look if it's a folder.
XMIparser  DEBUG Getting value for tag 'folderish' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'folderish' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'folderish' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Looking if element has stereotype ['folder', 'ordered', 'large', 'btree']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
generator  DEBUG End verdict on folderish character: False.
XMIparser  DEBUG Getting value for tag 'filter_content_types' (default=False). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'filter_content_types' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'filter_content_types' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value 'False',
XMIparser  DEBUG Getting value for tag 'archetype_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'archetype_name' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'archetype_name' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'label' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'label' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'label' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'typeDescription' (default=ATPhoto). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'typeDescription' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'typeDescription' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value 'ATPhoto',
basegenerator DEBUG Trying to get value of option 'rename_after_creation' for element 'ATPhoto' (default value is 'False', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'False'.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Getting method definitions (recursive=1)...
XMIparser  DEBUG Our own methods: [].
XMIparser  DEBUG Also looking recursively to our parents...
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Also looking recursively up the family tree.
XMIparser  DEBUG Found the following parents: '[]'.
XMIparser  DEBUG Our total methods: [].
XMIparser  DEBUG Getting method definitions (recursive=0)...
XMIparser  DEBUG Our own methods: [].
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
generator  DEBUG We are to preserve methods, so we're looking for manual methods.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG The class has the following methods: [].
generator  DEBUG Found the following manual methods: [].
XMIparser  DEBUG Getting value for tag 'hide_actions' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'hide_actions' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'hide_actions' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Looking if element has stereotype ['vocabulary_term']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['vocabulary']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Getting value for tag 'creation_permission' (default=None). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'creation_permission' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'creation_permission' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value 'None',
XMIparser  DEBUG Getting value for tag 'creation_roles' (default=None). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'creation_roles' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'creation_roles' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value 'None',
generator  DEBUG The outfile is ready to be written to disk now. Loading it with the pyparser just to be sure we're not writing broken files to disk.
pyparser   DEBUG Initialising module parser for file '# File: ATPhoto.py
# 
# Copyright (c) 2005 by 
# Generator: ArchGenXML Version 1.4.0-beta2 devel 
#            http://plone.org/products/archgenxml
#
# GNU General Public Licence (GPL)
# 
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA  02111-1307  USA
#
__author__  = '''unknown <unknown>'''
__docformat__ = 'plaintext'


from AccessControl import ClassSecurityInfo
from Products.Archetypes.atapi import *



# additional imports from tagged value 'import'
from PIL import Image as PILImage 
from PIL.IptcImagePlugin  import getiptcinfo
from Products.ATPhoto.IPTCInfo import IPTCInfo 
from Products.ATContentTypes.content.image import ATImageSchema

from Products.ATPhoto.config import *
##code-section module-header #fill in your manual code here
##/code-section module-header

schema=Schema((
    ComputedField('iptcDescription',
        widget=ComputedWidget(
            label="IPTC Description",
            label_msgid='ATPhoto_label_iptcDescription',
            description_msgid='ATPhoto_help_iptcDescription',
            i18n_domain='ATPhoto',
        )
    ),

    ComputedField('iptcCredit',
        widget=ComputedWidget(
            label="IPTC Credit",
            label_msgid='ATPhoto_label_iptcCredit',
            description_msgid='ATPhoto_help_iptcCredit',
            i18n_domain='ATPhoto',
        )
    ),

    StringField('attribute_1',
        widget=StringWidget(
            label='Attribute_1',
            label_msgid='ATPhoto_label_attribute_1',
            description_msgid='ATPhoto_help_attribute_1',
            i18n_domain='ATPhoto',
        )
    ),

),
)


##code-section after-local-schema #fill in your manual code here
##/code-section after-local-schema

ATPhoto_schema = ATImageSchema + \
    schema

##code-section after-schema #fill in your manual code here
##/code-section after-schema

class ATPhoto(ATImage):
    security = ClassSecurityInfo()
    __implements__ = (getattr(ATImage,'__implements__',()),)


    # This name appears in the 'add' box
    archetype_name             = 'ATPhoto'

    meta_type                  = 'ATPhoto'
    portal_type                = 'ATPhoto'
    allowed_content_types      = []
    filter_content_types       = 0
    global_allow               = 1
    allow_discussion           = 0
    #content_icon               = 'ATPhoto.gif'
    immediate_view             = 'base_view'
    default_view               = 'base_view'
    suppl_views                = ()
    typeDescription            = "ATPhoto"
    typeDescMsgId              = 'description_edit_atphoto'

    schema = ATPhoto_schema

    ##code-section class-header #fill in your manual code here
    ##/code-section class-header


    #Methods

registerType(ATPhoto,PROJECTNAME)
# end of class ATPhoto

##code-section module-footer #fill in your manual code here
##/code-section module-footer


'.
generator  DEBUG Nothing wrong with the outfile 'ATPhoto/ATPhoto.py'.
generator  DEBUG Calling makeFile to create 'ATPhoto/ATPhoto.py'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/ATPhoto.py'.
utils      DEBUG Making file '../../ATPhoto/ATPhoto.py' (force=1).
utils      DEBUG Opening the file for writing and returning it.
generator  DEBUG Ignoring unnecessary class 'string'.
generator  DEBUG Ignoring unnecessary class 'computed'.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
generator  INFO      Generating package 'tests'.
generator  DEBUG Generating package <XMIParser.XMIPackage instance at 0xb77a920c>.
XMIparser  DEBUG Looking if element has stereotype ['odStub', 'stub']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIPackage'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIPackage'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIPackage'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIPackage'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Calling makeDir to create 'ATPhoto/tests'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/tests'.
utils      DEBUG Trying to make directory '../../ATPhoto/tests' (force=1).
utils      DEBUG Directory already exists. Fine.
XMIparser  DEBUG Looking if element has stereotype ['odStub', 'stub']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'module' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Filename (joined with targetroot) is '../../ATPhoto/tests/testATContentTypeBase.py'.
pyparser   DEBUG Initialising module parser for file '../../ATPhoto/tests/testATContentTypeBase.py'.
pyparser   DEBUG Calculating the code length for test_suite.
pyparser   DEBUG That strange self.code.co_lnotab is '\x00\x01\x13\x01\t\x01\x13\x01' with a length of 8.
pyparser   DEBUG Iterating, i=0.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character,  ,  is 0.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 1.
pyparser   DEBUG Iterating, i=2.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character, ,  is 19.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 2.
pyparser   DEBUG Iterating, i=4.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character, 	,  is 9.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 3.
pyparser   DEBUG Iterating, i=6.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character, ,  is 19.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 4.
pyparser   DEBUG Added 1 to the length, returning 5.
generator  DEBUG Existing sources found for element testATContentTypeBase: ATPhoto/tests/testATContentTypeBase.py.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Getting info for the header...
basegenerator DEBUG Trying to get value of option 'copyright' for element 'testATContentTypeBase' (default value is '', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: tests.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is ''.
generator  DEBUG Copyright = 'Copyright (c) 2005 by '.
basegenerator DEBUG Trying to get value of option 'license' for element 'testATContentTypeBase' (default value is 'GNU General Public Licence (GPL)

This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: tests.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is 'GNU General Public Licence (GPL)

This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA'.
generator  DEBUG License: 'GNU General Public Licence (GPL)\n# \n# This program is free software; you can redistribute it and/or modify it under\n# the terms of the GNU General Public License as published by the Free Software\n# Foundation; either version 2 of the License, or (at your option) any later\n# version.\n# This program is distributed in the hope that it will be useful, but WITHOUT\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n# details.\n# You should have received a copy of the GNU General Public License along with\n# this program; if not, write to the Free Software Foundation, Inc., 59 Temple\n# Place, Suite 330, Boston, MA  02111-1307  USA'.
generator  DEBUG Getting the authors...
basegenerator DEBUG Trying to get value of option 'author' for element 'testATContentTypeBase' (default value is '', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: tests.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is ''.
generator  DEBUG Trying to split authors on ','.
generator  DEBUG Found the following authors: ['unknown'].
generator  DEBUG Getting the email addresses.
basegenerator DEBUG Trying to get value of option 'email' for element 'testATContentTypeBase' (default value is '', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: tests.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is ''.
generator  DEBUG Found the following email addresses: ['<unknown>'].
basegenerator DEBUG Trying to get value of option 'rcs_id' for element 'testATContentTypeBase' (default value is 'False', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: tests.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is '0'.
generator  DEBUG Not creating those pesky svn-unfriendly rcs-id tags.
basegenerator DEBUG Trying to get value of option 'generated_date' for element 'testATContentTypeBase' (default value is 'False', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: tests.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is '0'.
basegenerator DEBUG Finding suitable dispatching stereotype for element...
umlprofile DEBUG Finding stereotypes for entities ['XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
basegenerator DEBUG Dispatching stereotypes found in our UML profile: [<StereoType name=plone_testcase entities=['XMIClass']>, <StereoType name=widget entities=['XMIClass']>, <StereoType name=content_class entities=['XMIClass']>, <StereoType name=field entities=['XMIClass']>, <StereoType name=setup_testcase entities=['XMIClass']>, <StereoType name=interface_testcase entities=['XMIClass']>, <StereoType name=testcase entities=['XMIClass']>, <StereoType name=doc_testcase entities=['XMIClass']>, <StereoType name=python_class entities=['XMIClass']>].
XMIparser  DEBUG Looking if element has stereotype 'plone_testcase'
XMIparser  DEBUG Looking if element has stereotype 'widget'
XMIparser  DEBUG Looking if element has stereotype 'content_class'
XMIparser  DEBUG Looking if element has stereotype 'field'
XMIparser  DEBUG Looking if element has stereotype 'setup_testcase'
XMIparser  DEBUG Looking if element has stereotype 'interface_testcase'
XMIparser  DEBUG Looking if element has stereotype 'testcase'
XMIparser  DEBUG Looking if element has stereotype 'doc_testcase'
XMIparser  DEBUG Looking if element has stereotype 'python_class'
utils      DEBUG Trying to read template 'tests/runalltests.py'.
utils      DEBUG Trying to find it in template directory '/opt/ArchGenXML/templates'.
utils      DEBUG Succesfully opened the template, returning it.
utils      DEBUG Trying to read template 'tests/framework.py'.
utils      DEBUG Trying to find it in template directory '/opt/ArchGenXML/templates'.
utils      DEBUG Succesfully opened the template, returning it.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Calling makeFile to create 'ATPhoto/tests/runalltests.py'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/tests/runalltests.py'.
utils      DEBUG Making file '../../ATPhoto/tests/runalltests.py' (force=1).
utils      DEBUG Opening the file for writing and returning it.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Calling makeFile to create 'ATPhoto/tests/framework.py'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/tests/framework.py'.
utils      DEBUG Making file '../../ATPhoto/tests/framework.py' (force=1).
utils      DEBUG Opening the file for writing and returning it.
generator  INFO          Generating testcase 'testATContentTypeBase'.
XMIparser  DEBUG Looking if element has stereotype 'plone_testcase'
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Found the following parents: '[]'.
utils      DEBUG Trying to read template 'tests/PloneTestcase.py'.
utils      DEBUG Trying to find it in template directory '/opt/ArchGenXML/templates'.
utils      DEBUG Succesfully opened the template, returning it.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'policy' (default=None). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'policy' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'policy' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value 'None',
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
generator  DEBUG The outfile is ready to be written to disk now. Loading it with the pyparser just to be sure we're not writing broken files to disk.
pyparser   DEBUG Initialising module parser for file '# File: testATContentTypeBase.py
# 
# Copyright (c) 2005 by 
# Generator: ArchGenXML Version 1.4.0-beta2 devel 
#            http://plone.org/products/archgenxml
#
# GNU General Public Licence (GPL)
# 
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA  02111-1307  USA
#
__author__  = '''unknown <unknown>'''
__docformat__ = 'plaintext'

import os, sys
if __name__ == '__main__':
    execfile(os.path.join(sys.path[0], 'framework.py'))

##code-section module-header #fill in your manual code here
##/code-section module-header

#
# Base TestCase for ATPhoto
#
from Testing import ZopeTestCase
from Products.PloneTestCase import PloneTestCase

ZopeTestCase.installProduct('Archetypes')
ZopeTestCase.installProduct('PortalTransforms', quiet=1)
ZopeTestCase.installProduct('MimetypesRegistry', quiet=1)
ZopeTestCase.installProduct('ATPhoto')
# If the products's config includes DEPENDENCIES, install them too
try:
    from Products.ATPhoto.config import DEPENDENCIES
except:
    DEPENDENCIES = []
for dependency in DEPENDENCIES:
    ZopeTestCase.installProduct(dependency)

PRODUCTS = ('Archetypes', 'ATPhoto')

testcase = PloneTestCase.PloneTestCase
PloneTestCase.setupPloneSite(products=PRODUCTS)

class testATContentTypeBase(testcase):
    """ Base TestCase for ATPhoto"""
    ##code-section class-header_testATContentTypeBase #fill in your manual code here
    ##/code-section class-header_testATContentTypeBase

    # Commented out for now, it gets blasted at the moment anyway.
    # Place it in the protected section if you need it.
    #def afterSetUp(self):
    #    """
    #    """
    #    pass

def test_suite():
    from unittest import TestSuite, makeSuite
    suite = TestSuite()
    suite.addTest(makeSuite(testATContentTypeBase))
    return suite

##code-section module-footer #fill in your manual code here
##/code-section module-footer


if __name__ == '__main__':
    framework()

'.
pyparser   DEBUG Calculating the code length for test_suite.
pyparser   DEBUG That strange self.code.co_lnotab is '\x00\x01\x13\x01\t\x01\x13\x01' with a length of 8.
pyparser   DEBUG Iterating, i=0.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character,  ,  is 0.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 1.
pyparser   DEBUG Iterating, i=2.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character, ,  is 19.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 2.
pyparser   DEBUG Iterating, i=4.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character, 	,  is 9.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 3.
pyparser   DEBUG Iterating, i=6.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character, ,  is 19.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 4.
pyparser   DEBUG Added 1 to the length, returning 5.
generator  DEBUG Nothing wrong with the outfile 'ATPhoto/tests/testATContentTypeBase.py'.
generator  DEBUG Calling makeFile to create 'ATPhoto/tests/testATContentTypeBase.py'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/tests/testATContentTypeBase.py'.
utils      DEBUG Making file '../../ATPhoto/tests/testATContentTypeBase.py' (force=1).
utils      DEBUG Opening the file for writing and returning it.
XMIparser  DEBUG Looking if element has stereotype ['odStub', 'stub']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'module' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Filename (joined with targetroot) is '../../ATPhoto/tests/testATContentTypeExifInterface.py'.
pyparser   DEBUG Initialising module parser for file '../../ATPhoto/tests/testATContentTypeExifInterface.py'.
pyparser   DEBUG Calculating the code length for afterSetUp.
pyparser   DEBUG That strange self.code.co_lnotab is '\x00\x02\x00\x01' with a length of 4.
pyparser   DEBUG Iterating, i=0.
pyparser   DEBUG Getting the ord() from , which is 2.
pyparser   DEBUG The ord() from the unused other character,  ,  is 0.
pyparser   DEBUG cl (code length?) is 2.
pyparser   DEBUG Added it to res, total length is now 2.
pyparser   DEBUG Iterating, i=2.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character,  ,  is 0.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 3.
pyparser   DEBUG Added 1 to the length, returning 4.
pyparser   DEBUG Calculating the code length for test_suite.
pyparser   DEBUG That strange self.code.co_lnotab is '\x00\x01\r\x01\r\x02\t\x02\x06\x01' with a length of 10.
pyparser   DEBUG Iterating, i=0.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character,  ,  is 0.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 1.
pyparser   DEBUG Iterating, i=2.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character, ,  is 13.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 2.
pyparser   DEBUG Iterating, i=4.
pyparser   DEBUG Getting the ord() from , which is 2.
pyparser   DEBUG The ord() from the unused other character, ,  is 13.
pyparser   DEBUG cl (code length?) is 2.
pyparser   DEBUG Added it to res, total length is now 4.
pyparser   DEBUG Iterating, i=6.
pyparser   DEBUG Getting the ord() from , which is 2.
pyparser   DEBUG The ord() from the unused other character, 	,  is 9.
pyparser   DEBUG cl (code length?) is 2.
pyparser   DEBUG Added it to res, total length is now 6.
pyparser   DEBUG Iterating, i=8.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character, ,  is 6.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 7.
pyparser   DEBUG Added 1 to the length, returning 8.
generator  DEBUG Existing sources found for element testATContentTypeExifInterface: ATPhoto/tests/testATContentTypeExifInterface.py.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Getting info for the header...
basegenerator DEBUG Trying to get value of option 'copyright' for element 'testATContentTypeExifInterface' (default value is '', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: tests.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is ''.
generator  DEBUG Copyright = 'Copyright (c) 2005 by '.
basegenerator DEBUG Trying to get value of option 'license' for element 'testATContentTypeExifInterface' (default value is 'GNU General Public Licence (GPL)

This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: tests.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is 'GNU General Public Licence (GPL)

This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA'.
generator  DEBUG License: 'GNU General Public Licence (GPL)\n# \n# This program is free software; you can redistribute it and/or modify it under\n# the terms of the GNU General Public License as published by the Free Software\n# Foundation; either version 2 of the License, or (at your option) any later\n# version.\n# This program is distributed in the hope that it will be useful, but WITHOUT\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n# details.\n# You should have received a copy of the GNU General Public License along with\n# this program; if not, write to the Free Software Foundation, Inc., 59 Temple\n# Place, Suite 330, Boston, MA  02111-1307  USA'.
generator  DEBUG Getting the authors...
basegenerator DEBUG Trying to get value of option 'author' for element 'testATContentTypeExifInterface' (default value is '', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: tests.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is ''.
generator  DEBUG Trying to split authors on ','.
generator  DEBUG Found the following authors: ['unknown'].
generator  DEBUG Getting the email addresses.
basegenerator DEBUG Trying to get value of option 'email' for element 'testATContentTypeExifInterface' (default value is '', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: tests.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is ''.
generator  DEBUG Found the following email addresses: ['<unknown>'].
basegenerator DEBUG Trying to get value of option 'rcs_id' for element 'testATContentTypeExifInterface' (default value is 'False', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: tests.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is '0'.
generator  DEBUG Not creating those pesky svn-unfriendly rcs-id tags.
basegenerator DEBUG Trying to get value of option 'generated_date' for element 'testATContentTypeExifInterface' (default value is 'False', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: tests.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is '0'.
basegenerator DEBUG Finding suitable dispatching stereotype for element...
umlprofile DEBUG Finding stereotypes for entities ['XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
basegenerator DEBUG Dispatching stereotypes found in our UML profile: [<StereoType name=plone_testcase entities=['XMIClass']>, <StereoType name=widget entities=['XMIClass']>, <StereoType name=content_class entities=['XMIClass']>, <StereoType name=field entities=['XMIClass']>, <StereoType name=setup_testcase entities=['XMIClass']>, <StereoType name=interface_testcase entities=['XMIClass']>, <StereoType name=testcase entities=['XMIClass']>, <StereoType name=doc_testcase entities=['XMIClass']>, <StereoType name=python_class entities=['XMIClass']>].
XMIparser  DEBUG Looking if element has stereotype 'plone_testcase'
XMIparser  DEBUG Looking if element has stereotype 'widget'
XMIparser  DEBUG Looking if element has stereotype 'content_class'
XMIparser  DEBUG Looking if element has stereotype 'field'
XMIparser  DEBUG Looking if element has stereotype 'setup_testcase'
XMIparser  DEBUG Looking if element has stereotype 'interface_testcase'
XMIparser  DEBUG Looking if element has stereotype 'testcase'
XMIparser  DEBUG Looking if element has stereotype 'doc_testcase'
XMIparser  DEBUG Looking if element has stereotype 'python_class'
utils      DEBUG Trying to read template 'tests/testdoc.txt'.
utils      DEBUG Trying to find it in template directory '/opt/ArchGenXML/templates'.
utils      DEBUG Succesfully opened the template, returning it.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'doctest_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'doctest_name' (category 'XMIParser.XMIClass') in the registry...
TGVregistry WARNING Tag 'doctest_name' (category 'XMIParser.XMIClass') is not self-documented.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Calling makeDir to create 'ATPhoto/doc'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/doc'.
utils      DEBUG Trying to make directory '../../ATPhoto/doc' (force=1).
utils      DEBUG Directory already exists. Fine.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
utils      DEBUG Trying to open '../../ATPhoto/doc/testATContentTypeExifInterface.txt' for reading.
utils      DEBUG Done, returing result.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Calling makeFile to create 'ATPhoto/doc/__init__.py'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/doc/__init__.py'.
utils      DEBUG Making file '../../ATPhoto/doc/__init__.py' (force=1).
utils      DEBUG Opening the file for writing and returning it.
generator  INFO          Generating testcase 'testATContentTypeExifInterface'.
XMIparser  DEBUG Looking if element has stereotype 'plone_testcase'
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Found the following parents: '[<XMIParser.XMIClass instance at 0xb77a9ccc>]'.
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Found the following parents: '[<XMIParser.XMIClass instance at 0xb77a9ccc>]'.
utils      DEBUG Trying to read template 'tests/DocTestcase.py'.
utils      DEBUG Trying to find it in template directory '/opt/ArchGenXML/templates'.
utils      DEBUG Succesfully opened the template, returning it.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype 'module'
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'module' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting method definitions (recursive=1)...
XMIparser  DEBUG Our own methods: [].
XMIparser  DEBUG Also looking recursively to our parents...
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Also looking recursively up the family tree.
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Also looking recursively up the family tree.
XMIparser  DEBUG Found the following parents: '[]'.
XMIparser  DEBUG Found the following parents: '[<XMIParser.XMIClass instance at 0xb77a9ccc>]'.
XMIparser  DEBUG Getting method definitions (recursive=0)...
XMIparser  DEBUG Our own methods: [].
XMIparser  DEBUG Our total methods: [].
XMIparser  DEBUG Getting method definitions (recursive=0)...
XMIparser  DEBUG Our own methods: [].
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting method definitions (recursive=1)...
XMIparser  DEBUG Our own methods: [].
XMIparser  DEBUG Also looking recursively to our parents...
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Also looking recursively up the family tree.
XMIparser  DEBUG Looking for this class's parents...
XMIparser  DEBUG Also looking recursively up the family tree.
XMIparser  DEBUG Found the following parents: '[]'.
XMIparser  DEBUG Found the following parents: '[<XMIParser.XMIClass instance at 0xb77a9ccc>]'.
XMIparser  DEBUG Getting method definitions (recursive=0)...
XMIparser  DEBUG Our own methods: [].
XMIparser  DEBUG Our total methods: [].
XMIparser  DEBUG Getting method definitions (recursive=0)...
XMIparser  DEBUG Our own methods: [].
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
generator  DEBUG The outfile is ready to be written to disk now. Loading it with the pyparser just to be sure we're not writing broken files to disk.
pyparser   DEBUG Initialising module parser for file '# File: testATContentTypeExifInterface.py
# 
# Copyright (c) 2005 by 
# Generator: ArchGenXML Version 1.4.0-beta2 devel 
#            http://plone.org/products/archgenxml
#
# GNU General Public Licence (GPL)
# 
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA  02111-1307  USA
#
__author__  = '''unknown <unknown>'''
__docformat__ = 'plaintext'

import os, sys
if __name__ == '__main__':
    execfile(os.path.join(sys.path[0], 'framework.py'))

##code-section module-header #fill in your manual code here
##/code-section module-header

#
# test-cases for class(es) 
#
import os, sys
from Testing import ZopeTestCase
from Products.ATPhoto.tests.testATContentTypeBase import testATContentTypeBase
# import the tested classes

class testATContentTypeExifInterface(testATContentTypeBase):
    """ test-cases for class(es) 
    """

    ##code-section class-header_testATContentTypeExifInterface #fill in your manual code here
    ##/code-section class-header_testATContentTypeExifInterface

    def afterSetUp(self):
        """
        """
        pass



    # Manually created methods


def test_suite():
    from unittest import TestSuite
    from Testing.ZopeTestCase.zopedoctest import ZopeDocFileSuite

    return TestSuite((
        ZopeDocFileSuite('testATContentTypeExifInterface.txt',
                         package='Products.ATPhoto.doc',
                         test_class=testATContentTypeExifInterface),
    ))


##code-section module-footer #fill in your manual code here
##/code-section module-footer


if __name__ == '__main__':
    framework()

'.
pyparser   DEBUG Calculating the code length for afterSetUp.
pyparser   DEBUG That strange self.code.co_lnotab is '\x00\x02\x00\x01' with a length of 4.
pyparser   DEBUG Iterating, i=0.
pyparser   DEBUG Getting the ord() from , which is 2.
pyparser   DEBUG The ord() from the unused other character,  ,  is 0.
pyparser   DEBUG cl (code length?) is 2.
pyparser   DEBUG Added it to res, total length is now 2.
pyparser   DEBUG Iterating, i=2.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character,  ,  is 0.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 3.
pyparser   DEBUG Added 1 to the length, returning 4.
pyparser   DEBUG Calculating the code length for test_suite.
pyparser   DEBUG That strange self.code.co_lnotab is '\x00\x01\r\x01\r\x02\t\x02\x06\x01' with a length of 10.
pyparser   DEBUG Iterating, i=0.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character,  ,  is 0.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 1.
pyparser   DEBUG Iterating, i=2.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character, ,  is 13.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 2.
pyparser   DEBUG Iterating, i=4.
pyparser   DEBUG Getting the ord() from , which is 2.
pyparser   DEBUG The ord() from the unused other character, ,  is 13.
pyparser   DEBUG cl (code length?) is 2.
pyparser   DEBUG Added it to res, total length is now 4.
pyparser   DEBUG Iterating, i=6.
pyparser   DEBUG Getting the ord() from , which is 2.
pyparser   DEBUG The ord() from the unused other character, 	,  is 9.
pyparser   DEBUG cl (code length?) is 2.
pyparser   DEBUG Added it to res, total length is now 6.
pyparser   DEBUG Iterating, i=8.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character, ,  is 6.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 7.
pyparser   DEBUG Added 1 to the length, returning 8.
generator  DEBUG Nothing wrong with the outfile 'ATPhoto/tests/testATContentTypeExifInterface.py'.
generator  DEBUG Calling makeFile to create 'ATPhoto/tests/testATContentTypeExifInterface.py'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/tests/testATContentTypeExifInterface.py'.
utils      DEBUG Making file '../../ATPhoto/tests/testATContentTypeExifInterface.py' (force=1).
utils      DEBUG Opening the file for writing and returning it.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'module' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'module' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
pyparser   DEBUG Initialising module parser for file '../../ATPhoto/tests/__init__.py'.
utils      DEBUG Trying to read template '__init_package__.py'.
utils      DEBUG Trying to find it in template directory '/opt/ArchGenXML/templates'.
utils      DEBUG Succesfully opened the template, returning it.
XMIparser  DEBUG Looking if element has stereotype ['tests']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIPackage') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'package') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Calling makeFile to create 'ATPhoto/tests/__init__.py'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/tests/__init__.py'.
utils      DEBUG Making file '../../ATPhoto/tests/__init__.py' (force=1).
utils      DEBUG Opening the file for writing and returning it.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Calling makeFile to create 'ATPhoto/refresh.txt'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/refresh.txt'.
utils      DEBUG Making file '../../ATPhoto/refresh.txt' (force=1).
utils      DEBUG Opening the file for writing and returning it.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
utils      DEBUG Trying to open '../../ATPhoto/version.txt' for reading.
utils      DEBUG Done, returing result.
generator  DEBUG Calling makeFile to create 'ATPhoto/version.txt'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/version.txt'.
utils      DEBUG Making file '../../ATPhoto/version.txt' (force=1).
utils      DEBUG Opening the file for writing and returning it.
XMIparser  DEBUG Looking if element has stereotype 'tests'
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIPackage'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIPackage'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype 'tests'
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'module' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value '',
basegenerator DEBUG Trying to get value of option 'additional_permission' for element 'ATPhoto' (default value is '[]', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value '[]'.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
pyparser   DEBUG Initialising module parser for file '../../ATPhoto/__init__.py'.
pyparser   DEBUG Calculating the code length for initialize.
pyparser   DEBUG That strange self.code.co_lnotab is '\x00\x06\t\x03\x0c\x02\x12\x02\r\x02\x06\x01\x06\x01\x06\x01\x13\x04\x17\x01\r\x01' with a length of 22.
pyparser   DEBUG Iterating, i=0.
pyparser   DEBUG Getting the ord() from , which is 6.
pyparser   DEBUG The ord() from the unused other character,  ,  is 0.
pyparser   DEBUG cl (code length?) is 6.
pyparser   DEBUG Added it to res, total length is now 6.
pyparser   DEBUG Iterating, i=2.
pyparser   DEBUG Getting the ord() from , which is 3.
pyparser   DEBUG The ord() from the unused other character, 	,  is 9.
pyparser   DEBUG cl (code length?) is 3.
pyparser   DEBUG Added it to res, total length is now 9.
pyparser   DEBUG Iterating, i=4.
pyparser   DEBUG Getting the ord() from , which is 2.
pyparser   DEBUG The ord() from the unused other character, ,  is 12.
pyparser   DEBUG cl (code length?) is 2.
pyparser   DEBUG Added it to res, total length is now 11.
pyparser   DEBUG Iterating, i=6.
pyparser   DEBUG Getting the ord() from , which is 2.
pyparser   DEBUG The ord() from the unused other character, ,  is 18.
pyparser   DEBUG cl (code length?) is 2.
pyparser   DEBUG Added it to res, total length is now 13.
pyparser   DEBUG Iterating, i=8.
pyparser   DEBUG Getting the ord() from , which is 2.
pyparser   DEBUG The ord() from the unused other character, ,  is 13.
pyparser   DEBUG cl (code length?) is 2.
pyparser   DEBUG Added it to res, total length is now 15.
pyparser   DEBUG Iterating, i=10.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character, ,  is 6.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 16.
pyparser   DEBUG Iterating, i=12.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character, ,  is 6.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 17.
pyparser   DEBUG Iterating, i=14.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character, ,  is 6.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 18.
pyparser   DEBUG Iterating, i=16.
pyparser   DEBUG Getting the ord() from , which is 4.
pyparser   DEBUG The ord() from the unused other character, ,  is 19.
pyparser   DEBUG cl (code length?) is 4.
pyparser   DEBUG Added it to res, total length is now 22.
pyparser   DEBUG Iterating, i=18.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character, ,  is 23.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 23.
pyparser   DEBUG Iterating, i=20.
pyparser   DEBUG Getting the ord() from , which is 1.
pyparser   DEBUG The ord() from the unused other character, ,  is 13.
pyparser   DEBUG cl (code length?) is 1.
pyparser   DEBUG Added it to res, total length is now 24.
pyparser   DEBUG Added 1 to the length, returning 25.
utils      DEBUG Trying to read template '__init__.py'.
utils      DEBUG Trying to find it in template directory '/opt/ArchGenXML/templates'.
utils      DEBUG Succesfully opened the template, returning it.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Calling makeFile to create 'ATPhoto/__init__.py'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/__init__.py'.
utils      DEBUG Making file '../../ATPhoto/__init__.py' (force=1).
utils      DEBUG Opening the file for writing and returning it.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
pyparser   DEBUG Initialising module parser for file '../../ATPhoto/config.py'.
basegenerator DEBUG Trying to get value of option 'creation_permission' for element 'ATPhoto' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
utils      DEBUG Trying to read template 'config.py'.
utils      DEBUG Trying to find it in template directory '/opt/ArchGenXML/templates'.
utils      DEBUG Succesfully opened the template, returning it.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['CMFMember', 'member']
XMIparser  DEBUG Looking if element has stereotype ['CMFMember', 'member']
XMIparser  DEBUG Looking if element has stereotype ['CMFMember', 'member']
generator  DEBUG Calling makeFile to create 'ATPhoto/config.py'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/config.py'.
utils      DEBUG Making file '../../ATPhoto/config.py' (force=1).
utils      DEBUG Opening the file for writing and returning it.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Calling makeDir to create 'ATPhoto/Extensions'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/Extensions'.
utils      DEBUG Trying to make directory '../../ATPhoto/Extensions' (force=1).
utils      DEBUG Directory already exists. Fine.
generator  DEBUG Calling makeFile to create 'ATPhoto/Extensions/__init__.py'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/Extensions/__init__.py'.
utils      DEBUG Making file '../../ATPhoto/Extensions/__init__.py' (force=1).
utils      DEBUG Opening the file for writing and returning it.
utils      DEBUG Trying to read template 'Install.py'.
utils      DEBUG Trying to find it in template directory '/opt/ArchGenXML/templates'.
utils      DEBUG Succesfully opened the template, returning it.
generator  DEBUG Getting info for the header...
basegenerator DEBUG Trying to get value of option 'copyright' for element 'ATPhoto' (default value is '', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is ''.
generator  DEBUG Copyright = 'Copyright (c) 2005 by '.
basegenerator DEBUG Trying to get value of option 'license' for element 'ATPhoto' (default value is 'GNU General Public Licence (GPL)

This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is 'GNU General Public Licence (GPL)

This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA'.
generator  DEBUG License: 'GNU General Public Licence (GPL)\n# \n# This program is free software; you can redistribute it and/or modify it under\n# the terms of the GNU General Public License as published by the Free Software\n# Foundation; either version 2 of the License, or (at your option) any later\n# version.\n# This program is distributed in the hope that it will be useful, but WITHOUT\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n# details.\n# You should have received a copy of the GNU General Public License along with\n# this program; if not, write to the Free Software Foundation, Inc., 59 Temple\n# Place, Suite 330, Boston, MA  02111-1307  USA'.
generator  DEBUG Getting the authors...
basegenerator DEBUG Trying to get value of option 'author' for element 'ATPhoto' (default value is '', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is ''.
generator  DEBUG Trying to split authors on ','.
generator  DEBUG Found the following authors: ['unknown'].
generator  DEBUG Getting the email addresses.
basegenerator DEBUG Trying to get value of option 'email' for element 'ATPhoto' (default value is '', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is ''.
generator  DEBUG Found the following email addresses: ['<unknown>'].
basegenerator DEBUG Trying to get value of option 'rcs_id' for element 'ATPhoto' (default value is 'False', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is '0'.
generator  DEBUG Not creating those pesky svn-unfriendly rcs-id tags.
basegenerator DEBUG Trying to get value of option 'generated_date' for element 'ATPhoto' (default value is 'False', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Found a matching option (passed on the commandline or in the configfile).
basegenerator DEBUG The value is '0'.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['CMFMember', 'member']
XMIparser  DEBUG Looking if element has stereotype ['CMFMember', 'member']
XMIparser  DEBUG Looking if element has stereotype ['CMFMember', 'member']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
basegenerator DEBUG Trying to get value of option 'migrate_dynamic_view_fti' for element 'ATPhoto' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'migrate_dynamic_view_fti' for element 'testATContentTypeBase' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: tests.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'migrate_dynamic_view_fti' for element 'testATContentTypeExifInterface' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: tests.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
basegenerator DEBUG Trying to get value of option 'migrate_dynamic_view_fti' for element 'ATPhoto' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'migrate_dynamic_view_fti' for element 'testATContentTypeBase' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: tests.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'migrate_dynamic_view_fti' for element 'testATContentTypeExifInterface' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: tests.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'hide_folder_tabs' (default=False). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'hide_folder_tabs' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'hide_folder_tabs' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value 'False',
XMIparser  DEBUG Getting value for tag 'hide_folder_tabs' (default=False). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'hide_folder_tabs' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'hide_folder_tabs' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value 'False',
XMIparser  DEBUG Getting value for tag 'hide_folder_tabs' (default=False). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'hide_folder_tabs' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'hide_folder_tabs' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value 'False',
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['CMFMember', 'member']
XMIparser  DEBUG Looking if element has stereotype ['CMFMember', 'member']
XMIparser  DEBUG Looking if element has stereotype ['CMFMember', 'member']
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
basegenerator DEBUG Trying to get value of option 'use_workflow' for element 'ATPhoto' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'use_workflow' for element 'testATContentTypeBase' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: tests.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
basegenerator DEBUG Trying to get value of option 'use_workflow' for element 'testATContentTypeExifInterface' (default value is 'None', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: tests.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'None'.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
basegenerator DEBUG Trying to get value of option 'use_portal_factory' for element 'ATPhoto' (default value is 'False', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'False'.
basegenerator DEBUG Trying to get value of option 'use_portal_factory' for element 'testATContentTypeBase' (default value is 'False', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: tests.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'False'.
basegenerator DEBUG Trying to get value of option 'use_portal_factory' for element 'testATContentTypeExifInterface' (default value is 'False', aggregate is 'False').
basegenerator DEBUG Found the element.
basegenerator DEBUG Trying our parent: tests.
basegenerator DEBUG Trying our parent: ATPhoto.
basegenerator DEBUG Found nothing in the assorted taggedvalues.
basegenerator DEBUG Now looking in the options.
basegenerator DEBUG Returning default value 'False'.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Getting value for tag 'hide_folder_tabs' (default=False). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'hide_folder_tabs' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'hide_folder_tabs' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value 'False',
XMIparser  DEBUG Getting value for tag 'hide_folder_tabs' (default=False). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'hide_folder_tabs' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'hide_folder_tabs' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value 'False',
XMIparser  DEBUG Getting value for tag 'hide_folder_tabs' (default=False). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'hide_folder_tabs' (category 'XMIParser.XMIClass') in the registry...
TGVregistry DEBUG Tag 'hide_folder_tabs' (category 'class') exists in the registry.
XMIparser  DEBUG Returning value 'False',
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
umlprofile DEBUG Finding stereotypes for entities ['XMIParser.XMIClass'].
umlprofile DEBUG Stripped off 'XMIParser.': ['XMIClass'].
XMIparser  DEBUG Stereotype '%s' is registered.
XMIparser  DEBUG Looking if element has stereotype ['product', 'zopeproduct', 'Product', 'ZopeProduct']
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
XMIparser  DEBUG Looking if element has stereotype ['portal_tool', 'tool']
generator  DEBUG Calling makeFile to create 'ATPhoto/Extensions/Install.py'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/Extensions/Install.py'.
utils      DEBUG Making file '../../ATPhoto/Extensions/Install.py' (force=1).
utils      DEBUG Opening the file for writing and returning it.
XMIparser  DEBUG Getting value for tag 'module' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
XMIparser  DEBUG Getting value for tag 'module_name' (default=). Note: we're not doing this recursively.
TGVregistry DEBUG Checking tag 'module_name' (category 'XMIParser.XMIModel') in the registry...
TGVregistry DEBUG Tag 'module_name' (category 'model') exists in the registry.
XMIparser  DEBUG Returning value '',
generator  DEBUG Calling makeFile to create 'ATPhoto/i18n/generated.pot'.
generator  DEBUG Together with the targetroot that means '../../ATPhoto/i18n/generated.pot'.
utils      DEBUG Making file '../../ATPhoto/i18n/generated.pot' (force=1).
utils      DEBUG Opening the file for writing and returning it.

A registration backend which requires payment from paypal before the
account can be activated.
The workflow is:

1. User signs up for account.
2. User is directed to paypal to pay for their account.
3. Paypal notifies site that account has been paid for.
4. User receives email containing instructions for activating the account.
5. User activates and begins using the site.

To use it:
* ensure registration and paypal_registration are both in settings.py
    INSTALLED_APPS
* add a PAYPAL_ID setting to settings.py. This can be either the e-mail
    address associated with your paypal seller account, or the secure
    ID paypal assigns. You can get this id by checking the unencrypted form
    code for a buy it now button you create on site.
* add a USE_PAYPAL_SANDBOX boolean setting to settings.py. This can be used
     for testing. See developer.paypal.com for details. This value is set
     to *True* by default, which means you have to explicitly set it to
     False in production instances.
* run syncdb to install the paypal_registration model
* ensure the sites model is correctly set up for your site in the django
     admin. It is used to construct the paypal IPN url, so make sure it's
     correct.
* create the normal django-registration templates (for the default backend) as well as:
    * registration/pay_with_paypal.html which shows a 'pay now' button.
         There is an example template in the app templates directory for
         this, but you should create your own.
    * registration/confirm_payment_received.html which is the template
         redirected to when paypal has processed payment and sends the user
         back to your site.

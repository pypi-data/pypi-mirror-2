##################################################################################
# $project BUILDOUT
# This buildout install zope3
# You can have a look to the little kgs part which can generate all the eggs kfgs version for you.
#echo '#\n'
# To start the zeoserver and control it, you have an init script:
#     ./bin/zeoserver.sh
#echo '#\n'
#
# You have too paster configuration files in etc/
#    prod.ini for production
#    dev.ini for production
# You can use them like that:
#    bin/paster serve CONF
#echo '#\n'
#  Thz zope.conf for production and dev, the zdaemon's conf. and the zep.conf
#  are generated,
#  The templates are in#  etc/*conf*.in
#  When you edit them, regenerate with
#  bin/buildout install [conf.in] where conf.in is your touched file.
#  eg: biun/buildout install zope.conf
#  The resulted files are in the parts/ folder
#echo '#\n'
# You can generate init scripts with minitage.profils.paste-initd template or
# use ZDadmon with those config files:
# ./bin/$project-ctl -C conffile
# ./bin/$project-ctl launch the application in production mode by default
#echo '#\n'
#echo '#\n'
# ZODB Polling patch for RelSotrage support is done on the fly with the
# minitage.recipe.egg patch facillity, it will make a partciluar zodb egg
# with the patch.avaiable on your eggs cache (see scripts part)
##################################################################################

#if $inside_minitage:
[minitage]
location=$mt
#end if

# site-packages
[libxml2]
# the path to find the libxml2 python bindings, maybe your global site-packages?
site-packages=$xml2
[libxslt]
site-packages=$xslt

[python]
executable=$python

[versions]
# bin/buildout -Nvvvvv |sed -ne "s/.*satisfies '//p" |sed -re "s/==/=/g"| sed -re "s/'.//g"|sort | uniq
# bin/buildout -Novvvvv |sed -ne 's/^Picked: //p' | sort | uniq

[buildout]
extensions = buildout.minitagificator mr.developer
python = python
extends=etc/versions.cfg
versions = versions
# the ${project}.cfg file can be generated via the kgs part, it will fix all
# eggs versions used.
parts =
    scripts
    zope.conf
    prod.zope.conf
    zdaemon.conf
    prod.zdaemon.conf
 #if "zeo" in $mode:
    zeo.conf
    zeoserver
#else
#    zeo.conf
#    zeoserver
#end if
extra-paths=
    \${libxml2:site-packages}
    \${libxslt:site-packages}
find-links =
    http://packages.willowrise.org/
    http://\${mirrors:zope}/ppix/
    http://\${mirrors:zope}/distribution/
    http://effbot.org/downloads
develop=
    src/$project
eggs =
#for $product in $add_eggs.split():
     ${product}
#end for
     ipython
     Spawning
     Paste
     PasteDeploy
     PasteScript
     zdaemon
     zope.app.apidoc
     z3c.evalexception>=2.0
     $project
#if $with_psycopg2:
     psycopg2
#end if
#if $with_mysqldb:
     MySQL_python
#end if
#if 'relstorage' in $mode:
     RelStorage
#else
#    RelStorage
#end if
#if $inside_minitage:
eggs-directory=\${minitage:location}/eggs/cache
#end if
# see http://pypi.python.org/pypi/mr.developer for documentation
sources = sources
#auto-checkout = my.package

[scripts]
recipe = minitage.recipe.scripts
interpreter = zopepy
extra-paths=
    \${libxml2:site-packages}
    \${libxslt:site-packages}
eggs=
    \${buildout:eggs}
# FOR RELSTORAGE SUPPORT
#if 'relstorage' in $mode:
ZODB3-patches=\${buildout:directory}/etc/poll-invalidation-1-zodb-3-8-0.patch
#else
#ZODB3-patches=\${buildout:directory}/etc/poll-invalidation-1-zodb-3-8-0.patch
#end if

[omelette]
recipe = collective.recipe.omelette
order=\${scripts:recipe}
eggs = \${scripts:eggs}
packages =\${zopepy:extra-paths}

[kgs]
order=\${scripts:recipe}
recipe=minitage.recipe.printer
quiet=
eggs=\${scripts:eggs}
file=${project}.cfg

[sources]
# see http://pypi.python.org/pypi/mr.developer for documentation
#my.package = svn http://example.com/svn/my.package/trunk
#some.other.package = git git://example.com/git/some.other.package.git

[zdaemon.conf]
recipe = collective.recipe.template
input = \${buildout:directory}/etc/zdaemon.conf.in
output=parts/zdaemon.conf

[prod.zdaemon.conf]
recipe = collective.recipe.template
input =\${buildout:directory}/etc/prod.zdaemon.conf.in
output=\${buildout:directory}/parts/prod.zdaemon.conf

[zope.conf]
recipe = collective.recipe.template
input =\${buildout:directory}/etc/zope.conf.in
output=\${buildout:directory}/parts/zope.conf

[prod.zope.conf]
recipe = collective.recipe.template
input = \${buildout:directory}/etc/prod.zope.conf.in
output=\${buildout:directory}/parts/prod.zope.conf

[zeo.conf]
recipe = collective.recipe.template
input =\${buildout:directory}/etc/zeo.conf.in
output=\${buildout:directory}/parts/zeo.conf

[zeoserver]
order=\${scripts:recipe}

recipe =minitage.recipe.scripts
initialization=args=sys.argv[:];args.pop(0)
arguments=["-C", "\${zeo.conf:output}"]+args
extra-paths=\${scripts:extra-paths}
scripts=zeoctl=zeoserver
eggs=\${scripts:eggs}

[mirrors]
zope = download.zope.org

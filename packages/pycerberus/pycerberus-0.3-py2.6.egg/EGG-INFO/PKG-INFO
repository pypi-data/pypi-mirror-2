Metadata-Version: 1.0
Name: pycerberus
Version: 0.3
Summary: Highly flexible, no magic input validation library
Home-page: http://www.schwarz.eu/opensource/projects/pycerberus
Author: Felix Schwarz
Author-email: felix.schwarz@oss.schwarz.eu
License: MIT
Download-URL: http://www.schwarz.eu/opensource/projects/pycerberus/download/0.3/pycerberus-0.3.tar.gz
Description: 
        pycerberus is a framework to check user data thoroughly so that you can protect
        your application from malicious (or just garbled) input data.
        
        * Remove stupid code which converts input values: After values are validated, you
        can work with real Python types instead of strings - e.g. 42 instead of '42',
        convert database IDs to model objects transparently.
        * Implement custom validation rules: Writing custom validators is
        straightforward, everything is well documented and pycerberus only uses very
        little Python magic.
        * Focus on your value-adding application code: Save time by implementing every
        input validation rule only once, but 100% right instead of implementing a
        dozen different half-baked solutions.
        * Ready for global business: i18n support (based on GNU gettext) is built in,
        adding custom translations is easy.
        * Tune it for your needs: You can implement custom behavior in your validators,
        e.g. fetch translations from a database instead of using gettext or define
        custom translations for built-in validators.
        * Use it wherever you like: pycerberus does not depend on specific contexts
        (e.g. web development) so you can also use it in every Python application.
        
        
        Changelog
        ******************************
        
        0.3 (27.03.2010)
        ==================
        - Python 2.3 compatibility
        - Schema can raise error if unknown items are processed
        - Basic domain name validator
        - Basic email address validator
        
        0.2 (16.03.2010)
        ==================
        - You now can declare custom messages as a class-level dict
        - Added interface to retrieve error details from InvalidDataErrors
        - Added validation schemas to validate a set of values (typically a web form).
        Schemas can also inherit from other schemas to avoid code duplication.
        - Validators try to make thread-safety violations obvious
        - Nicer API to retrieve error details from an InvalidDataError
        
        0.1 (30.01.2010)
        ==================
        - initial release
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules

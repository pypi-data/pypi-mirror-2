Metadata-Version: 1.0
Name: nontemplate
Version: 0.12
Summary: Nontemplate is not a Templating Language
Home-page: http://code.zoic.org/nontemplate/
Author: Nick Moore
Author-email: nick@zoic.org
License: MIT
Download-URL: http://code.zoic.org/nontemplate/dist/nontemplate-0.12.tar.gz
Description: ===================
         NonTemplate v0.12
        ===================
        
        For more information, see <http://code.zoic.org/nontemplate/>.
        
        Summary
        =======
        
        * NonTemplate allows you to generate simple XML output directly
          in your Python code with a minimum of syntactic noise.
        
        * It uses the **with** statement introduced in Python 2.6 to ensure
          that once a tag is opened, it will be closed.
        
        * Python code and template codes can be interleaved naturally,
          without resorting to restrictive language constructions.
          Your favourite debugger can see, and set breakpoints in, every
          level of your template.
        
        * 100% pure Python (>= 2.6), and it works just fine in Python
          3.0 as well.
           
        * Performance is comparable to the commonly used templating languages
          and is better than most.
        
        * Asynchronous use is easy: NonTemplate is happy reading from iterables
          and writing to IO streams.  This means you can start sending XHTML
          to your clients while your database is still retrieving rows ... 
        
        
        Example
        =======
        ::
        
            import nontemplate
        
            D = nontemplate.Document(doctype=nontemplate.doctype.html_2_0)
            
            with D.html():
                D._comment("this is a test")
                D._comment("this --> is too")
                D._emit("<!-- testing & < > emit -->\n")
                with D.head():
                    D.title()("foo")
                with D.body():
                    with D.h1(id="foo"):
                        D._text("This is a <foo> & test")
                    with D.table(_class="cool"):
                        with D.tbody():
                            for row in range(1,3):
                                with D.tr():
                                    for col in range(1,3):
                                        D.td()("%d,%d" % (row,col))
        
        
Keywords: xml,html,template
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent

<?xml version="1.0" encoding="UTF-8"?><testsuite name="nosetests" tests="191" errors="0" failures="1" skip="0"><testcase classname="cutplace.data.DelimitedDataFormat" name="_validatedCharacter" time="0" /><testcase classname="cutplace.data.FixedDataFormat" name="strippedOfBlanks" time="0" /><testcase classname="cutplace.data._BaseDataFormat" name="get" time="0" /><testcase classname="cutplace.data._BaseDataFormat" name="set" time="0" /><testcase classname="cutplace.interface" name="BaseValidationListener" time="0" /><testcase classname="cutplace.tools.InputLocation" name="__init__" time="0" /><testcase classname="cutplace.test_checks.DistinctCountCheckTest" name="testBrokenExpressions" time="0" /><testcase classname="cutplace.test_checks.DistinctCountCheckTest" name="testDistinctCountCheck" time="0" /><testcase classname="cutplace.test_checks.IsUniqueCheckTest" name="testBrokenUniqueCheckWithBrokenFieldName" time="0" /><testcase classname="cutplace.test_checks.IsUniqueCheckTest" name="testBrokenUniqueCheckWithCommaAtStart" time="0" /><testcase classname="cutplace.test_checks.IsUniqueCheckTest" name="testBrokenUniqueCheckWithMissingComma" time="0" /><testcase classname="cutplace.test_checks.IsUniqueCheckTest" name="testBrokenUniqueCheckWithMissingFields" time="0" /><testcase classname="cutplace.test_checks.IsUniqueCheckTest" name="testBrokenUniqueCheckWithTwoSequentialCommas" time="0" /><testcase classname="cutplace.test_checks.IsUniqueCheckTest" name="testCheckRow" time="0" /><testcase classname="cutplace.test_checks.IsUniqueCheckTest" name="testIsUniqueCheck" time="0" /><testcase classname="cutplace.test_checks.IsUniqueCheckTest" name="testLocation" time="0" /><testcase classname="cutplace.test_checks.IsUniqueCheckTest" name="testMissingFieldNames" time="0" /><testcase classname="cutplace.test_checks.IsUniqueCheckTest" name="testStr" time="0" /><testcase classname="cutplace.test_cutplace.CutplaceTest" name="testBrokenNoCommandLineOptions" time="0" /><testcase classname="cutplace.test_cutplace.CutplaceTest" name="testBrokenNonExistentDataPath" time="0" /><testcase classname="cutplace.test_cutplace.CutplaceTest" name="testBrokenNonExistentIcdPath" time="0" /><testcase classname="cutplace.test_cutplace.CutplaceTest" name="testBrokenUnknownCommandLineOption" time="0" /><testcase classname="cutplace.test_cutplace.CutplaceTest" name="testHelp" time="0" /><testcase classname="cutplace.test_cutplace.CutplaceTest" name="testListEncodings" time="0" /><testcase classname="cutplace.test_cutplace.CutplaceTest" name="testSplitBrokenData" time="0" /><testcase classname="cutplace.test_cutplace.CutplaceTest" name="testSplitValidData" time="0" /><testcase classname="cutplace.test_cutplace.CutplaceTest" name="testValidCsvs" time="0" /><testcase classname="cutplace.test_cutplace.CutplaceTest" name="testValidFixedTxt" time="0" /><testcase classname="cutplace.test_cutplace.CutplaceTest" name="testValidIcdInCsvFormat" time="0" /><testcase classname="cutplace.test_cutplace.CutplaceTest" name="testValidIcdInOdsFormat" time="0" /><testcase classname="cutplace.test_cutplace.CutplaceTest" name="testValidIcdInXlsFormat" time="0" /><testcase classname="cutplace.test_cutplace.CutplaceTest" name="testValidNativeExcelFormats" time="0" /><testcase classname="cutplace.test_cutplace.CutplaceTest" name="testVersion" time="0" /><testcase classname="cutplace.test_cutplace.LotsOfCustomersTest" name="testLotsOfCustomersCsv" time="0" /><testcase classname="cutplace.test_data.DataFormatTest" name="testBrokenDecimalSeparator" time="0" /><testcase classname="cutplace.test_data.DataFormatTest" name="testBrokenEncoding" time="0" /><testcase classname="cutplace.test_data.DataFormatTest" name="testBrokenEscapeCharacter" time="0" /><testcase classname="cutplace.test_data.DataFormatTest" name="testBrokenLineDelimiter" time="0" /><testcase classname="cutplace.test_data.DataFormatTest" name="testBrokenPropertyName" time="0" /><testcase classname="cutplace.test_data.DataFormatTest" name="testBrokenQuoteCharacter" time="0" /><testcase classname="cutplace.test_data.DataFormatTest" name="testBrokenThousandsSeparator" time="0" /><testcase classname="cutplace.test_data.DataFormatTest" name="testCreateDataFormat" time="0" /><testcase classname="cutplace.test_data.DataFormatTest" name="testCsvDataFormat" time="0" /><testcase classname="cutplace.test_data.DataFormatTest" name="testDecimalAndThousandsSeparator" time="0" /><testcase classname="cutplace.test_data.DataFormatTest" name="testDelimitedDataFormat" time="0" /><testcase classname="cutplace.test_data.DataFormatTest" name="testHeader" time="0" /><testcase classname="cutplace.test_data.DataFormatTest" name="testOdsDataFormat" time="0" /><testcase classname="cutplace.test_data.DataFormatTest" name="testTransitionallySameDecimalSeparator" time="0" /><testcase classname="cutplace.test_data.DataFormatTest" name="testTransitionallySameThousandsSeparator" time="0" /><testcase classname="cutplace.test_fields.AbstractFieldFormatTest" name="testEmptyAndLengthLimit" time="0" /><testcase classname="cutplace.test_fields.AbstractFieldFormatTest" name="testValidate" time="0" /><testcase classname="cutplace.test_fields.AbstractFieldFormatTest" name="testValidateEmpty" time="0" /><testcase classname="cutplace.test_fields.AbstractFieldFormatTest" name="testValidateLength" time="0" /><testcase classname="cutplace.test_fields.ChoiceFieldFormatTest" name="testBrokenEmptyChoice" time="0" /><testcase classname="cutplace.test_fields.ChoiceFieldFormatTest" name="testImproperChoice" time="0" /><testcase classname="cutplace.test_fields.ChoiceFieldFormatTest" name="testMatchWithUmlaut" time="0" /><testcase classname="cutplace.test_fields.ChoiceFieldFormatTest" name="testMatchingChoice" time="0" /><testcase classname="cutplace.test_fields.ChoiceFieldFormatTest" name="testMatchingOnlyChoice" time="0" /><testcase classname="cutplace.test_fields.ChoiceFieldFormatTest" name="testPossiblyEmptyFieldWithLength" time="0" /><testcase classname="cutplace.test_fields.DateTimeFieldFormatTest" name="testBrokenDates" time="0" /><testcase classname="cutplace.test_fields.DateTimeFieldFormatTest" name="testEmptyDate" time="0" /><testcase classname="cutplace.test_fields.DateTimeFieldFormatTest" name="testPercentSign" time="0" /><testcase classname="cutplace.test_fields.DateTimeFieldFormatTest" name="testValidDates" time="0" /><testcase classname="cutplace.test_fields.DecimalFieldFormatTest" name="testBrokenDecimalSyntax" time="0" /><testcase classname="cutplace.test_fields.DecimalFieldFormatTest" name="testBrokenDecimals" time="0" /><testcase classname="cutplace.test_fields.DecimalFieldFormatTest" name="testValidDecimals" time="0" /><testcase classname="cutplace.test_fields.DecimalFieldFormatTest" name="testValidGermanDecimals" time="0" /><testcase classname="cutplace.test_fields.IntegerFieldFormatTest" name="testAsIcdRow" time="0" /><testcase classname="cutplace.test_fields.IntegerFieldFormatTest" name="testNoNumber" time="0" /><testcase classname="cutplace.test_fields.IntegerFieldFormatTest" name="testTooBig" time="0" /><testcase classname="cutplace.test_fields.IntegerFieldFormatTest" name="testTooSmall" time="0" /><testcase classname="cutplace.test_fields.IntegerFieldFormatTest" name="testWithinRange" time="0" /><testcase classname="cutplace.test_fields.PatternFieldFormatTest" name="testMatch" time="0" /><testcase classname="cutplace.test_fields.PatternFieldFormatTest" name="testNoMatch" time="0" /><testcase classname="cutplace.test_fields.RegExFieldFormatTest" name="testBrokenRegEx" time="0" /><testcase classname="cutplace.test_fields.RegExFieldFormatTest" name="testMatch" time="0" /><testcase classname="cutplace.test_fields.RegExFieldFormatTest" name="testNoMatch" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenAsciiData" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenAsciiIcd" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenCheckDuplicateDescription" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenCheckTooFewItems" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenDataFormatDefinedTwice" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenDataFormatInvalidFormat" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenDataFormatInvalidFormatPropertyName" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenDataFormatNonNumericHeader" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenDataFormatTooSmallHeader" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenDataFormatWithoutName" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenDataFormatWithoutPropertyName" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenDuplicateFieldName" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenFieldEmptyMark" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenFieldNameMissing" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenFieldNameUsedTwice" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenFieldNameWithInvalidCharacters" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenFieldNameWithPythonKeyword" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenFieldTypeMissing" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenFieldTypeWitEmptyClass" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenFieldTypeWitEmptyModule" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenFieldTypeWitEmtySubModule" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenFieldTypeWithMultipleWord" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenFieldTypeWithNonExistentClass" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenFieldWithTooFewItems" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenFirstItem" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenFixedFieldWithLowerAndUpperLength" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenFixedFieldWithZeroLength" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenFixedFieldWithoutLength" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenInterfaceFieldBeforeDataFormat" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenInterfaceFieldExample" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenInterfaceWithoutFields" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testBrokenInvalidCharacter" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testDistinctCountCheck" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testEmptyChoice" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testEmptyChoiceWithLength" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testFieldTypeWithModule" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testIsUniqueCheck" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testLastOptionalField" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testLatin1" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testResetChecks" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testSimpleFixedIcd" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testSimpleIcd" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testSkipHeader" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testTooFewItems" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testTooManyItems" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testValidExcel" time="0" /><testcase classname="cutplace.test_interface.InterfaceControlDocumentTest" name="testValidOds" time="0" /><testcase classname="cutplace.test_interface.ValidatedRowsTest" name="testValidatedRowsIgnore" time="0" /><testcase classname="cutplace.test_interface.ValidatedRowsTest" name="testValidatedRowsStrict" time="0" /><testcase classname="cutplace.test_interface.ValidatedRowsTest" name="testValidatedRowsWithBrokenDataFormat" time="0" /><testcase classname="cutplace.test_interface.ValidatedRowsTest" name="testValidatedRowsYield" time="0" /><testcase classname="cutplace.test_ods.OdsTest" name="testBrokenKinkyFileName" time="0" /><testcase classname="cutplace.test_ods.OdsTest" name="testBrokenNoOptionsAtAll" time="0" /><testcase classname="cutplace.test_ods.OdsTest" name="testBrokenSheet" time="0" /><testcase classname="cutplace.test_ods.OdsTest" name="testConsumerProducer" time="0" /><testcase classname="cutplace.test_ods.OdsTest" name="testConvertToCsv" time="0" /><testcase classname="cutplace.test_ods.OdsTest" name="testConvertToDocBook" time="0" /><testcase classname="cutplace.test_ods.OdsTest" name="testConvertToRst" time="0" /><testcase classname="cutplace.test_parsers.DelimitedParserTest" name="testAutoDelimiters" time="0" /><testcase classname="cutplace.test_parsers.DelimitedParserTest" name="testAutoItemDelimiter" time="0" /><testcase classname="cutplace.test_parsers.DelimitedParserTest" name="testBrokenMissingQuote" time="0" /><testcase classname="cutplace.test_parsers.DelimitedParserTest" name="testEmptyCsv" time="0" /><testcase classname="cutplace.test_parsers.DelimitedParserTest" name="testEmptyItemDelimiterBeforeLineDelimiterCsv" time="0" /><testcase classname="cutplace.test_parsers.DelimitedParserTest" name="testEmptyLineWithCrCsv" time="0" /><testcase classname="cutplace.test_parsers.DelimitedParserTest" name="testEmptyLineWithCrLfCsv" time="0" /><testcase classname="cutplace.test_parsers.DelimitedParserTest" name="testEmptyLineWithLfCsv" time="0" /><testcase classname="cutplace.test_parsers.DelimitedParserTest" name="testItemDelimiterAtStartCsv" time="0" /><testcase classname="cutplace.test_parsers.DelimitedParserTest" name="testMiddleEmptyLineCsv" time="0" /><testcase classname="cutplace.test_parsers.DelimitedParserTest" name="testMixedQuotedLineCsv" time="0" /><testcase classname="cutplace.test_parsers.DelimitedParserTest" name="testQuotedCommaCsv" time="0" /><testcase classname="cutplace.test_parsers.DelimitedParserTest" name="testReader" time="0" /><testcase classname="cutplace.test_parsers.DelimitedParserTest" name="testSingleCharCsv" time="0" /><testcase classname="cutplace.test_parsers.DelimitedParserTest" name="testSingleItemDelimiterCsv" time="0" /><testcase classname="cutplace.test_parsers.DelimitedParserTest" name="testSingleLineCsv" time="0" /><testcase classname="cutplace.test_parsers.DelimitedParserTest" name="testSingleLineQuotedCsv" time="0" /><testcase classname="cutplace.test_parsers.DelimitedParserTest" name="testSingleQuotedCharCsv" time="0" /><testcase classname="cutplace.test_parsers.DelimitedParserTest" name="testTwoLineCsv" time="0" /><testcase classname="cutplace.test_parsers.DelimitedParserTest" name="testTwoLineQuotedCsv" time="0" /><testcase classname="cutplace.test_parsers.ExcelReaderTest" name="testCellValue" time="0" /><testcase classname="cutplace.test_parsers.ExcelReaderTest" name="testIcdCustomersXls" time="0" /><testcase classname="cutplace.test_parsers.FixedParserTest" name="testBrokenEndingTooSoon" time="0" /><testcase classname="cutplace.test_parsers.FixedParserTest" name="testEmpty" time="0" /><testcase classname="cutplace.test_parsers.FixedParserTest" name="testValid" time="0" /><testcase classname="cutplace.test_ranges.RangeTest" name="testBrokenOverlappingMultiRange" time="0" /><testcase classname="cutplace.test_ranges.RangeTest" name="testBrokenRanges" time="0" /><testcase classname="cutplace.test_ranges.RangeTest" name="testBrokenSymbolicNames" time="0" /><testcase classname="cutplace.test_ranges.RangeTest" name="testBrokenTextRange" time="0" /><testcase classname="cutplace.test_ranges.RangeTest" name="testEmptyRange" time="0" /><testcase classname="cutplace.test_ranges.RangeTest" name="testNoRange" time="0" /><testcase classname="cutplace.test_ranges.RangeTest" name="testProperHexRanges" time="0" /><testcase classname="cutplace.test_ranges.RangeTest" name="testProperMultiRanges" time="0" /><testcase classname="cutplace.test_ranges.RangeTest" name="testProperRanges" time="0" /><testcase classname="cutplace.test_ranges.RangeTest" name="testRangesWithDefault" time="0" /><testcase classname="cutplace.test_ranges.RangeTest" name="testSymbolicRange" time="0" /><testcase classname="cutplace.test_ranges.RangeTest" name="testTextRange" time="0" /><testcase classname="cutplace.test_ranges.RangeTest" name="testValidate" time="0" /><testcase classname="cutplace.test_sniff.SniffTest" name="testCanSniffAndValidateUsingMain" time="0" /><testcase classname="cutplace.test_sniff.SniffTest" name="testCanSniffAndValidateUsingMainWithHeaderAndEncoding" time="0" /><testcase classname="cutplace.test_sniff.SniffTest" name="testCreateDataFormat" time="0" /><testcase classname="cutplace.test_sniff.SniffTest" name="testCreateEmptyInterfaceControlDocument" time="0" /><testcase classname="cutplace.test_sniff.SniffTest" name="testCreateInterfaceControlDocument" time="0" /><testcase classname="cutplace.test_sniff.SniffTest" name="testCreateReader" time="0" /><testcase classname="cutplace.test_sniff.SniffTest" name="testDelimitedOptions" time="0" /><testcase classname="cutplace.test_sniff.SniffTest" name="testEmpty" time="0" /><testcase classname="cutplace.test_sniff.SniffTest" name="testHeaderAndStopAfter" time="0" /><testcase classname="cutplace.test_tools.ToolsTest" name="testCreateTestCustomerRow" time="0" /><testcase classname="cutplace.test_tools.ToolsTest" name="testCreateTestDateTime" time="0" /><testcase classname="cutplace.test_tools.ToolsTest" name="testCreateTestName" time="0" /><testcase classname="cutplace.test_tools.ToolsTest" name="testHumanReadableList" time="0" /><testcase classname="cutplace.test_tools.ToolsTest" name="testInputLocation" time="0" /><testcase classname="cutplace.test_tools.ToolsTest" name="testValidatedPythonName" time="0" /><testcase classname="cutplace.test_tools.ToolsTest" name="testVersion" time="0" /><testcase classname="cutplace.test_tools.ToolsTest" name="testWithSuffix" time="0" /><testcase classname="" name="api_rst" time="0"><failure type="exceptions.AssertionError" message="Failed doctest test for api.rst&#10;  File &quot;/Users/agi/workspace/cutplace/docs/api.rst&quot;, line 0&#10;&#10;----------------------------------------------------------------------&#10;File &quot;/Users/agi/workspace/cutplace/docs/api.rst&quot;, line 58, in api.rst&#10;Failed example:&#10;    icd.read(icdPath)&#10;Expected nothing&#10;Got:&#10;    delimitedOptions =  {'escapeCharacter': '&quot;', 'quoteCharacter': '&quot;', 'lineDelimiter': '\r\n', 'itemDelimiter': ',', 'encoding': 'ascii'}&#10;----------------------------------------------------------------------&#10;File &quot;/Users/agi/workspace/cutplace/docs/api.rst&quot;, line 82, in api.rst&#10;Failed example:&#10;    for row in interface.validatedRows(icd, validCsvPath):&#10;      pass # We could also do something useful with the data in ``row`` here.&#10;Expected nothing&#10;Got:&#10;    delimitedOptions =  {'escapeCharacter': '&quot;', 'quoteCharacter': u'&quot;', 'lineDelimiter': '\n', 'itemDelimiter': u',', 'encoding': u'ISO-8859-1'}&#10;----------------------------------------------------------------------&#10;File &quot;/Users/agi/workspace/cutplace/docs/api.rst&quot;, line 114, in api.rst&#10;Failed example:&#10;    for rowOrError in interface.validatedRows(icd, brokenCsvPath, errors=&quot;yield&quot;):&#10;        if isinstance(rowOrError, tools.CutplaceError):&#10;            # Print data related error details and move on.&#10;            print rowOrError&#10;        elif isinstance(rowOrError, Exception):&#10;            # Let other, more severe errors terminate the validation.&#10;            raise rowOrError&#10;        else:&#10;            pass # We could also do something useful with the data in ``row`` here.&#10;Expected:&#10;    broken_customers.csv (R4C1): field u'branch_id' must match format: value u'12345' must match regular expression: u'38\\d\\d\\d'&#10;    broken_customers.csv (R5C2): field u'customer_id' must match format: value must be an integer number: u'XX'&#10;    broken_customers.csv (R6C6): field u'date_of_birth' must match format: date must match format DD.MM.YYYY (%d.%m.%Y) but is: u'30.02.1994' (day is out of range for month)&#10;Got:&#10;    delimitedOptions =  {'escapeCharacter': '&quot;', 'quoteCharacter': u'&quot;', 'lineDelimiter': '\n', 'itemDelimiter': u',', 'encoding': u'ISO-8859-1'}&#10;    broken_customers.csv (R4C1): field u'branch_id' must match format: value u'12345' must match regular expression: u'38\\d\\d\\d'&#10;    broken_customers.csv (R5C2): field u'customer_id' must match format: value must be an integer number: u'XX'&#10;    broken_customers.csv (R6C6): field u'date_of_birth' must match format: date must match format DD.MM.YYYY (%d.%m.%Y) but is: u'30.02.1994' (day is out of range for month)&#10;----------------------------------------------------------------------&#10;File &quot;/Users/agi/workspace/cutplace/docs/api.rst&quot;, line 158, in api.rst&#10;Failed example:&#10;    for row in interface.validatedRows(icd, validCsvPath):&#10;      firstName = row[firstNameIndex]&#10;      if firstName.startswith(&quot;J&quot;):&#10;         surname = row[surnameIndex]&#10;         fullName = surname + &quot;, &quot; + firstName&#10;         print fullName&#10;Expected:&#10;    Doe, John&#10;    Miller, Jane&#10;Got:&#10;    delimitedOptions =  {'escapeCharacter': '&quot;', 'quoteCharacter': u'&quot;', 'lineDelimiter': '\n', 'itemDelimiter': u',', 'encoding': u'ISO-8859-1'}&#10;    Doe, John&#10;    Miller, Jane&#10;----------------------------------------------------------------------&#10;File &quot;/Users/agi/workspace/cutplace/docs/api.rst&quot;, line 185, in api.rst&#10;Failed example:&#10;    icd.read(icdPath)&#10;Expected nothing&#10;Got:&#10;    delimitedOptions =  {'escapeCharacter': '&quot;', 'quoteCharacter': '&quot;', 'lineDelimiter': '\r\n', 'itemDelimiter': ',', 'encoding': 'ascii'}&#10;----------------------------------------------------------------------&#10;File &quot;/Users/agi/workspace/cutplace/docs/api.rst&quot;, line 187, in api.rst&#10;Failed example:&#10;    for row in interface.validatedRows(icd, dataPath):&#10;      pass # We could also do something useful with the data in ``row`` here.&#10;Expected nothing&#10;Got:&#10;    delimitedOptions =  {'escapeCharacter': '&quot;', 'quoteCharacter': u'&quot;', 'lineDelimiter': '\n', 'itemDelimiter': u',', 'encoding': u'ISO-8859-1'}&#10;----------------------------------------------------------------------&#10;File &quot;/Users/agi/workspace/cutplace/docs/api.rst&quot;, line 278, in api.rst&#10;Failed example:&#10;    icd.read(icdPath)&#10;Expected nothing&#10;Got:&#10;    delimitedOptions =  {'escapeCharacter': '&quot;', 'quoteCharacter': '&quot;', 'lineDelimiter': '\r\n', 'itemDelimiter': ',', 'encoding': 'ascii'}&#10;----------------------------------------------------------------------&#10;File &quot;/Users/agi/workspace/cutplace/docs/api.rst&quot;, line 281, in api.rst&#10;Failed example:&#10;    icd.validate(validCsvPath)&#10;Expected nothing&#10;Got:&#10;    delimitedOptions =  {'escapeCharacter': '&quot;', 'quoteCharacter': u'&quot;', 'lineDelimiter': '\n', 'itemDelimiter': u',', 'encoding': u'ISO-8859-1'}&#10;----------------------------------------------------------------------&#10;File &quot;/Users/agi/workspace/cutplace/docs/api.rst&quot;, line 286, in api.rst&#10;Failed example:&#10;    icd.validate(brokenCsvPath)&#10;Expected nothing&#10;Got:&#10;    delimitedOptions =  {'escapeCharacter': '&quot;', 'quoteCharacter': u'&quot;', 'lineDelimiter': '\n', 'itemDelimiter': u',', 'encoding': u'ISO-8859-1'}&#10;----------------------------------------------------------------------&#10;File &quot;/Users/agi/workspace/cutplace/docs/api.rst&quot;, line 316, in api.rst&#10;Failed example:&#10;    icd.validate(brokenCsvPath)&#10;Expected:&#10;    [u'12345', u'92', u'Bill', u'Carter', u'male', u'05.04.1953']&#10;    error: broken_customers.csv (R4C1): field u'branch_id' must match format: value u'12345' must match regular expression: u'38\\d\\d\\d'&#10;    [u'38111', u'XX', u'Sue', u'Brown', u'female', u'08.02.1962']&#10;    error: broken_customers.csv (R5C2): field u'customer_id' must match format: value must be an integer number: u'XX'&#10;    [u'38088', u'83', u'Rose', u'Baker', u'female', u'30.02.1994']&#10;    error: broken_customers.csv (R6C6): field u'date_of_birth' must match format: date must match format DD.MM.YYYY (%d.%m.%Y) but is: u'30.02.1994' (day is out of range for month)&#10;Got:&#10;    delimitedOptions =  {'escapeCharacter': '&quot;', 'quoteCharacter': u'&quot;', 'lineDelimiter': '\n', 'itemDelimiter': u',', 'encoding': u'ISO-8859-1'}&#10;    [u'12345', u'92', u'Bill', u'Carter', u'male', u'05.04.1953']&#10;    error: broken_customers.csv (R4C1): field u'branch_id' must match format: value u'12345' must match regular expression: u'38\\d\\d\\d'&#10;    [u'38111', u'XX', u'Sue', u'Brown', u'female', u'08.02.1962']&#10;    error: broken_customers.csv (R5C2): field u'customer_id' must match format: value must be an integer number: u'XX'&#10;    [u'38088', u'83', u'Rose', u'Baker', u'female', u'30.02.1994']&#10;    error: broken_customers.csv (R6C6): field u'date_of_birth' must match format: date must match format DD.MM.YYYY (%d.%m.%Y) but is: u'30.02.1994' (day is out of range for month)&#10;"><![CDATA[Traceback (most recent call last):
  File "/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/unittest.py", line 279, in run
    testMethod()
  File "/opt/local/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/doctest.py", line 2163, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for api.rst
  File "/Users/agi/workspace/cutplace/docs/api.rst", line 0

----------------------------------------------------------------------
File "/Users/agi/workspace/cutplace/docs/api.rst", line 58, in api.rst
Failed example:
    icd.read(icdPath)
Expected nothing
Got:
    delimitedOptions =  {'escapeCharacter': '"', 'quoteCharacter': '"', 'lineDelimiter': '\r\n', 'itemDelimiter': ',', 'encoding': 'ascii'}
----------------------------------------------------------------------
File "/Users/agi/workspace/cutplace/docs/api.rst", line 82, in api.rst
Failed example:
    for row in interface.validatedRows(icd, validCsvPath):
      pass # We could also do something useful with the data in ``row`` here.
Expected nothing
Got:
    delimitedOptions =  {'escapeCharacter': '"', 'quoteCharacter': u'"', 'lineDelimiter': '\n', 'itemDelimiter': u',', 'encoding': u'ISO-8859-1'}
----------------------------------------------------------------------
File "/Users/agi/workspace/cutplace/docs/api.rst", line 114, in api.rst
Failed example:
    for rowOrError in interface.validatedRows(icd, brokenCsvPath, errors="yield"):
        if isinstance(rowOrError, tools.CutplaceError):
            # Print data related error details and move on.
            print rowOrError
        elif isinstance(rowOrError, Exception):
            # Let other, more severe errors terminate the validation.
            raise rowOrError
        else:
            pass # We could also do something useful with the data in ``row`` here.
Expected:
    broken_customers.csv (R4C1): field u'branch_id' must match format: value u'12345' must match regular expression: u'38\\d\\d\\d'
    broken_customers.csv (R5C2): field u'customer_id' must match format: value must be an integer number: u'XX'
    broken_customers.csv (R6C6): field u'date_of_birth' must match format: date must match format DD.MM.YYYY (%d.%m.%Y) but is: u'30.02.1994' (day is out of range for month)
Got:
    delimitedOptions =  {'escapeCharacter': '"', 'quoteCharacter': u'"', 'lineDelimiter': '\n', 'itemDelimiter': u',', 'encoding': u'ISO-8859-1'}
    broken_customers.csv (R4C1): field u'branch_id' must match format: value u'12345' must match regular expression: u'38\\d\\d\\d'
    broken_customers.csv (R5C2): field u'customer_id' must match format: value must be an integer number: u'XX'
    broken_customers.csv (R6C6): field u'date_of_birth' must match format: date must match format DD.MM.YYYY (%d.%m.%Y) but is: u'30.02.1994' (day is out of range for month)
----------------------------------------------------------------------
File "/Users/agi/workspace/cutplace/docs/api.rst", line 158, in api.rst
Failed example:
    for row in interface.validatedRows(icd, validCsvPath):
      firstName = row[firstNameIndex]
      if firstName.startswith("J"):
         surname = row[surnameIndex]
         fullName = surname + ", " + firstName
         print fullName
Expected:
    Doe, John
    Miller, Jane
Got:
    delimitedOptions =  {'escapeCharacter': '"', 'quoteCharacter': u'"', 'lineDelimiter': '\n', 'itemDelimiter': u',', 'encoding': u'ISO-8859-1'}
    Doe, John
    Miller, Jane
----------------------------------------------------------------------
File "/Users/agi/workspace/cutplace/docs/api.rst", line 185, in api.rst
Failed example:
    icd.read(icdPath)
Expected nothing
Got:
    delimitedOptions =  {'escapeCharacter': '"', 'quoteCharacter': '"', 'lineDelimiter': '\r\n', 'itemDelimiter': ',', 'encoding': 'ascii'}
----------------------------------------------------------------------
File "/Users/agi/workspace/cutplace/docs/api.rst", line 187, in api.rst
Failed example:
    for row in interface.validatedRows(icd, dataPath):
      pass # We could also do something useful with the data in ``row`` here.
Expected nothing
Got:
    delimitedOptions =  {'escapeCharacter': '"', 'quoteCharacter': u'"', 'lineDelimiter': '\n', 'itemDelimiter': u',', 'encoding': u'ISO-8859-1'}
----------------------------------------------------------------------
File "/Users/agi/workspace/cutplace/docs/api.rst", line 278, in api.rst
Failed example:
    icd.read(icdPath)
Expected nothing
Got:
    delimitedOptions =  {'escapeCharacter': '"', 'quoteCharacter': '"', 'lineDelimiter': '\r\n', 'itemDelimiter': ',', 'encoding': 'ascii'}
----------------------------------------------------------------------
File "/Users/agi/workspace/cutplace/docs/api.rst", line 281, in api.rst
Failed example:
    icd.validate(validCsvPath)
Expected nothing
Got:
    delimitedOptions =  {'escapeCharacter': '"', 'quoteCharacter': u'"', 'lineDelimiter': '\n', 'itemDelimiter': u',', 'encoding': u'ISO-8859-1'}
----------------------------------------------------------------------
File "/Users/agi/workspace/cutplace/docs/api.rst", line 286, in api.rst
Failed example:
    icd.validate(brokenCsvPath)
Expected nothing
Got:
    delimitedOptions =  {'escapeCharacter': '"', 'quoteCharacter': u'"', 'lineDelimiter': '\n', 'itemDelimiter': u',', 'encoding': u'ISO-8859-1'}
----------------------------------------------------------------------
File "/Users/agi/workspace/cutplace/docs/api.rst", line 316, in api.rst
Failed example:
    icd.validate(brokenCsvPath)
Expected:
    [u'12345', u'92', u'Bill', u'Carter', u'male', u'05.04.1953']
    error: broken_customers.csv (R4C1): field u'branch_id' must match format: value u'12345' must match regular expression: u'38\\d\\d\\d'
    [u'38111', u'XX', u'Sue', u'Brown', u'female', u'08.02.1962']
    error: broken_customers.csv (R5C2): field u'customer_id' must match format: value must be an integer number: u'XX'
    [u'38088', u'83', u'Rose', u'Baker', u'female', u'30.02.1994']
    error: broken_customers.csv (R6C6): field u'date_of_birth' must match format: date must match format DD.MM.YYYY (%d.%m.%Y) but is: u'30.02.1994' (day is out of range for month)
Got:
    delimitedOptions =  {'escapeCharacter': '"', 'quoteCharacter': u'"', 'lineDelimiter': '\n', 'itemDelimiter': u',', 'encoding': u'ISO-8859-1'}
    [u'12345', u'92', u'Bill', u'Carter', u'male', u'05.04.1953']
    error: broken_customers.csv (R4C1): field u'branch_id' must match format: value u'12345' must match regular expression: u'38\\d\\d\\d'
    [u'38111', u'XX', u'Sue', u'Brown', u'female', u'08.02.1962']
    error: broken_customers.csv (R5C2): field u'customer_id' must match format: value must be an integer number: u'XX'
    [u'38088', u'83', u'Rose', u'Baker', u'female', u'30.02.1994']
    error: broken_customers.csv (R6C6): field u'date_of_birth' must match format: date must match format DD.MM.YYYY (%d.%m.%Y) but is: u'30.02.1994' (day is out of range for month)

]]></failure></testcase></testsuite>
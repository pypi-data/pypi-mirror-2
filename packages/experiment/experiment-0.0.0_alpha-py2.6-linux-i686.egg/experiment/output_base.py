# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.35
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _output_base
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


new_pdouble = _output_base.new_pdouble
copy_pdouble = _output_base.copy_pdouble
delete_pdouble = _output_base.delete_pdouble
pdouble_assign = _output_base.pdouble_assign
pdouble_value = _output_base.pdouble_value
LiveOutputAddVariable = _output_base.LiveOutputAddVariable
LiveOutputInitiate = _output_base.LiveOutputInitiate
LiveOutputNew = _output_base.LiveOutputNew
LiveOutputSetSteps = _output_base.LiveOutputSetSteps
LiveOutputTimedStep = _output_base.LiveOutputTimedStep
LiveOutputTimedStepVolatile = _output_base.LiveOutputTimedStepVolatile
LiveOutputData = _output_base.LiveOutputData
GetResolution = _output_base.GetResolution
SetResolution = _output_base.SetResolution
CoordinateTuple = _output_base.CoordinateTuple
class OutputGenerator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, OutputGenerator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, OutputGenerator, name)
    __repr__ = _swig_repr
    __swig_setmethods__["iVariablesAllocated"] = _output_base.OutputGenerator_iVariablesAllocated_set
    __swig_getmethods__["iVariablesAllocated"] = _output_base.OutputGenerator_iVariablesAllocated_get
    if _newclass:iVariablesAllocated = _swig_property(_output_base.OutputGenerator_iVariablesAllocated_get, _output_base.OutputGenerator_iVariablesAllocated_set)
    __swig_setmethods__["iVariablesActive"] = _output_base.OutputGenerator_iVariablesActive_set
    __swig_getmethods__["iVariablesActive"] = _output_base.OutputGenerator_iVariablesActive_get
    if _newclass:iVariablesActive = _swig_property(_output_base.OutputGenerator_iVariablesActive_get, _output_base.OutputGenerator_iVariablesActive_set)
    __swig_setmethods__["ppdVariables"] = _output_base.OutputGenerator_ppdVariables_set
    __swig_getmethods__["ppdVariables"] = _output_base.OutputGenerator_ppdVariables_get
    if _newclass:ppdVariables = _swig_property(_output_base.OutputGenerator_ppdVariables_get, _output_base.OutputGenerator_ppdVariables_set)
    __swig_setmethods__["dBase"] = _output_base.OutputGenerator_dBase_set
    __swig_getmethods__["dBase"] = _output_base.OutputGenerator_dBase_get
    if _newclass:dBase = _swig_property(_output_base.OutputGenerator_dBase_get, _output_base.OutputGenerator_dBase_set)
    __swig_setmethods__["pcFilename"] = _output_base.OutputGenerator_pcFilename_set
    __swig_getmethods__["pcFilename"] = _output_base.OutputGenerator_pcFilename_get
    if _newclass:pcFilename = _swig_property(_output_base.OutputGenerator_pcFilename_get, _output_base.OutputGenerator_pcFilename_set)
    __swig_setmethods__["pfileOutput"] = _output_base.OutputGenerator_pfileOutput_set
    __swig_getmethods__["pfileOutput"] = _output_base.OutputGenerator_pfileOutput_get
    if _newclass:pfileOutput = _swig_property(_output_base.OutputGenerator_pfileOutput_get, _output_base.OutputGenerator_pfileOutput_set)
    __swig_setmethods__["iSteps"] = _output_base.OutputGenerator_iSteps_set
    __swig_getmethods__["iSteps"] = _output_base.OutputGenerator_iSteps_get
    if _newclass:iSteps = _swig_property(_output_base.OutputGenerator_iSteps_get, _output_base.OutputGenerator_iSteps_set)
    __swig_setmethods__["pcFormat"] = _output_base.OutputGenerator_pcFormat_set
    __swig_getmethods__["pcFormat"] = _output_base.OutputGenerator_pcFormat_get
    if _newclass:pcFormat = _swig_property(_output_base.OutputGenerator_pcFormat_get, _output_base.OutputGenerator_pcFormat_set)
    __swig_setmethods__["iResolution"] = _output_base.OutputGenerator_iResolution_set
    __swig_getmethods__["iResolution"] = _output_base.OutputGenerator_iResolution_get
    if _newclass:iResolution = _swig_property(_output_base.OutputGenerator_iResolution_get, _output_base.OutputGenerator_iResolution_set)
    __swig_setmethods__["iResolutionStep"] = _output_base.OutputGenerator_iResolutionStep_set
    __swig_getmethods__["iResolutionStep"] = _output_base.OutputGenerator_iResolutionStep_get
    if _newclass:iResolutionStep = _swig_property(_output_base.OutputGenerator_iResolutionStep_get, _output_base.OutputGenerator_iResolutionStep_set)
    def __init__(self, *args): 
        this = _output_base.new_OutputGenerator(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _output_base.delete_OutputGenerator
    __del__ = lambda self : None;
OutputGenerator_swigregister = _output_base.OutputGenerator_swigregister
OutputGenerator_swigregister(OutputGenerator)

OutputGeneratorAddVariable = _output_base.OutputGeneratorAddVariable
OutputGeneratorAnnotatedStep = _output_base.OutputGeneratorAnnotatedStep
OutputGeneratorFinish = _output_base.OutputGeneratorFinish
OutputGeneratorFlush = _output_base.OutputGeneratorFlush
OutputGeneratorInitiate = _output_base.OutputGeneratorInitiate
OutputGeneratorNew = _output_base.OutputGeneratorNew
OutputGeneratorSetFormat = _output_base.OutputGeneratorSetFormat
OutputGeneratorSetSteps = _output_base.OutputGeneratorSetSteps
OutputGeneratorTimedStep = _output_base.OutputGeneratorTimedStep



{"body": "<div class=\"section\" id=\"how-to-use-the-storage-backends\">\n<span id=\"storages\"></span><h1>How to use the storage backends<a class=\"headerlink\" href=\"#how-to-use-the-storage-backends\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>By default, <em>Collectors</em> uses a simple python <a title=\"(in Python v2.6)\" class=\"reference external\" href=\"http://docs.python.org/library/functions.html#list\"><tt class=\"xref docutils literal\"><span class=\"pre\">list</span></tt></a> for each series. You\ncan use other storage backends to handle very large amounts of data or to get a\nsimple <em>MS Excel</em> export. You can also add your own storage classes very easily.</p>\n<p>All storage classes can be found in submodules of <a title=\"\" class=\"reference external\" href=\"../ref/storage/#module-collectors.storage\"><tt class=\"xref docutils literal\"><span class=\"pre\">collectors.storage</span></tt></a>\n(e.g. <tt class=\"xref docutils literal\"><span class=\"pre\">collectors.storage.pytables.PyTables</span></tt>) but you can also import\n<tt class=\"xref docutils literal\"><span class=\"pre\">PyTables</span></tt> and\n<tt class=\"xref docutils literal\"><span class=\"pre\">Excel</span></tt> directly from\n<a title=\"\" class=\"reference external\" href=\"../ref/storage/#module-collectors.storage\"><tt class=\"xref docutils literal\"><span class=\"pre\">collectors.storage</span></tt></a>.</p>\n<p>You must pass an instance of the storage as keyword argument <tt class=\"docutils literal\"><span class=\"pre\">backend</span></tt> to a\nnew Collector. Each storage instance should only be used with one Collector\ninstance.</p>\n<div class=\"highlight-python\"><div class=\"highlight\"><pre><span class=\"kn\">from</span> <span class=\"nn\">collectors</span> <span class=\"kn\">import</span> <span class=\"n\">Collector</span>\n<span class=\"kn\">from</span> <span class=\"nn\">collectors.storage</span> <span class=\"kn\">import</span> <span class=\"n\">MyStorage</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Collector</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">backend</span><span class=\"o\">=</span><span class=\"n\">MyStorage</span><span class=\"p\">())</span>\n</pre></div>\n</div>\n<div class=\"section\" id=\"pytables-hdf5\">\n<h2>PyTables/HDF5<a class=\"headerlink\" href=\"#pytables-hdf5\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p><a class=\"reference external\" href=\"http://www.pytables.org/\">PyTables</a> is not bundled with this package.\nInstructions follow:</p>\n<p><strong>Mac OS X (10.6 Snow Leopard)</strong></p>\n<p>You should not use the precompiled version of <em>HDF5</em> because it\u2019s linked against\n<em>szip</em>, which is not bundled with <em>HDF5</em> and available under a license you might\nnot want. So you need to compile it yourself:</p>\n<ol class=\"arabic simple\">\n<li>Download the source from <a class=\"reference external\" href=\"ftp://ftp.hdfgroup.org/HDF5/current/src/\">ftp://ftp.hdfgroup.org/HDF5/current/src/</a></li>\n<li>Build and install (<em>PyTables</em> will auto detect it if you install it under\n<tt class=\"docutils literal\"><span class=\"pre\">/usr/local</span></tt>):</li>\n</ol>\n<div class=\"highlight-bash\"><div class=\"highlight\"><pre><span class=\"nv\">$ </span>./configure --prefix<span class=\"o\">=</span>/usr/local\n<span class=\"nv\">$ </span>make\n<span class=\"nv\">$ </span>sudo make install\n</pre></div>\n</div>\n<ol class=\"arabic simple\" start=\"3\">\n<li>Finally install <em>PyTables:</em></li>\n</ol>\n<div class=\"highlight-bash\"><div class=\"highlight\"><pre><span class=\"nv\">$ </span>sudo pip install tables\n</pre></div>\n</div>\n<p><strong>Ubuntu (9.10 Karmic Koala)</strong></p>\n<p>Ubuntu\u2019s package for PyTables is somehow broken, so you need to build your own.\nIf <em>gcc</em> is already installed, you just need to add the development files for\npython and HDF5 before you can build and install PyTables from <a class=\"reference external\" href=\"http://pypi.python.org/pypi/tables\">PyPI</a>:</p>\n<div class=\"highlight-bash\"><div class=\"highlight\"><pre><span class=\"nv\">$ </span>sudo aptitude install python-dev libhdf5-serial-dev\n<span class=\"nv\">$ </span>sudo pip install tables\n</pre></div>\n</div>\n<p><strong>Windows</strong></p>\n<p>Download the installer from <a class=\"reference external\" href=\"http://www.pytables.org/download/stable/\">here</a>\nand execute it. Further information can be found in the <a class=\"reference external\" href=\"http://www.pytables.org/docs/manual/ch02.html#binaryInstallationDescr\">PyTables manual</a>.</p>\n<div class=\"section\" id=\"example\">\n<h3>Example<a class=\"headerlink\" href=\"#example\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<div class=\"highlight-python\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">tables</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">collectors</span> <span class=\"kn\">import</span> <span class=\"n\">Collector</span><span class=\"p\">,</span> <span class=\"n\">get</span><span class=\"p\">,</span> <span class=\"n\">storage</span>\n<span class=\"go\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Spam</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">spam</span> <span class=\"o\">=</span> <span class=\"n\">Spam</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">h5file</span> <span class=\"o\">=</span> <span class=\"n\">tables</span><span class=\"o\">.</span><span class=\"n\">openFile</span><span class=\"p\">(</span><span class=\"s\">&#39;/tmp/example.h5&#39;</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s\">&#39;w&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">collector</span> <span class=\"o\">=</span> <span class=\"n\">Collector</span><span class=\"p\">(</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">spam</span><span class=\"p\">,</span> <span class=\"s\">&#39;a&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;b&#39;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>        <span class=\"n\">backend</span><span class=\"o\">=</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">PyTables</span><span class=\"p\">(</span><span class=\"n\">h5file</span><span class=\"p\">,</span> <span class=\"s\">&#39;spamgroup&#39;</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s\">&#39;int&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;int&#39;</span><span class=\"p\">))</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n<span class=\"go\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">values</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">),</span> <span class=\"nb\">reversed</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">))):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">spam</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">spam</span><span class=\"o\">.</span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">values</span>\n<span class=\"gp\">... </span>    <span class=\"n\">collector</span><span class=\"p\">()</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">print</span> <span class=\"n\">collector</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(),</span> <span class=\"n\">collector</span><span class=\"o\">.</span><span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"go\">[0 1 2 3 4 5 6 7 8 9] [9 8 7 6 5 4 3 2 1 0]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">print</span> <span class=\"n\">collector</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(),</span> <span class=\"n\">collector</span><span class=\"o\">.</span><span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">()</span>\n<span class=\"go\">4.5 9</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">h5file</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>The <tt class=\"xref docutils literal\"><span class=\"pre\">PyTables</span></tt> storage stores the results\nfor multiple Collector instances in one file. For each Collector, a new group\nwill be create and each observed variable will have its own array within that\ngroup, so the group name musst be unique among all collectors that use the same\nHDF5 file.</p>\n<p>You also need to specifiy the data types of the observed variables. They must be\npassed as list of strings (like e.g. <tt class=\"docutils literal\"><span class=\"pre\">'int'</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">'float'</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">'bool'</span></tt>, see\nthe <a class=\"reference external\" href=\"http://docs.scipy.org/doc/numpy/reference/arrays.scalars.html#built-in-scalar-types\">NumPy Docs</a> for more details).</p>\n<p>The <em>series</em> are now <a class=\"reference external\" href=\"http://www.pytables.org/docs/manual/ch04.html#EArrayClassDescr\">EArrays</a> instead of\nsimple lists. The <tt class=\"docutils literal\"><span class=\"pre\">read</span></tt> function returns the complete series for that\nvariable as a NumPy array so you can do further calculations on them very fast.</p>\n</div>\n</div>\n<div class=\"section\" id=\"ms-excel\">\n<h2>MS Excel<a class=\"headerlink\" href=\"#ms-excel\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The <tt class=\"xref docutils literal\"><span class=\"pre\">Excel</span></tt> storage allows you to store your\ndata directly in an Excel file.</p>\n<p>To use this storage backend, you need to install <tt class=\"docutils literal\"><span class=\"pre\">xlwt</span></tt> (like \u201cExcel\nWrite\u201d); <tt class=\"docutils literal\"><span class=\"pre\">xlrd</span></tt> (\u201cExcel Read\u201d) can be used to read from an Excel file:</p>\n<div class=\"highlight-bash\"><div class=\"highlight\"><pre><span class=\"nv\">$ </span>sudo pip install xlwt\n</pre></div>\n</div>\n<div class=\"section\" id=\"id1\">\n<h3>Example<a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<div class=\"highlight-python\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">xlwt</span> <span class=\"kn\">import</span> <span class=\"n\">Workbook</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">collectors</span> <span class=\"kn\">import</span> <span class=\"n\">Collector</span><span class=\"p\">,</span> <span class=\"n\">get</span><span class=\"p\">,</span> <span class=\"n\">storage</span>\n<span class=\"go\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">Workbook</span><span class=\"p\">()</span>\n<span class=\"go\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">ObserveMe</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"k\">pass</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">ObserveMe</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Collector</span><span class=\"p\">(</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"s\">&#39;value_a&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;value_b&#39;</span><span class=\"p\">),</span>\n<span class=\"gp\">... </span>        <span class=\"n\">backend</span><span class=\"o\">=</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">Excel</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"s\">&#39;my collected data&#39;</span><span class=\"p\">))</span>\n<span class=\"go\">&gt;&gt;&gt;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">),</span> <span class=\"nb\">reversed</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">))):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">value_a</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">value_b</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span>\n<span class=\"gp\">... </span>    <span class=\"n\">c</span><span class=\"p\">()</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s\">&#39;/tmp/example.xls&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Using the the Excel storage is quite easy. Just create a new <tt class=\"docutils literal\"><span class=\"pre\">Workbook</span></tt> and\npass it with a name for the sheet to <tt class=\"xref docutils literal\"><span class=\"pre\">Excel</span></tt>\nconstructor. Alternatively, you can create a sheet with\n<tt class=\"docutils literal\"><span class=\"pre\">workbook.add_sheet('name')</span></tt> and pass the sheet instance instead of a string\nwith the sheet\u2019s name.</p>\n<p>When you are done collecting data, save the Workbook to a file by calling its\n<tt class=\"docutils literal\"><span class=\"pre\">save()</span></tt> method.</p>\n</div>\n</div>\n<div class=\"section\" id=\"whats-next\">\n<h2>What\u2019s next?<a class=\"headerlink\" href=\"#whats-next\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p><em>Collectors</em> was originally developed to use it with <a class=\"reference external\" href=\"http://simpy.sourceforge.net/\">SimPy</a>, so we\u2019ll show how both packages can be used\ntogether in the next section.</p>\n</div>\n</div>\n", "display_toc": true, "title": "How to use the storage backends", "sourcename": "storages.txt", "current_page_name": "storages", "next": {"link": "../simpy/", "title": "How to use <em>Collectors</em> with <em>SimPy</em>"}, "rellinks": [["genindex", "General Index", "I", "index"], ["modindex", "Global Module Index", "M", "modules"], ["simpy", "How to use <em>Collectors</em> with <em>SimPy</em>", "N", "next"], ["collector", "The Collector in-depth", "P", "previous"]], "meta": {}, "parents": [], "toc": "<ul>\n<li><a class=\"reference external\" href=\"#\">How to use the storage backends</a><ul>\n<li><a class=\"reference external\" href=\"#pytables-hdf5\">PyTables/HDF5</a><ul>\n<li><a class=\"reference external\" href=\"#example\">Example</a></li>\n</ul>\n</li>\n<li><a class=\"reference external\" href=\"#ms-excel\">MS Excel</a><ul>\n<li><a class=\"reference external\" href=\"#id1\">Example</a></li>\n</ul>\n</li>\n<li><a class=\"reference external\" href=\"#whats-next\">What\u2019s next?</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../collector/", "title": "The Collector in-depth"}, "metatags": ""}
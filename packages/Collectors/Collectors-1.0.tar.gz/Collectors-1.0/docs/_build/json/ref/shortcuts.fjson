{"body": "<div class=\"section\" id=\"module-collectors.shortcuts\">\n<span id=\"ref-shortcuts\"></span><h1><tt class=\"xref docutils literal\"><span class=\"pre\">collectors.shortcuts</span></tt> \u2014&nbsp;Useful shortcut functions<a class=\"headerlink\" href=\"#module-collectors.shortcuts\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Shortcut functions for <a title=\"collectors.core.Collector\" class=\"reference external\" href=\"../core/#collectors.core.Collector\"><tt class=\"xref docutils literal\"><span class=\"pre\">Collector</span></tt></a>.</p>\n<dl class=\"function\">\n<dt id=\"collectors.shortcuts.get\">\n<tt class=\"descclassname\">collectors.shortcuts.</tt><tt class=\"descname\">get</tt><big>(</big><em>obj</em>, <em>*attributes</em><big>)</big><a class=\"headerlink\" href=\"#collectors.shortcuts.get\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This is a shortcut that creates lambda functions for several attributes\nof an object. All functions will automatically get the attribute\u2019s value\neach time they are called.</p>\n<p>The results of <tt class=\"docutils literal\"><span class=\"pre\">get</span></tt> can be directly passed into a collector.</p>\n<div class=\"highlight-python\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">collectors</span> <span class=\"kn\">import</span> <span class=\"n\">Collector</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Spam</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">spam</span> <span class=\"o\">=</span> <span class=\"n\">Spam</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">spam</span><span class=\"p\">,</span> <span class=\"s\">&#39;a&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;b&#39;</span><span class=\"p\">)</span> <span class=\"c\">#doctest: +ELLIPSIS</span>\n<span class=\"go\">((&#39;a&#39;, &lt;function &lt;lambda&gt; at 0x...&gt;), (&#39;b&#39;, &lt;function &lt;lambda&gt; at 0x...&gt;))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c\"># Create a collector with help of get:</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Collector</span><span class=\"p\">(</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">spam</span><span class=\"p\">,</span> <span class=\"s\">&#39;a&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;b&#39;</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span><span class=\"p\">()</span> <span class=\"c\"># Collect values.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span>\n<span class=\"go\">([1], [2])</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"collectors.shortcuts.get_objects\">\n<tt class=\"descclassname\">collectors.shortcuts.</tt><tt class=\"descname\">get_objects</tt><big>(</big><em>objs</em>, <em>id_attr</em>, <em>*attributes</em><big>)</big><a class=\"headerlink\" href=\"#collectors.shortcuts.get_objects\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This function works similarly to <a title=\"collectors.shortcuts.get\" class=\"reference internal\" href=\"#collectors.shortcuts.get\"><tt class=\"xref docutils literal\"><span class=\"pre\">get()</span></tt></a>, but it creates the lambda\nfunctions for multiple objects (<tt class=\"docutils literal\"><span class=\"pre\">objs</span></tt>).</p>\n<p>That becomes useful if you want to monitor the same attributes of several\nhomogeneous objects with one <a title=\"collectors.core.Collector\" class=\"reference external\" href=\"../core/#collectors.core.Collector\"><tt class=\"xref docutils literal\"><span class=\"pre\">Collector</span></tt></a> instance.\nThe objects must have a unique attribute (<tt class=\"docutils literal\"><span class=\"pre\">id_attr</span></tt>), which will be used\nas prefix in the resulting <tt class=\"docutils literal\"><span class=\"pre\">(name,</span> <span class=\"pre\">func)</span></tt> tuples. The value of that\nattribute should begin with a letter or an underscore.</p>\n<div class=\"highlight-python\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">collectors</span> <span class=\"kn\">import</span> <span class=\"n\">Collector</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Spam</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">obj_id</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">obj_id</span> <span class=\"o\">=</span> <span class=\"s\">&#39;spam</span><span class=\"si\">%d</span><span class=\"s\">&#39;</span> <span class=\"o\">%</span> <span class=\"n\">i</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">spams</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">Spam</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Collector</span><span class=\"p\">(</span><span class=\"n\">get_objects</span><span class=\"p\">(</span><span class=\"n\">spams</span><span class=\"p\">,</span> <span class=\"s\">&#39;obj_id&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;a&#39;</span><span class=\"p\">,</span> <span class=\"s\">&#39;b&#39;</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c\"># Attributes are now named like &quot;objid_attrname&quot;:</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">spam0_a</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">spam0_b</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">spam1_a</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">spam1_b</span>\n<span class=\"go\">([], [], [], [])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span><span class=\"p\">()</span> <span class=\"c\"># This will collect the values of a and be for each spam object.</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"collectors.shortcuts.manual\">\n<tt class=\"descclassname\">collectors.shortcuts.</tt><tt class=\"descname\">manual</tt><big>(</big><em>value</em><big>)</big><a class=\"headerlink\" href=\"#collectors.shortcuts.manual\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This a simple shortcut for a function like <tt class=\"docutils literal\"><span class=\"pre\">lambda</span> <span class=\"pre\">x:</span> <span class=\"pre\">x</span></tt> if you want to\npass variable values manually to a monitor:</p>\n<div class=\"highlight-python\"><div class=\"highlight\"><pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">collectors</span> <span class=\"kn\">import</span> <span class=\"n\">Collector</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Collector</span><span class=\"p\">((</span><span class=\"s\">&#39;a&#39;</span><span class=\"p\">,</span> <span class=\"n\">manual</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span>\n<span class=\"go\">([3],)</span>\n</pre></div>\n</div>\n</dd></dl>\n\n</div>\n", "display_toc": false, "title": "<tt class=\"docutils literal docutils literal\"><span class=\"pre\">collectors.shortcuts</span></tt> \u2014&nbsp;Useful shortcut functions", "sourcename": "ref/shortcuts.txt", "current_page_name": "ref/shortcuts", "next": {"link": "../storage/", "title": "<tt class=\"docutils literal\"><span class=\"pre\">collectors.storage</span></tt> \u2014&nbsp;Advanced storage backends"}, "rellinks": [["genindex", "General Index", "I", "index"], ["modindex", "Global Module Index", "M", "modules"], ["ref/storage", "<tt class=\"docutils literal\"><span class=\"pre\">collectors.storage</span></tt> \u2014&nbsp;Advanced storage backends", "N", "next"], ["ref/core", "<tt class=\"docutils literal docutils literal docutils literal\"><span class=\"pre\">collectors.core</span></tt> \u2014 Core classes", "P", "previous"]], "meta": {}, "parents": [{"link": "../", "title": "API-Reference"}], "toc": "<ul>\n<li><a class=\"reference external\" href=\"#\"><tt class=\"docutils literal\"><span class=\"pre\">collectors.shortcuts</span></tt> \u2014&nbsp;Useful shortcut functions</a></li>\n</ul>\n", "prev": {"link": "../core/", "title": "<tt class=\"docutils literal docutils literal docutils literal\"><span class=\"pre\">collectors.core</span></tt> \u2014 Core classes"}, "metatags": ""}
Ext.namespace("GeoExt","GeoExt.data");GeoExt.data.LayerReader=function(meta,recordType){meta=meta||{};if(!(recordType instanceof Function)){recordType=GeoExt.data.LayerRecord.create(recordType||meta.fields||{});}
GeoExt.data.LayerReader.superclass.constructor.call(this,meta,recordType);};Ext.extend(GeoExt.data.LayerReader,Ext.data.DataReader,{totalRecords:null,readRecords:function(layers){var records=[];if(layers){var recordType=this.recordType,fields=recordType.prototype.fields;var i,lenI,j,lenJ,layer,values,field,v;for(i=0,lenI=layers.length;i<lenI;i++){layer=layers[i];values={};for(j=0,lenJ=fields.length;j<lenJ;j++){field=fields.items[j];v=layer[field.mapping||field.name]||field.defaultValue;v=field.convert(v);values[field.name]=v;}
values.layer=layer;records[records.length]=new recordType(values,layer.id);}}
return{records:records,totalRecords:this.totalRecords!=null?this.totalRecords:records.length};}});Ext.namespace("GeoExt.data");GeoExt.data.LayerStoreMixin={map:null,reader:null,constructor:function(config){config=config||{};config.reader=config.reader||new GeoExt.data.LayerReader({},config.recordType);var map=config.map instanceof GeoExt.MapPanel?config.map.map:config.map;delete config.map;arguments.callee.superclass.constructor.call(this,config);if(map){var layers=map.layers;var layer;for(var i=0;i<layers.length;++i){layer=layers[i];this.add((this.reader.readRecords([layer])).records);}
this.bind(map);config.layers&&map.addLayers(config.layers);}},bind:function(map){if(!this.map){this.map=map;map.events.on({"addlayer":this.onAddLayer,"removelayer":this.onRemoveLayer,scope:this});this.on({"add":this.onAdd,"remove":this.onRemove,scope:this});}},unbind:function(){if(this.map){this.map.events.un({"addlayer":this.onAddLayer,"removelayer":this.onRemoveLayer,scope:this});this.un({"add":this.onAdd,"remove":this.onRemove,scope:this});this.map=null;}},onAddLayer:function(evt){if(!this._adding){var layer=evt.layer;this._adding=true;this.add((this.reader.readRecords([layer])).records);delete this._adding;}},onRemoveLayer:function(evt){if(!this._removing){var layer=evt.layer;this._removing=true;this.remove(this.getById(layer.id));delete this._removing;}},onAdd:function(store,records,index){if(!this._adding){this._adding=true;for(var i=0;i<records.length;++i){this.map.addLayer(records[i].get("layer"));}
delete this._adding;}},onRemove:function(store,record,index){if(!this._removing){this._removing=true;this.map.removeLayer(record.get("layer"));delete this._removing;}}};GeoExt.data.LayerStore=Ext.extend(Ext.data.Store,GeoExt.data.LayerStoreMixin);Ext.namespace("GeoExt");GeoExt.MapPanel=Ext.extend(Ext.Panel,{map:null,layers:null,center:null,zoom:null,extent:null,initComponent:function(){if(!(this.map instanceof OpenLayers.Map)){this.map=new OpenLayers.Map(Ext.applyIf(this.map||{},{allOverlays:true}));}
var layers=this.layers;if(!layers||layers instanceof Array){this.layers=new GeoExt.data.LayerStore({layers:layers,map:this.map});}
if(typeof this.center=="string"){this.center=OpenLayers.LonLat.fromString(this.center);}else if(this.center instanceof Array){this.center=new OpenLayers.LonLat(this.center[0],this.center[1]);}
if(typeof this.extent=="string"){this.extent=OpenLayers.Bounds.fromString(this.extent);}else if(this.extent instanceof Array){this.extent=OpenLayers.Bounds.fromArray(this.extent);}
GeoExt.MapPanel.superclass.initComponent.call(this);},updateMapSize:function(){if(this.map){this.map.updateSize();}},onRender:function(){GeoExt.MapPanel.superclass.onRender.apply(this,arguments);this.map.render(this.body.dom);if(this.map.layers.length>0){if(this.center){this.map.setCenter(this.center,this.zoom);}else if(this.extent){this.map.zoomToExtent(this.extent);}else{this.map.zoomToMaxExtent();}}},afterRender:function(){GeoExt.MapPanel.superclass.afterRender.apply(this,arguments);if(this.ownerCt){this.ownerCt.on("move",this.updateMapSize,this);}},onResize:function(){GeoExt.MapPanel.superclass.onResize.apply(this,arguments);this.updateMapSize();},onDestroy:function(){if(this.ownerCt){this.ownerCt.un("move",this.updateMapSize,this);}
GeoExt.MapPanel.superclass.onDestroy.apply(this,arguments);}});Ext.reg('gx_mappanel',GeoExt.MapPanel);Ext.namespace("GeoExt.data");GeoExt.data.LayerRecord=Ext.data.Record.create([{name:"layer"},{name:"title",type:"string",mapping:"name"}]);GeoExt.data.LayerRecord.create=function(o){var f=Ext.extend(GeoExt.data.LayerRecord,{});var p=f.prototype;if(o){for(var i=0,len=o.length;i<len;i++){p.fields.add(new Ext.data.Field(o[i]));}}
return f;};

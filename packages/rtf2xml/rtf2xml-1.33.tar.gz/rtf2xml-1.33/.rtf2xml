# Put this file in your home directory.

# Use if you want to have a local dtd. 
# raw-dtd-path =  /home/paul/cvs/rtf2xml/dtd/rtf2xml.5.dtd


# smart-output
# Instead of having to specify the - -output option each time, have
# the script determine it for you. If you had a file "my_file.rtf", the
# script would output the file to "my_file.xml". 
smart-output =  false



# level

# Set this value to "0" for quiet operation.

# Set this value to "1" for normal operation.
#
# Any value above "1" puts the script in a debug mode.

# Setting this value to 3 will cause rtf2xml to create a debug directory
# and copy files while processing to this directory.

#0: Never quit; never print out error messages
#1: Never quit. Print out error messages useful to user, but not those
#   that would only be useful for programmer.
#2: Never quit, but print out all messages.
#3: Print out all messages. Make a debug folder and output to that.
#4: Print out all messages. Quit with minor error.
#5: Print out all messages. Quit with any error.

level = 1




# convert-symbol


# Either always convert or never convert symbol font to its
# appropriate utf-8 character entities.

# See the documentation for a full explanation.

convert-symbol  = true


# convert-wingdings

# Either always convert or never convert wingdings font to its
# appropriate utf-8 character entities.

# See the documentation for a full explation.
#
convert-wingdings  = true

# convert-zapf-dingbats

# Either always convert or never convert zapf dingbats font to its
# appropriate utf-8 character entities.

# See the documentation for a full explanation.

convert-zapf-dingbats  = true

# convert-caps

# Either always convert or never convert caps.

# See the documentation for a full explanation.

# convert-caps  = true

# indent

# No fully implemented.

# Use 1 if you want block elements to have newlines after them.

# Use 0 otherwise.

indent  = 0

# lists

# Whether to have rtf2xml make lists
# lists = false

lists = true

# group-styles
# Whether to have rtf2xml group text by style names. The following:

#  <paragraph-definition name = "custom-style" num = "s001" widow-control="false">
#       ....
#       <para/>
#  </paragraph-defintion>
#  <paragraph-definition name = "custom-style" num = "s00r" widow-control="true">
#       ....
#       <para/>
#  </paragraph-defintion>

# becomes:

# <group-style name = "quote">
#       <paragraph-definition name = "quote" num = "s001" widow-control="false">
#           ....
#           <para/>
#       </paragraph-defintion>
#       <paragraph-definition name = "quote" num = "s00r" widow-control="true">
#           ....
#           <para/>
#       </paragraph-defintion>
# </group-style>

# Some formatting is lost, but often times the formatting is superficial, and
# if you have taken care to use styles in your RTF document, such loss 
# should not matter
# group-styles = true

group-styles = false

# group-borders

# use a wrapper tag for paragraphs for with the same borders
# Such a wrapper tag is useful if you convert the RTF to XHTML
# Don't use this option if you convert RTF to sdoc or TEI

group-borders = true



# headings-to-sections
# 
# Wheter to convert headings to sections
# headings-to-sections = true

headings-to-sections = false


# empty-paragraphs

# By default, rtf2xml writes an empty paragraph element 
# (<para/>) for paragraphs with no content. If you do 
# do not wish for this emtpy element to be written, 
# set empty-paragraphs to false

write-empty-paragraphs = true

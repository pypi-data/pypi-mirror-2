#! /bin/sh /usr/share/dpatch/dpatch-run
## 021_checkin_user_as_bug_submit_user.patch by
##      Jiang Zongwen <jzw@poweron.com.cn>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: 1. As a command line script, error output message should direct to stderr
## DP: 2. Try to checkin user as bugtracking submit user account.
## DP: 3. Settings in config_inc.php:
## DP:    $g_source_control_set_status_to     = RESOLVED;
## DP:    $g_source_control_set_resolution_to = FIXED;
## DP:    $g_source_control_regexp = "/\b(?:issue|bug)[\s]*[#]{0,1}(\d+)\b/i";
## DP:    $g_source_control_fixed_regexp = "/\bfix(?:ed)?[\s]*(?:issue|bug)[\s]*[#]{0,1}(\d+)\b/i";


@DPATCH@
Index: mantis/core/checkin.php
===================================================================
--- a/core/checkin.php	2006-05-28 22:27:15.000000000 +0800
+++ b/core/checkin.php	2007-08-27 19:14:38.000000000 +0800
@@ -17,6 +17,13 @@
 #
 # You should have received a copy of the GNU General Public License
 # along with Mantis.  If not, see <http://www.gnu.org/licenses/>.
+#
+# Usage: 
+#       echo "commit log..." | php checkin.php checkin_user
+#
+# Note: Try to use checkin user as bugtracking submit user at first,
+#       use source_control_account (defined in config file) as a fallback.
+#
 	# See the README and LICENSE files for details
 
 	# --------------------------------------------------------
@@ -27,17 +34,37 @@
 	$g_bypass_headers = 1;
 	require_once( dirname( dirname( __FILE__ ) ) . DIRECTORY_SEPARATOR . 'core.php' );
 
+	$stderr = fopen('php://stderr', 'w');
+	
+	function print_err($message)
+	{
+		global $stderr;
+		fwrite($stderr, $message);
+	}
+
 	# Make sure this script doesn't run via the webserver
 	# @@@ This is a hack to detect php-cgi, there must be a better way.
 	if ( isset( $_SERVER['SERVER_PORT'] ) ) {
-		echo "checkin.php is not allowed to run through the webserver.\n";
+		print_err ("checkin.php is not allowed to run through the webserver.\n");
 		exit( 1 );
 	}
 
-	# Check that the username is set and exists
-	$t_username = config_get( 'source_control_account' );
-	if ( is_blank( $t_username ) || ( user_get_id_by_name( $t_username ) === false ) ) {
-		echo "Invalid source control account ('$t_username').\n";
+	$accounts = array();
+	if (count($_SERVER["argv"]) == 2)
+		$accounts[] = $_SERVER["argv"][1];
+	$accounts[] = config_get( 'source_control_account' );
+	$t_username = "";
+	foreach ($accounts as $username)
+	{
+		if ( (! is_blank( $username )) && ( user_get_id_by_name( $username ) !== false ) )
+		{
+			$t_username = $username;
+			break;
+		}
+	}
+	if ( is_blank( $t_username ) )
+	{
+		print_err ("Invalid source control account ('" . join(', ',$accounts) . "').\n");
 		exit( 1 );
 	}
 
@@ -47,7 +74,7 @@
 
 	# Detect references to issues + concat all lines to have the comment log.
 	$t_commit_regexp = config_get( 'source_control_regexp' );
-    $t_commit_fixed_regexp = config_get( 'source_control_fixed_regexp' );
+	$t_commit_fixed_regexp = config_get( 'source_control_fixed_regexp' );
 
 	$t_comment = '';
 	$t_issues = array();
@@ -69,13 +96,13 @@
 
 	# If no issues found, then no work to do.
 	if ( ( count( $t_issues ) == 0 ) && ( count( $t_fixed_issues ) == 0 ) ) {
-		echo "Comment does not reference any issues.\n";
+		print_err ("Comment does not reference any issues.\n");
 		exit(0);
 	}
 
 	# Login as source control user
 	if ( !auth_attempt_script_login( $t_username ) ) {
-		echo "Unable to login\n";
+		print_err ("Unable to login\n");
 		exit( 1 );
 	}
 

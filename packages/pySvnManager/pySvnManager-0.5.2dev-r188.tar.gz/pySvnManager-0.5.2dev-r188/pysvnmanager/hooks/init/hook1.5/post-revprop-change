#!/bin/bash

# POST-REVPROP-CHANGE HOOK
#
# The post-revprop-change hook is invoked after a revision property
# has been added, modified or deleted.  Subversion runs this hook by
# invoking a program (script, executable, binary, etc.) named
# 'post-revprop-change' (for which this file is a template), with the
# following ordered arguments:
#
#   [1] REPOS-PATH   (the path to this repository)
#   [2] REV          (the revision that was tweaked)
#   [3] USER         (the username of the person tweaking the property)
#   [4] PROPNAME     (the property that was changed)
#   [5] ACTION       (the property was 'A'dded, 'M'odified, or 'D'eleted)
#
#   [STDIN] PROPVAL  ** the old property value is passed via STDIN.
#
# Because the propchange has already completed and cannot be undone,
# the exit code of the hook program is ignored.  The hook program
# can use the 'svnlook' utility to help it examine the
# new property value.
#
# On a Unix system, the normal procedure is to have 'post-revprop-change'
# invoke other programs to do the real work, though it may do the
# work itself too.
#
# Note that 'post-revprop-change' must be executable by the user(s) who will
# invoke it (typically the user httpd runs as), and that user must
# have filesystem-level permission to access the repository.
#
# On a Windows system, you should name the hook program
# 'post-revprop-change.bat' or 'post-revprop-change.exe',
# but the basic idea is the same.
# 
# The hook program typically does not inherit the environment of
# its parent process.  For example, a common problem is for the
# PATH environment variable to not be set to its usual value, so
# that subprograms fail to launch unless invoked via absolute path.
# If you're having unexpected problems with a hook program, the
# culprit may be unusual (or missing) environment variables.
# 
# Here is an example hook script, for a Unix /bin/bash interpreter.
# For more examples and pre-written hooks, see those in
# the Subversion repository at
# http://svn.collab.net/repos/svn/trunk/tools/hook-scripts/ and
# http://svn.collab.net/repos/svn/trunk/contrib/hook-scripts/


REPOS="$1"
REV="$2"
USER="$3"
PROPNAME="$4"
ACTION="$5"
TOOLS_DIR=$REPOS/hooks/scripts

source $REPOS/hooks/parse_ini.sh
CONFIG=$REPOS/conf/hooks.ini
LOGFILE=$REPOS/conf/tmplog.revprop
if [ -f $CONFIG ]; then
  readconf email 
  readconf mirror
fi

:> $LOGFILE

if [ "$email_notify_enable" = "yes" ]; then
    #$TOOLS_DIR/commit-email.pl --revprop-change "$REPOS" "$REV" "$USER" "$PROPNAME" -m "." --from noreply@foo.bar -r noreply@foo.bar -s "[Prefix]" list@foo.bar
    mailcmd="$TOOLS_DIR/commit-email.pl --revprop-change \"$REPOS\" \"$REV\" \"$USER\" \"$PROPNAME\" $email_notify_config"
    eval $mailcmd 2>>$LOGFILE
fi

## Sync with downstream mirror sites using svnsync
if [ "$mirror_enabled" = "yes" ]; then
    # log to file: -l debug --logfile /tmp/svnsync.log
    mirrorcmd="python $TOOLS_DIR/svn_mirror.py --prop --repo \"$REPOS\" --rev \"$REV\" --urls \"$mirror_urls\" --user \"$mirror_username\" --password \"$mirror_password\""
    eval $mirrorcmd 2>>$LOGFILE
fi

if [ -s $LOGFILE ]; then
  cat $LOGFILE 1>&2
  rm $LOGFILE
  exit 1
fi

import transaction

from repoze.bfg.configuration import Configurator
from repoze.tm import after_end
from repoze.tm import isActive

from {{package}}.models import appmaker
from {{package}}.models import DBSession

def handle_teardown(event):
    environ = event.request.environ
    if isActive(environ):
        t = transaction.get()
        after_end.register(DBSession.remove, t)

def app(global_config, **settings):
    """ This function returns a WSGI application.
    
    It is usually called by the PasteDeploy framework during 
    ``paster serve``.
    """
    zcml_file = settings.get('configure_zcml', 'configure.zcml')
    db_string = settings.get('db_string')
    if db_string is None:
        raise ValueError("No 'db_string' in application configuration.")
    db_echo = settings.get('db_echo')
    if db_echo is None:
        db_echo = True
    get_root = appmaker(db_string, db_echo)
    config = Configurator(settings=settings, root_factory=get_root)
    config.begin()
    config.load_zcml(zcml_file)
    config.end()
    return config.make_wsgi_app()


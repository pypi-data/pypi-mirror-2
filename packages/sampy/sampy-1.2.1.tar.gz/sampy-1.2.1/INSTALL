**********************
* SAMPy INSTALLATION *
**********************

To install SAMPy, just copy sampy.py wherever you want and use it! If
you want to use it within your python script or application you can put 
sampy.py in your PYTHONPATH or copy it into the site-packages 
directory of your Python installation. Otherwise you can just put it 
directly in your working directory.

Another possibility is to use the standard Python Distribution Utilities
which directly install SAMPy as a module of your default Python and
copies "sampy" script under <install-path>/bin:

  shell > python setup.py install
  
To have a more complete description of the installation script features,
type:

  shell > python setup.py install --help
  
Usually the only additional option you would need to use is --prefix, 
which allows to define a non-standard installation path.
  
To generate the API documentation you need Epydoc installed on your
workstation. If you don't have it, it can be downloded here:

  http://epydoc.sourceforge.net/

You might use this commad-line to create SAMPy API documentation:

  shell > epydoc -v --no-private --no-sourcecode -o apidoc sampy.py

Epydoc will put the API (HTML format) in the apidoc directory.

You can also access the API documentation on-line, visiting the address:

  http://cosmos.iasf-milano.inaf.it/pandora/docs/samp/

and following the links referring to the present SAMPy release.


****************
* REQUIREMENTS *
****************

- Python 2.5 or later (Python 3.x not supported) compiled to support 
  Tkinter.

- Tcl/Tk 8.5.x or later (required by Python unless embedded within the
  Python distribution). You can download them from:

    http://www.tcl.tk/
  
- To support SSL connections, "ssl" Python module is required. It is
  distributed by default starting from Python 2.6, but if you are
  using Python 2.5 you can download it from:

    http://docs.python.org/dev/library/ssl.html

- Basic Authentication feature requires Python compiled with Berkeley
  DB library support. Usually Berkeley DB is supported by default, but
  if you don't have the BDB native library and/or Python is not compiled
  to support it, you can download it from:

    http://pypi.python.org/pypi/bsddb3/4.7.1
    http://www.oracle.com/technology/products/berkeley-db/db

  To check whether your Python supports Berkeley DB, from your shell
  type:

    shell > python -c "import bsddb"

  If it doesn't result in an import error, then Berkeley DB is
  supported.


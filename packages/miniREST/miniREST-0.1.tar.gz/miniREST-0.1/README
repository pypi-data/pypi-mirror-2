
    Simple interface to the REST web services. Supports 'GET', 'PUT', 'POST' and 'DELETE' methods.
    Tailored towards JSON based services, although should be pretty straightforward to implement
    different data payload methods:
        - subclass from RESTClient
        - implement _build_<data type>_payload method (see json example)
        - pass data to get, put, etc method as 'data_<data type>' keyword argument

    Examples:

        c = RESTClient('api.example.com')
        c.get('/api/v1/resource/')
        c.put('/api/v1/resource/instance1/', data_json={'params': ['res1a', 'res1b']})
        c.post('/api/v1/resource/', data_json={'name': 'instance2', 'params': ['res2a', 'res2b']})
        c.delete('/api/v1/resource/instance1/')

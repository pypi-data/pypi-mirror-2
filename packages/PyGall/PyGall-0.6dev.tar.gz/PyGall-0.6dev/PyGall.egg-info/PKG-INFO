Metadata-Version: 1.0
Name: PyGall
Version: 0.6dev
Summary: Image gallery built with the Pylons web framework
Home-page: http://gitorious.org/PyGall
Author: Bruno Binet
Author-email: binet.bruno@gmail.com
License: BSD
Description: PyGall
        ======
        
        About PyGall
        ------------
        
        PyGall is a web photo gallery written in Python and built on the
        `Pylons <http://pylonshq.com>`_ web framework.
        
        PyGall is written by Bruno Binet and is licensed under a
        BSD permissive license.
        
        Features
        --------
        
        PyGall currently provides the following features:
        
        * Upload photos either through the browser or manually on your webserver
          (scp, ftp, ...).
        
        * Import photos in the gallery: they are automatically scaled and rotated
          using exif informations.
          If using `F-Spot <http://f-spot.org/>`_ as your personal photo management
          desktop application, PyGall can automatically import photos from F-Spot.
        
        * Browse and view photos through a nice interface borrowed from
          `Galleria <http://galleria.aino.se/>`_.
        
        Install
        -------
        
        You should have a working setuptools (or distribute) environment. I advise
        you to use `virtualenv <http://pypi.python.org/pypi/virtualenv>`_ to create
        an isolated Python environment.
        
        You can install PyGall with the following command::
        
            $ easy_install PyGall
        
        PyGall is now installed. Let's create a configuration file for you PyGall
        photo gallery::
        
            $ paster make-config PyGall pygall.ini
        
        The newly created ``pygall.ini`` file will be used by Paster to initialize
        the application, create the database, and serve your application.
        
        So you need to create the database::
        
            $ paster setup-app pygall.ini#pygall
        
        And finally, you can serve your PyGall application::
        
            $ paster serve pygall.ini
        
        That's all, you can point your browser to http://127.0.0.1:5000 and start
        using PyGall. You're ready to import your first photos!
        
        
        
        Changes
        =======
        
        0.5
        ---
        
        * Add support for authentication and authorization with repoze.who/what
        
        * Refactor model definition to use declarative syntax (default in Pylons 1.0)
        
        * Keep only one checkbox that will be used by both delete and import buttons
        
        * Upgrade to Pylons 1.0 and SQLAlchemy 0.6
        
        * Various small other fixes
        
        * Get rid off import phase: photos are now directly published
        
        * Reorganisation of templates directory
        
        0.4.1
        -----
        
        * Add long_description to setup.py
        
        * Add docs and license information
        
        0.4
        ---
        
        * fspot_to_pygall.py: speed up query by deactivating lazy loading
        
        * fspot_to_pygall.py: calculate md5sum for photos imported from f-spot
        
        * fspot_to_pygall.py: export the modified version to pygall instead of the
          original
        
        * Reorganize templates struture on filesystem
        
        * Move model declaration to its own file
        
        0.3
        ---
        
        * First usable release with upload and import support.
        
        * Refactoring of mako templates using inheritance.
        
        
Keywords: pylons wsgi image photo web gallery
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: End Users/Desktop
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: JavaScript
Classifier: Framework :: Pylons
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Internet :: WWW/HTTP :: WSGI
Classifier: Topic :: Internet :: WWW/HTTP :: WSGI :: Application
Classifier: Topic :: Multimedia :: Graphics :: Viewers

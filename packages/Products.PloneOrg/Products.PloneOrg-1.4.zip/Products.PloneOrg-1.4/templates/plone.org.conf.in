# This file is generated by buildout
    upstream backend {${upstream}}

    server {
        listen ${listen};
        server_name ${vhost};
        root ${buildout:directory}/static; 

        location = /nginx-status {
            stub_status on;
            allow 127.0.0.1;
            deny all;
        }

        ${robots-blocker}

        gzip             on;
        gzip_min_length  1000;
        gzip_proxied     any;
        gzip_types       text/xml text/plain application/xml;

        client_max_body_size 10M;

        # increase proxy buffer size to avoid problems with HTMLParser
        proxy_buffers 8 256k;
        proxy_buffer_size 256k;

        # Push this to varnish to avoid problems
        # error_page 500 /500.html;
        location = /500.html {  }

        location ^~ /images/ {
            autoindex on;
        }
        location = /plone.css {  }
        location = /ie.css {  }
        location ~ /emptypage$ {
            rewrite ^/(.*)$ ${virtual-host}/$1 break;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-XDV "true";
        }
        location /_xdv_disabled/ {
            rewrite ^/_xdv_disabled/(.*)$ ${virtual-host}/$1 break;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-XDV "true";
        }
        location ~ /(plugins/plone|refbrowser_popup|image_view_fullscreen) {
            rewrite ^/(.*)$ ${virtual-host}/$1 break;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-XDV "true";
        }
        location / {
            rewrite ^/login_form https://${vhost}/login_form;
            rewrite ^/logged_out https://${vhost}/logged_out;
	    rewrite ^/(.+)/require_login(.*) https://${vhost}/$1/require_login$2;
            rewrite ^/(.*)$ ${virtual-host}/$1 break;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-XDV "true";
            xslt_stylesheet ${buildout:directory}/etc/default.xsl;
            xslt_html_parser on;
            xslt_types text/html;
        }
        location = / {
            rewrite ^/(.*)$ ${virtual-host}/$1 break;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-XDV "true";
            xslt_stylesheet ${buildout:directory}/etc/wide.xsl;
            xslt_html_parser on;
            xslt_types text/html;
        }
        location ~ ^/(products(/psc_view_ploneorg)?|documentation|documentation/kb|support|support/support_view)/?$ {
            rewrite ^/(.*)$ ${virtual-host}/$1 break;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-XDV "true";
            xslt_stylesheet ${buildout:directory}/etc/wide.xsl;
            xslt_html_parser on;
            xslt_types text/html;
        }
        location ~ ^/products/(simple|links|\+\+simple\+\+)/?$ {
            rewrite ^    http://dist.${vhost}/packages permanent;
        }
        location /dist.plone.org {
            internal;
            # autoindex on;
            alias /srv/dist.plone.org/http/root/;
        }
        location ~ ^/products/(.*)/((.*)(tgz|tar.gz|bz2|tar.bz2|zip|tbz|exe))$ {
            rewrite ^/products/(.*)/((.*)(tgz|tar.gz|bz2|tar.bz2|zip|tbz|exe))$ /dist.plone.org/packages/$3$4;
        }
    }

    server {
        listen ${listen};
        server_name manage.${vhost};
        root ${buildout:directory}/static;

        location = /nginx-status {
            stub_status on;
            allow 127.0.0.1;
            deny all;
        }

        gzip             on;
        gzip_min_length  1000;
        gzip_proxied     any;
        gzip_types       text/xml text/plain application/xml;

        location / {
            proxy_pass http://${manage-ip-port}${manage-virtual-host}/;
        }
        location ^~ /images/ {
            autoindex on;
        }
        location ^~ /plone.css {  }
        location ^~ /ie.css {  }
        location ~ /emptypage$ {
            rewrite ^/(.*)$ ${virtual-host}/$1 break;
            proxy_pass http://backend;
        }
    }

    server {
            listen ${listen};
            server_name dist.${vhost};
            root /srv/dist.plone.org/http/root;
            location / {
                    autoindex on;
            }
            access_log ${buildout:directory}/var/log/dist.${vhost}-access.log main;
            error_log ${buildout:directory}/var/log/dist.${vhost}-error.log;
    }

    # plone countries
#    server {
#            listen ${listen};
#            server_name     plone.asia;
#            location / {
#                    rewrite ^/(.*)$ http://${vhost}/$1 last;
#            }
#    }
#
#    server {
#            listen ${listen};
#            server_name     plone.it www.plone.it;
#            location / {
#                    rewrite ^/(.*)$ http://${vhost}/countries/it/$1 last;
#            }
#    }
#
#    server {
#            listen ${listen};
#            server_name     plone.hu www.plone.hu;
#            location / {
#                    rewrite ^/(.*)$ http://${vhost}/countries/hu/$1 last;
#            }
#    }
#
#    server {
#            listen ${listen};
#            server_name     plone.eu www.plone.eu;
#            location / {
#                    rewrite ^/(.*)$ http://${vhost}/countries/mx/$1 last;
#            }
#    }

    server {
            listen ${listen};
            server_name     plone.com.mx www.plone.com.mx plone.org.mx www.plone.org.mx;
            location / {
                    rewrite ^/(.*)$ http://${vhost}/countries/mx/$1 last;
            }
    }
    server {
            listen ${listen};
            server_name     plone.com.ar www.plone.com.ar plone.cl www.plone.cl;
            location / {
                    rewrite ^/(.*)$ http://${vhost}/countries/conosur/$1 last;
            }
    }

    # BBB media.plone.org
    server {
            listen ${listen};
            server_name     media.${vhost};
            rewrite ^(.*) http://dist.${vhost}/media$1 permanent;
            access_log ${buildout:directory}/var/log/dist.${vhost}-access.log main;
            error_log ${buildout:directory}/var/log/dist.${vhost}-error.log;
    }

    # rewrite www.plone.org to plone.org for SEO
    server {
            listen ${listen};
            server_name     www.${vhost};
            location / {
                    rewrite ^/(.*)$ http://${vhost}/$1 last;
            }
    }

    # rewrites to map plone.net requests to new locations in plone.org
    server {
            listen ${listen};
            server_name     plone.net;
            location / {
                rewrite ^/about(.*) http://${vhost}/foundation/donors$1 permanent;
                rewrite ^/providers(.*) http://${vhost}/support/providers$1 permanent;
                rewrite ^/case-studies(.*) http://${vhost}/support/case-studies$1 permanent;
                rewrite ^/buzz(.*) http://${vhost}/news/buzz$1 permanent;
                rewrite ^/sites(.*) http://${vhost}/support/sites$1 permanent;
                rewrite ^/hosting-providers(.*) http://${vhost}/support/hosting-providers$1 permanent;
                # following rule must be last
                rewrite ^ http://${vhost}/support/network permanent;
            }
    }

    # rewrite www.plone.net to plone.net
    server {
            listen ${listen};
            server_name     www.plone.net;
            location / {
                    rewrite ^/(.*)$ http://plone.net/$1 last;
            }
    }


<html xmlns="http://www.w3.org/1999/xhtml" xmlns:py="http://genshi.edgewall.org/" width="100%">
    <head>
        <title>Crud</title>
        <style type="text/css">
            * {
                font-family: 'Lucida Grande';
                font-size: 13px;
            }
            .errors{
                color: red;
            }
            a {
                text-decoration: None;
                color: black;
            }
            a:hover {
                text-decoration: underline;
            }
            .editor {
                border: 1px solid silver;
                empty-cells: show;
                border-spacing: 1px;
            }
            .editor th {
                background-color: gray;
                color: white;
                text-align:right;
                padding-left: 4px;
                padding-right: 4px;
            }
            .grid th {
                background-color: transparent;
                color: white;
                padding: 2px;
                padding-left: 4px;
                padding-right: 4px;
            }
            .grid td {
                background-color: white;
                padding: 2px;
            }
            .grid {
                empty-cells: show;
                background-color: gray;
                border-spacing: 1px;
            }
            .odd {
                background-color:#eee;
                cursor: hand;
            }
            .even {
                background-color:#fff;
                cursor: hand;
            }
            .hilite {
                background-color:#dfd;
                cursor: hand;
            }
            .odd:hover, .even:hover, .hilite:hover {
                background-color:#ddf;
            }
            .Icon {
                padding-top: 2px;
                padding-bottom: 2px;
                padding-left: 18px;
                padding-right: 2px;
                height:16px;
                background-repeat: no-repeat;
                background-position: 1px 2px;
                display: inline-block;
                cursor: hand;
                border: 1px solid silver;
            }
            .Icon:hover {
                background-color: silver;
            }
            .add {
                background-image: url('images/16x16/Add.png');
            }
            .save {
                background-image: url('images/16x16/Save.png');
            }
            .delete {
                background-image: url('images/16x16/Delete.png');
            }
            .edit {
                background-image: url('images/16x16/Edit.png');
            }
            .view {
                background-image: url('images/16x16/Right.png');
            }</style>
        <script language="javascript">
            function doAdd() {
                document.e_form._action.value = 'add';
                document.e_form.submit();
            }
            function doSave() {
                document.e_form._action.value = 'save';
                document.e_form.submit();
            }
            function doDelete() {
                document.e_form._action.value = 'delete';
                document.e_form.submit();
            }
            function doAppend() {
                document.m_form._action.value = 'append';
                document.m_form.submit();
            }
            function doUpdate() {
                document.m_form._action.value = 'update';
                document.m_form.submit();
            }
            function doRemove() {
                document.m_form._action.value = 'remove';
                document.m_form.submit();
            }
            function doRelate() {
                document.r_form.submit();
            }</script>
    </head>
    <body>
        <table cellpadding="10" cellspacing="10">
            <tr>
                <td valign="top" rowspan="2">
                    <ul>
                        <li py:for="table in tables">
                            <a href="?_table=${table}" py:content="table"
                            >table</a>
                        </li>
                    </ul>
                    <ul class="errors" py:if="errors">
                        <li py:for="key, value in errors.items()">${key}: ${value}</li>
                    </ul>
                </td>
                <td valign="top" rowspan="2">
                    <table class="grid">
                        <tr>
                            <th/>
                            <th py:for="col in model.cols"
                                py:content="col"> col </th>
                        </tr>
                        <tr py:for="i,item in enumerate(model.items(session))"
                            py:attrs="{'class':item.id==id and 'hilite' or (i%2==0 and 'even' or 'odd')}"
                            onclick="document.location='?_table=${model.name}&amp;id=${item.id}';">
                            <td>
                                <div class="edit Icon"/>
                            </td>
                            <td py:for="col in model.cols" py:if="not col.startswith('_')">
                                <span py:content="getattr(item,col)"
                                    py:if="not hasattr(col, 'foreignKey')"> value </span>
                                <a
                                    href="?_table=${col.foreignKey}&amp;id=${getattr(item,col.name)}"
                                    py:if="hasattr(col, 'foreignKey')"
                                    py:content="fkey_display(getattr(item,col))">fkey</a>
                            </td>
                        </tr>
                    </table>
                </td>
                <td valign="top" py:if="edit">
                    <form method="post" name="e_form">
                        <input type="hidden" name="id" value="${id}" py:if="id"/>
                        <input type="hidden" name="_table" value="${model.__name__}"/>
                        <input type="hidden" name="_action" value="${id and 'save' or 'add'}"/>
                        <table class="editor">
                            <tr py:for="col in model.sqlmeta.columnList">
                                <th py:content="col.origName.replace('_',' ')"> col </th>
                                <td py:choose="" style="padding:0px;">
                                    <input type="text" size="4" name="${col.name}"
                                        value="${edit and getattr(edit, col.name)}"
                                        py:when="col.foreignKey"/>
                                    <input type="text" size="30" name="${col.origName}"
                                        value="${edit and getattr(edit, col.origName)}"
                                        py:otherwise=""/>
                                    <span py:if="col.foreignKey and edit and getattr(edit, col.origName)">
                                        <a
                                            href="?_table=${col.foreignKey}&amp;id=${getattr(edit,col.name)}"
                                            py:if="col.foreignKey"
                                            py:content="fkey_display(getattr(edit,col.origName))">fkey</a>
                                    </span>
                                </td>
                            </tr>
                        </table>
                        <div align="right" style="padding:4px;">
                            <div class="delete Icon" py:if="id" onclick="doDelete();">Delete</div>
                            <div class="save Icon" py:if="id" onclick="doSave();">Save</div>
                            <div class="add Icon" onclick="doAdd();">Add</div>
                        </div>
                    </form>
                </td>
            </tr>
            <tr py:if="edit and join">
                <td>
                    <hr/>
                    <div py:for="j in model.sqlmeta.joinDefinitions" py:content="j.name"
                        class="view Icon"
                        onclick="document.location='?_table=${model.__name__}&amp;id=${edit.id}&amp;_join=${j.name}';"/>
                    <form name="m_form" method="post" py:if="not join.hasIntermediateTable()">
                        <input type="hidden" name="id" value="${id}" py:if="id"/>
                        <input type="hidden" name="_id" value="${_id}" py:if="_id"/>
                        <input type="hidden" name="_table" value="${model.__name__}"/>
                        <input type="hidden" name="_action" value="${_id and 'update' or 'append'}"/>
                        <input type="hidden" name="_join" value="${join.joinDef.name}"/>
                        <input type="hidden" name="${join.joinColumn.replace('_id', 'ID')}"
                            value="${edit.id}"/>
                        <table class="grid">
                            <tr>
                                <th/>
                                <th py:for="col in joinmodel.sqlmeta.columnList"
                                    py:content="col.origName.replace('_',' ')"
                                    py:if="col.dbName!=join.joinColumn"> col </th>
                                <th/>
                            </tr>
                            <tr>
                                <td/>
                                <td py:choose="" style="padding:0px;"
                                    py:for="col in joinmodel.sqlmeta.columnList"
                                    py:if="col.dbName!=join.joinColumn">
                                    <input type="text" size="4" name="${col.name}"
                                        value="${joinedit and getattr(joinedit, col.name)}"
                                        py:when="col.foreignKey"/>
                                    <input type="text" size="16" name="${col.origName}"
                                        value="${joinedit and getattr(joinedit, col.origName)}"
                                        py:otherwise=""/>
                                    <span py:if="col.foreignKey and joinedit and getattr(joinedit, col.origName)">
                                        <a
                                            href="?_table=${col.foreignKey}&amp;id=${getattr(joinedit,col.name)}"
                                            py:if="col.foreignKey"
                                            py:content="fkey_display(getattr(joinedit,col.origName))">fkey</a>
                                    </span>
                                </td>
                                <td/>
                            </tr>
                            <tr py:for="i,item in enumerate(getattr(edit,join.joinDef.name))"
                                py:attrs="{'class':item.id==_id and 'hilite' or (i%2==0 and 'even' or 'odd')}">
                                <td>
                                    <div class="edit Icon" 
                                        onclick="document.location='?_table=${model.__name__}&amp;id=${edit.id}&amp;_id=${item.id}&amp;_join=${join.joinDef.name}';"/>
                                </td>
                                <td py:for="col in joinmodel.sqlmeta.columnList"
                                    py:if="col.dbName!=join.joinColumn">
                                    <span py:content="getattr(item,col.origName)"
                                        py:if="not col.foreignKey"> value </span>
                                    <a
                                        href="?_table=${col.foreignKey}&amp;id=${getattr(item,col.name)}"
                                        py:if="col.foreignKey"
                                        py:content="fkey_display(getattr(item,col.origName))"
                                    >fkey</a>
                                </td>
                                <td>
                                    <div class="view Icon" onclick="document.location='?_table=${joinmodel.__name__}&amp;id=${item.id}'"/>
                                </td>
                            </tr>
                        </table>
                        <div align="right" style="padding:4px;">
                            <div class="delete Icon" py:if="_id" onclick="doRemove();">Delete</div>
                            <div class="save Icon" py:if="_id" onclick="doUpdate();">Save</div>
                            <div class="add Icon" onclick="doAppend();">Add</div>
                        </div>
                    </form>
                    <form name="r_form" method="post" py:if="join.hasIntermediateTable()">
                        <input type="hidden" name="id" value="${id}" py:if="id"/>
                        <input type="hidden" name="_table" value="${model.__name__}"/>
                        <input type="hidden" name="_action" value="relate"/>
                        <input type="hidden" name="_join" value="${join.joinDef.name}"/>
                        <ul>
                            <li py:for="item in joinmodel.select()">
                                <input type="checkbox" name="_related" value="${item.id}"
                                    py:attrs="{'checked':item in list(getattr(edit,join.joinDef.name)) and 'check' or None}"
                                /> ${fkey_display(item)}</li>
                        </ul>

                        <div align="right" style="padding:4px;">
                            <div class="save Icon" py:if="id" onclick="doRelate();">Save</div>
                        </div>
                    </form>
                </td>
            </tr>
        </table>
    </body>
</html>

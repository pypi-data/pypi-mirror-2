{
 "kind": "discovery#describeItem",
 "name": "zoo",
 "version": "v1",
 "description": "Zoo API used for Apiary testing",
 "restBasePath": "/zoo/",
 "rpcPath": "/rpc",
 "features": [
  "dataWrapper"
 ],
 "schemas": {
  "Animal": {
   "id": "Animal",
   "type": "object",
   "properties": {
    "etag": {
     "type": "string"
    },
    "kind": {
     "type": "string",
     "default": "zoo#animal"
    },
    "name": {
     "type": "string"
    },
    "photo": {
     "type": "object",
     "properties": {
      "filename": {
       "type": "string"
      },
      "hash": {
       "type": "string"
      },
      "hashAlgorithm": {
       "type": "string"
      },
      "size": {
       "type": "integer"
      },
      "type": {
       "type": "string"
      }
     }
    }
   }
  },
  "Animal2": {
   "id": "Animal2",
   "type": "object",
   "properties": {
    "kind": {
     "type": "string",
     "default": "zoo#animal"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "AnimalFeed": {
   "id": "AnimalFeed",
   "type": "object",
   "properties": {
    "etag": {
     "type": "string"
    },
    "items": {
     "type": "array",
     "items": {
      "$ref": "Animal"
     }
    },
    "kind": {
     "type": "string",
     "default": "zoo#animalFeed"
    }
   }
  },
  "LoadFeed": {
   "id": "LoadFeed",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "type": "object",
      "properties": {
       "doubleVal": {
        "type": "number"
       },
       "enumVal": {
        "type": "string"
       },
       "kind": {
        "type": "string",
        "default": "zoo#loadValue"
       },
       "longVal": {
        "type": "integer"
       },
       "stringVal": {
        "type": "string"
       }
      }
     }
    },
    "kind": {
     "type": "string",
     "default": "zoo#loadFeed"
    }
   }
  }
 },
 "methods": {
  "query": {
   "restPath": "query",
   "rpcMethod": "bigquery.query",
   "httpMethod": "GET",
   "parameters": {
    "q": {
     "type": "string",
     "restParameterType": "query",
     "required": false,
     "repeated": false
    },
    "i": {
     "type": "integer",
     "restParameterType": "query",
     "required": false,
     "repeated": false,
     "minimum": "0",
     "maximum": "4294967295",
     "default": "20"
    },
    "n": {
     "type": "number",
     "restParameterType": "query",
     "required": false,
     "repeated": false
    },
    "b": {
     "type": "boolean",
     "restParameterType": "query",
     "required": false,
     "repeated": false
    },
    "a": {
     "type": "any",
     "restParameterType": "query",
     "required": false,
     "repeated": false
    },
    "o": {
     "type": "object",
     "restParameterType": "query",
     "required": false,
     "repeated": false
    },
    "e": {
     "type": "string",
     "restParameterType": "query",
     "required": false,
     "repeated": false,
     "enum": [
       "foo",
       "bar"
     ]
    }
   }
  }
 },
 "resources": {
  "my": {
   "resources": {
    "favorites": {
     "methods": {
      "list": {
       "restPath": "favorites/@me/mine",
       "rpcMethod": "zoo.animals.mine",
       "httpMethod": "GET",
       "parameters": {
        "max-results": {
          "restParameterType": "query",
          "required": false
        }
       }
      }
     }
    }
   }
  },
  "animals": {
   "methods": {
    "crossbreed": {
     "restPath": "animals/crossbreed",
     "rpcMethod": "zoo.animals.crossbreed",
     "httpMethod": "POST",
     "description": "Cross-breed animals",
     "response": {
      "$ref": "Animal2"
     }
    },
    "delete": {
     "restPath": "animals/{name}",
     "rpcMethod": "zoo.animals.delete",
     "httpMethod": "DELETE",
     "description": "Delete animals",
     "parameters": {
      "name": {
       "restParameterType": "path",
       "required": true,
       "description": "Name of the animal to delete",
       "type": "string"
      }
     },
     "parameterOrder": [
      "name"
     ]
    },
    "get": {
     "restPath": "animals/{name}",
     "rpcMethod": "zoo.animals.get",
     "httpMethod": "GET",
     "description": "Get animals",
     "parameters": {
      "name": {
       "restParameterType": "path",
       "required": true,
       "description": "Name of the animal to load",
       "type": "string"
      },
      "projection": {
       "restParameterType": "query",
       "type": "string",
       "enum": [
        "full"
       ],
       "enumDescriptions": [
        "Include everything"
       ]
      }
     },
     "parameterOrder": [
      "name"
     ],
     "response": {
      "$ref": "Animal"
     }
    },
    "insert": {
     "restPath": "animals",
     "rpcMethod": "zoo.animals.insert",
     "httpMethod": "POST",
     "description": "Insert animals",
     "request": {
      "$ref": "Animal"
     },
     "response": {
      "$ref": "Animal"
     }
    },
    "list": {
     "restPath": "animals",
     "rpcMethod": "zoo.animals.list",
     "httpMethod": "GET",
     "description": "List animals",
     "parameters": {
      "max-results": {
       "restParameterType": "query",
       "description": "Maximum number of results to return",
       "type": "integer",
       "minimum": "0"
      },
      "name": {
       "restParameterType": "query",
       "description": "Restrict result to animals with this name",
       "type": "string"
      },
      "projection": {
       "restParameterType": "query",
       "type": "string",
       "enum": [
        "full"
       ],
       "enumDescriptions": [
        "Include absolutely everything"
       ]
      },
      "start-token": {
       "restParameterType": "query",
       "description": "Pagination token",
       "type": "string"
      }
     },
     "response": {
      "$ref": "AnimalFeed"
     }
    },
    "patch": {
     "restPath": "animals/{name}",
     "rpcMethod": "zoo.animals.patch",
     "httpMethod": "PATCH",
     "description": "Update animals",
     "parameters": {
      "name": {
       "restParameterType": "path",
       "required": true,
       "description": "Name of the animal to update",
       "type": "string"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "Animal"
     },
     "response": {
      "$ref": "Animal"
     }
    },
    "update": {
     "restPath": "animals/{name}",
     "rpcMethod": "zoo.animals.update",
     "httpMethod": "PUT",
     "description": "Update animals",
     "parameters": {
      "name": {
       "restParameterType": "path",
       "description": "Name of the animal to update",
       "type": "string"
      }
     },
     "parameterOrder": [
      "name"
     ],
     "request": {
      "$ref": "Animal"
     },
     "response": {
      "$ref": "Animal"
     }
    }
   }
  },
  "load": {
   "methods": {
    "list": {
     "restPath": "load",
     "rpcMethod": "zoo.load.list",
     "httpMethod": "GET",
     "response": {
      "$ref": "LoadFeed"
     }
    }
   }
  },
  "loadNoTemplate": {
   "methods": {
    "list": {
     "restPath": "loadNoTemplate",
     "rpcMethod": "zoo.loadNoTemplate.list",
     "httpMethod": "GET"
    }
   }
  },
  "scopedAnimals": {
   "methods": {
    "list": {
     "restPath": "scopedanimals",
     "rpcMethod": "zoo.scopedAnimals.list",
     "httpMethod": "GET",
     "description": "List animals (scoped)",
     "parameters": {
      "max-results": {
       "restParameterType": "query",
       "description": "Maximum number of results to return",
       "type": "integer",
       "minimum": "0"
      },
      "name": {
       "restParameterType": "query",
       "description": "Restrict result to animals with this name",
       "type": "string"
      },
      "projection": {
       "restParameterType": "query",
       "type": "string",
       "enum": [
        "full"
       ],
       "enumDescriptions": [
        "Include absolutely everything"
       ]
      },
      "start-token": {
       "restParameterType": "query",
       "description": "Pagination token",
       "type": "string"
      }
     },
     "response": {
      "$ref": "AnimalFeed"
     }
    }
   }
  }
 }
}

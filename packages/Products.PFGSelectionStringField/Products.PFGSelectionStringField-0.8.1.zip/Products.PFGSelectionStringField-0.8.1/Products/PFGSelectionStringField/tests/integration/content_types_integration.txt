Initial imports and defines
----
    >>> from Products.CMFCore.utils import getToolByName
    >>> wftool = getToolByName(portal, "portal_workflow")
    >>> types = getToolByName(portal, 'portal_types')


Check PFGSelectionStringField
----
    >>> field = types.getTypeInfo('PFGSelectionStringField')
    >>> field.title
    'Selection String Field'
    >>> field.description
    'Selection String Field'
    >>> field.content_meta_type
    'PFGSelectionStringField'
    >>> field.factory
    'addPFGSelectionStringField'
    >>> field.immediate_view
    'fg_base_view_p3'
    >>> field.global_allow == False
    True
    >>> field.filter_content_types == False
    True
    >>> field.allowed_content_types
    ()
    >>> field.default_view
    'fg_base_view_p3'
    >>> field.view_methods
    ('fg_base_view_p3',)

    >>> field.getMethodAliases()
    {'edit': 'atct_edit', 'sharing': '@@sharing', '(Default)': '(dynamic view)', 'view': '(selected layout)'}
    >>> actions = field.listActions()
    >>> for action in actions:
    ...     (action.title, action.id, action.getActionExpression(), action.visible, action.permissions)
    ('View', 'view', 'string:${object_url}/view', True, (u'View',))
    ('Edit', 'edit', 'string:${object_url}/edit', True, (u'Modify portal content',))

Creating PFGSelectionStringField
----
    >>> from Products.PFGSelectionStringField.content import PFGSelectionStringField
    >>> field = PFGSelectionStringField('field')
    >>> field
     <PFGSelectionStringField at field>

    >>> field._at_rename_after_creation
    True

default schemata
====
    >>> field.Schema().getSchemataFields('default')
    [<Field id(string:rw)>, <Field title(string:rw)>, <Field description(text:rw)>, <Field required(boolean:rw)>, <Field fgDefault(string:rw)>, <Field fgVocabulary(lines:rw)>, <Field fgFormat(string:rw)>, <Field subject(lines:rw)>, <Field relatedItems(reference:rw)>, <Field location(string:rw)>, <Field language(string:rw)>, <Field effectiveDate(datetime:rw)>, <Field expirationDate(datetime:rw)>, <Field creation_date(datetime:rw)>, <Field modification_date(datetime:rw)>, <Field creators(lines:rw)>, <Field contributors(lines:rw)>, <Field rights(text:rw)>, <Field allowDiscussion(boolean:rw)>, <Field excludeFromNav(boolean:rw)>]

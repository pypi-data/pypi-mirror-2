TODO
====

Needed for the prototype

 * OK: autogenerate some testcontent

 * integrate the fulltext search into the portlet instead of the cliecksearch page

 * OK: Implement a way to register picker widgets for metadata elements
   every metadata element gets its own widget for visualisation
   every metadata element has its mechanism to retrieve its values (top and all)
   every metadata element has its own more view
   => There is now a basic way to register browser views for each index. I currently use a naming 
   convention to look them up. If the index is called "Subject", a browser view is looked up with the name
   slc.clicksearch.Subject. This is not nice because it does not allow a third party to register its own widget.
   Todo: implement a tree widget
   
 * OK: portlet view: Add the more link and direct to a picker widget which is specific for that metadata element.

 * OK: The portlet needs to parse the request to see if an index is in selected state. If so, the selected value 
   is displayed bold and the back link is shown.

 * If a metadata element is hierarchical, the portlet will view the root or the selected item and all 
   subitems one level below.

 * create widget definitions for all potential indexes

Could be phase 2

 * implement better result listing showing more metadata than the default search results.

Nice to have's

 * portlet edit form
   for each index the top values to be shown are currently defined in a textfield. 
   This is confusing for vocabularies which store non-human-readable keys. We need some sort of a picker

 * Also it should be possible to define a better Title instead of using the name of the index. 
   E.g. "Workflow State" instead of  "review_state".

     
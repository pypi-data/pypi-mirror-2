>>> from fluentxml import Parser

>>> data = u'<?quux bar foo?><?qux xyzzy="baz" foobar="waldo"?><foo xmlns="foobar" xmlns:a="toto"><a:bar>data</a:bar><baz>re</baz><stream:stream xmlns="jabber:client" xmlns:stream="http://etherx.jabber.org/streams" id="c2s&amp;123"><a>&quot;&amp;&lt;&gt;</a></stream:stream></foo>'

>>> class MyParser(Parser):
...     def instruction(self, target, data):
...         print target, isinstance(data, unicode), isinstance(data, dict), data
>>> p = MyParser(data=data)
quux True False bar foo
qux True False xyzzy="baz" foobar="waldo"

>>> Parser.pi_data_to_dict = True
>>> p = MyParser(data=data)
quux True False bar foo
qux False True {u'foobar': u'waldo', u'xyzzy': u'baz'}

>>> MyParser.pi_data_to_dict = False
>>> p = MyParser(data=data)
quux True False bar foo
qux True False xyzzy="baz" foobar="waldo"


>>> Parser.pi_data_to_dict = False

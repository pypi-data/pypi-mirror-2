>>> from fluentxml import Parser

Test parsing

>>> x = u'''<roster>
...   <person age="42" sex="M" like="Jane">John Doe</person>
...   <person age="21" sex="F" like="dango">Jane Doe</person>
...   <person age="24" sex="U" like="rice">Rose Well</person>
... </roster>'''
>>> p = Parser()
>>> p.feed(x)
>>> foo = p.root

Test serialization

>>> unicode(foo)
u'<roster>\n  <person age="42" like="Jane" sex="M">John Doe</person>\n  <person age="21" like="dango" sex="F">Jane Doe</person>\n  <person age="24" like="rice" sex="U">Rose Well</person>\n</roster>'
>>> foo
Node(u'roster', children=[u'\n  ', Node(u'person', {u'age': u'42', u'like': u'Jane', u'sex': u'M'}, [u'John Doe']), u'\n  ', Node(u'person', {u'age': u'21', u'like': u'dango', u'sex': u'F'}, [u'Jane Doe']), u'\n  ', Node(u'person', {u'age': u'24', u'like': u'rice', u'sex': u'U'}, [u'Rose Well']), u'\n'])

Test Python attributes

>>> foo.__class__
<class 'fluentxml.Node'>
>>> foo._name
u'roster'
>>> foo._children
[u'\n  ', Node(u'person', {u'age': u'42', u'like': u'Jane', u'sex': u'M'}, [u'John Doe']), u'\n  ', Node(u'person', {u'age': u'21', u'like': u'dango', u'sex': u'F'}, [u'Jane Doe']), u'\n  ', Node(u'person', {u'age': u'24', u'like': u'rice', u'sex': u'U'}, [u'Rose Well']), u'\n']
>>> foo._texts
[u'\n  ', u'\n  ', u'\n  ', u'\n']

Test querying children

>>> foo.person
[Node(u'person', {u'age': u'42', u'like': u'Jane', u'sex': u'M'}, [u'John Doe']), Node(u'person', {u'age': u'21', u'like': u'dango', u'sex': u'F'}, [u'Jane Doe']), Node(u'person', {u'age': u'24', u'like': u'rice', u'sex': u'U'}, [u'Rose Well'])]
>>> foo.person[0]
Node(u'person', {u'age': u'42', u'like': u'Jane', u'sex': u'M'}, [u'John Doe'])
>>> foo.person[0]['age']
u'42'
>>> foo.person[0]['like']
u'Jane'
>>> foo.person[0]._texts
[u'John Doe']
>>> foo.person[0]._texts[0]
u'John Doe'

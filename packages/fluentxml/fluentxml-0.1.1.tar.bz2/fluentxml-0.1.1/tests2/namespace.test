>>> from fluentxml import Parser, Null
>>> from pprint import pprint

>>> x = u'<foo xmlns="foobar" xmlns:a="toto"><a:bar>data</a:bar><baz>re</baz><stream:stream xmlns="jabber:client" xmlns:stream="http://etherx.jabber.org/streams" id="c2s_123"><a/></stream:stream></foo>'
>>> p = Parser(data=x)
>>> foo = p.root
>>> foo[u'xmlns']
u'foobar'
>>> foo[u'xmlns:a']
u'toto'
>>> foo._namespace
u'foobar'
>>> foo._lookup_namespace()
u'foobar'
>>> foo._lookup_namespace(u'a')
u'toto'
>>> pprint(foo._children)
[ANode(u'bar', children=[u'data']),
 Node(u'baz', children=[u're']),
 StreamNode(u'stream', {u'xmlns': u'jabber:client', u'xmlns:stream': u'http://etherx.jabber.org/streams', u'id': u'c2s_123'}, [Node(u'a')])]
>>> foo.bar[0][u'xmlns'] is Null()
True
>>> foo.bar[0]._namespace
u'toto'
>>> stream = foo.stream[0]
>>> print stream
<stream:stream xmlns="jabber:client" xmlns:stream="http://etherx.jabber.org/streams" id="c2s_123"><a/></stream:stream>
>>> stream._namespace
u'http://etherx.jabber.org/streams'
>>> stream._namespace_name
u'stream'
>>> stream._name
u'stream'

>>> stream._name = u'maerts'
>>> stream._namespace
u'http://etherx.jabber.org/streams'
>>> stream._namespace_name
u'stream'
>>> stream._name
u'maerts'

>>> stream._name = u'a:waldo'
>>> stream._namespace
u'toto'
>>> stream._namespace_name
u'a'
>>> stream._name
u'waldo'
>>> stream.__class__
<class 'fluentxml.ANode'>

>>> stream._namespace_name = u''
>>> stream._namespace
u'jabber:client'
>>> stream._namespace_name
u''
>>> stream._name
u'waldo'
>>> stream
Node(u'waldo', {u'xmlns': u'jabber:client', u'xmlns:stream': u'http://etherx.jabber.org/streams', u'id': u'c2s_123'}, [Node(u'a')])

>>> stream.a[0]._namespace
u'jabber:client'

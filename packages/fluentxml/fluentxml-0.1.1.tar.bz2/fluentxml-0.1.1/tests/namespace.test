>>> from fluentxml import Parser, Null
>>> from pprint import pprint

>>> x = '<foo xmlns="foobar" xmlns:a="toto"><a:bar>data</a:bar><baz>re</baz><stream:stream xmlns="jabber:client" xmlns:stream="http://etherx.jabber.org/streams" id="c2s_123"><a/></stream:stream></foo>'
>>> p = Parser(data=x)
>>> foo = p.root
>>> foo['xmlns']
'foobar'
>>> foo['xmlns:a']
'toto'
>>> foo._namespace
'foobar'
>>> foo._lookup_namespace()
'foobar'
>>> foo._lookup_namespace('a')
'toto'
>>> pprint(foo._children)
[ANode('bar', children=['data']),
 Node('baz', children=['re']),
 StreamNode('stream', {'xmlns': 'jabber:client', 'xmlns:stream': 'http://etherx.jabber.org/streams', 'id': 'c2s_123'}, [Node('a')])]
>>> foo.bar[0]['xmlns'] is Null()
True
>>> foo.bar[0]._namespace
'toto'
>>> stream = foo.stream[0]
>>> print(stream)
<stream:stream xmlns="jabber:client" xmlns:stream="http://etherx.jabber.org/streams" id="c2s_123"><a/></stream:stream>
>>> stream._namespace
'http://etherx.jabber.org/streams'
>>> stream._namespace_name
'stream'
>>> stream._name
'stream'

>>> stream._name = 'maerts'
>>> stream._namespace
'http://etherx.jabber.org/streams'
>>> stream._namespace_name
'stream'
>>> stream._name
'maerts'

>>> stream._name = 'a:waldo'
>>> stream._namespace
'toto'
>>> stream._namespace_name
'a'
>>> stream._name
'waldo'
>>> stream.__class__
<class 'fluentxml.ANode'>

>>> stream._namespace_name = ''
>>> stream._namespace
'jabber:client'
>>> stream._namespace_name
''
>>> stream._name
'waldo'
>>> stream
Node('waldo', {'xmlns': 'jabber:client', 'xmlns:stream': 'http://etherx.jabber.org/streams', 'id': 'c2s_123'}, [Node('a')])

>>> stream.a[0]._namespace
'jabber:client'


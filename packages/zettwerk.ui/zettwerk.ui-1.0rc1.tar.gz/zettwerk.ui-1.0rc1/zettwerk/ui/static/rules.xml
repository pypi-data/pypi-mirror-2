<?xml version="1.0" encoding="UTF-8"?>
<rules
    xmlns="http://namespaces.plone.org/diazo"
    xmlns:css="http://namespaces.plone.org/diazo/css"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <theme href="blank.html" />
  <replace css:theme="html" css:content="html" />

  <!-- start: font -->
  <xsl:template match="body">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="class"><xsl:value-of select="concat('ui-widget ', @class)" /></xsl:attribute>
      <xsl:apply-templates match="node()" />
    </xsl:copy>
  </xsl:template>
  <!-- end: font -->

  <!-- start: global tabs -->
  <xsl:template match="*[@id='visual-portal-wrapper']//ul[@id='portal-globalnav']">
    <div id="ui-globalnav" class="ui-bottonset">
      <xsl:copy>
	<xsl:apply-templates select="@*" />
	<xsl:attribute name="class">ui-state-default ui-corner-all</xsl:attribute>
	<xsl:attribute name="id">portal-globalnav-ui</xsl:attribute>
	<xsl:apply-templates match="node()" />
      </xsl:copy>
    </div>
  </xsl:template>

  <xsl:template match="*[@id='visual-portal-wrapper']//ul[@id='portal-globalnav']/li">
    <xsl:param name="classes">
      <xsl:choose>
	<xsl:when test="position() = 1 and @class='selected'">
	  ui-state-active ui-corner-left ui-button ui-widget ui-state-default ui-botton-text-only
	</xsl:when>
	<xsl:when test="position() = 1">
	  ui-corner-left ui-button ui-widget ui-state-default ui-botton-text-only
	</xsl:when>
	<xsl:when test="@class='selected'">
	  ui-state-active ui-button ui-widget ui-state-default ui-botton-text-only
	</xsl:when>
	<xsl:otherwise>
	  ui-button ui-widget ui-state-default ui-botton-text-only
	</xsl:otherwise>
      </xsl:choose>
    </xsl:param>
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="class">
	<xsl:value-of select="concat($classes, ' ', @class)" />
      </xsl:attribute>
      <xsl:apply-templates select="node()" />
    </xsl:copy>
  </xsl:template>

  <xsl:template match="*[@id='visual-portal-wrapper']//ul[@id='portal-globalnav']/li/a">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="class"><xsl:value-of select="concat('ui-button-text ', @class)" /></xsl:attribute>
      <xsl:apply-templates select="node()" />
    </xsl:copy>
  </xsl:template>
  <!-- end: global tabs -->


  <!-- start: personal tools -->
  <xsl:template match="*[@id='visual-portal-wrapper']//dl[@id='portal-personaltools']">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="class">
      <xsl:value-of select="concat('ui-helper-reset ui-state-default ui-corner-bottom ', @class)" /></xsl:attribute>
      <xsl:attribute name="id">portal-personaltools-ui</xsl:attribute>
      <xsl:apply-templates match="node()" />
    </xsl:copy>
  </xsl:template>

  <xsl:template match="*[@id='visual-portal-wrapper']//dl[@id='portal-personaltools']/dd">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="class"><xsl:value-of select="concat('ui-helper-reset ui-state-default ui-corner-all ', @class)" /></xsl:attribute>
      <xsl:apply-templates select="node()" />
    </xsl:copy>
  </xsl:template>
  <!-- end: personal tools -->

  <!-- start: statusbar -->
  <xsl:template match="*[@id='visual-portal-wrapper']//dl[contains(concat( ' ', @class, ' ' ), ' portalMessage ') and contains(concat( ' ', @class, ' ' ), ' warning ')] | *[@id='visual-portal-wrapper']//dl[contains(concat( ' ', @class, ' ' ), ' portalMessage ') and contains(concat( ' ', @class, ' ' ), ' error ')]">
    <xsl:if test="dd/*">
      <div class="ui-custom-status-container ui-state-error ui-corner-all">
	<p>
	  <span style="float: left; margin-right: 0.3em;" class="ui-icon ui-icon-alert"></span>
	  <strong><xsl:value-of select="dt" /></strong>
	  <xsl:apply-templates select="dd/text() | dd/*" />
	</p>
      </div>
    </xsl:if>
  </xsl:template>

  <xsl:template match="*[@id='visual-portal-wrapper']//dl[contains(concat( ' ', @class, ' ' ), ' portalMessage ') and contains(concat( ' ', @class, ' ' ), ' info ')]">
    <xsl:if test="dd/text()">
      <div class="ui-custom-status-container ui-state-highlight ui-corner-all">
	<p>
	  <span style="float: left; margin-right: 0.3em;" class="ui-icon ui-icon-info"></span>
	  <strong><xsl:value-of select="dt" /></strong>
	  <xsl:apply-templates select="dd/text() | dd/*" />
	</p>
      </div>
    </xsl:if>
  </xsl:template>
  <!-- end: statusbar -->

  <!-- start: forms -->
  <xsl:template match="*[@id='visual-portal-wrapper']//input | *[@id='visual-portal-wrapper']//select | *[@id='visual-portal-wrapper']//textarea">
    <span class="ui-button-text-only">
      <xsl:copy>
	<xsl:apply-templates select="@*" />
	<xsl:attribute name="class"><xsl:value-of select="concat('ui-widget-content ui-corner-all ui-button-text ui-button ui-widget hover ', @class)" /></xsl:attribute>
	<xsl:attribute name="style">padding-left: 4px; padding-right: 4px;</xsl:attribute>
	<xsl:apply-templates select="node()" />
      </xsl:copy>
    </span>
  </xsl:template>

  <xsl:template match="*[@id='visual-portal-wrapper']//div[@class='managePortletsLink']">
    <span class="ui-button-text-only">
      <xsl:copy>
	<xsl:attribute name="class">ui-widget-content ui-corner-all ui-button-text ui-button ui-widget hover</xsl:attribute>
	<xsl:attribute name="style">display: block; padding-left: 4px; padding-right: 4px;</xsl:attribute>
	<xsl:apply-templates select="node()" />
      </xsl:copy>
    </span>
  </xsl:template>

  <xsl:template match="*[@id='visual-portal-wrapper']//*[@id='LSShadow']">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="class"><xsl:value-of select="concat('ui-corner-all ui-state-focus ', @class)" /></xsl:attribute>
      <xsl:apply-templates select="node()" />
    </xsl:copy>
  </xsl:template>

  <xsl:template match="*[@id='visual-portal-wrapper']//input[@type='checkbox']">
    <xsl:param name="disabled">
      <xsl:if test="./@disabled">
	ui-state-disabled
      </xsl:if>
    </xsl:param>
    <span class="ui-button-text-only">
      <span style="display:inline-block;width:16px;height:16px;margin-right:5px;">
	<xsl:attribute name="class">
	  <xsl:value-of select="$disabled" />
	  hover ui-widget-content ui-corner-all
	</xsl:attribute>
	<label style="width: 16px; height: 16px; display: inline-block">
	</label>
      </span>
      <xsl:copy>
	<xsl:apply-templates select="@*" />
	<xsl:attribute name="style">display: none;</xsl:attribute>
      </xsl:copy>
    </span>
  </xsl:template>
  <!--  end: forms -->

  <!-- start: tabs: dl variant -->
  <xsl:template match="*[@id='visual-portal-wrapper']//dl[contains(concat( ' ', @class, ' ' ), ' enableFormTabbing ')]">
    <div class="ui-tabs ui-widget ui-widget-content ui-corner-all">
      <ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-top">
	<xsl:for-each select="dt[1]">
	  <li class="ui-state-default ui-state-active ui-corner-top" style="display:inline;">
	    <a style="color: none;">
	      <xsl:attribute name="href">#<xsl:value-of select="../dd[1]/@id" /></xsl:attribute>
	      <span class="ui-state-default ui-state-active">
		<xsl:value-of select="text()" />
	      </span>
	    </a>
	  </li>
	</xsl:for-each>
	<xsl:for-each select="dt[position()!=1]">
	  <li class="ui-state-default ui-corner-top" style="display:inline;">
	    <a style="color: none;">
	      <xsl:attribute name="href">#<xsl:value-of select="../dd[position()!=1]/@id" /></xsl:attribute>
	      <span class="ui-state-default">
		<xsl:value-of select="text()" />
	      </span>
	    </a>
	  </li>
	</xsl:for-each>
      </ul>
      <dl style="padding-top: 2em;">
	<xsl:apply-templates select="node()" />
      </dl>
    </div>
  </xsl:template>
  <xsl:template match="*[@id='visual-portal-wrapper']//dl[contains(concat( ' ', @class, ' ' ), ' enableFormTabbing ')]/dd[1]">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="style">border: none;</xsl:attribute>
      <xsl:apply-templates select="node()" />
    </xsl:copy>
  </xsl:template>
  <xsl:template match="*[@id='visual-portal-wrapper']//dl[contains(concat( ' ', @class, ' ' ), ' enableFormTabbing ')]/dd[position()!=1]">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="style">display: none; border: none;</xsl:attribute>
      <xsl:apply-templates select="node()" />
    </xsl:copy>
  </xsl:template>
  <xsl:template match="*[@id='visual-portal-wrapper']//dl[contains(@class, 'enableFormTabbing')]/dt">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="style">display: none;</xsl:attribute>
      <xsl:apply-templates select="node()" />
    </xsl:copy>
  </xsl:template>
  <!-- end: tabs: ul variant -->

  <!-- start: tabs: form variant -->
  <xsl:template match="*[@id='visual-portal-wrapper']//form[contains(concat( ' ', @class, ' ' ), ' enableFormTabbing ')]">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <div class="ui-tabs ui-widget ui-widget-content ui-corner-all">
    	<ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-top">
	  <xsl:for-each select="fieldset[1]">
	    <li class="ui-state-default ui-state-active ui-corner-top" style="display:inline;">
	      <a style="color: none;">
		<xsl:attribute name="href">#<xsl:value-of select="legend/@id" /></xsl:attribute>
		<span class="ui-state-default ui-state-active">
		  <xsl:value-of select="legend/text()" />
		</span>
	      </a>
	    </li>
	  </xsl:for-each>
	  <xsl:for-each select="fieldset[position()!=1]">
	    <li class="ui-state-default ui-corner-top" style="display:inline;">
	      <a style="color: none;">
		<xsl:attribute name="href">#<xsl:value-of select="legend/@id" /></xsl:attribute>
		<span class="ui-state-default">
		  <xsl:value-of select="legend/text()" />
		</span>
	      </a>
	    </li>
	  </xsl:for-each>
    	</ul>
	<xsl:apply-templates select="node()" />
      </div>
    </xsl:copy>
  </xsl:template>

  <xsl:template match="*[@id='visual-portal-wrapper']//form[contains(concat( ' ', @class, ' ' ), ' enableFormTabbing ')]/fieldset[1]">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="style">border: none;</xsl:attribute>
      <xsl:apply-templates select="node()" />
    </xsl:copy>
  </xsl:template>
  <xsl:template match="*[@id='visual-portal-wrapper']//form[contains(concat( ' ', @class, ' ' ), ' enableFormTabbing ')]/fieldset[position()!=1]">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="style">display: none; border: none;</xsl:attribute>
      <xsl:apply-templates select="node()" />
    </xsl:copy>
  </xsl:template>

  <xsl:template match="*[@id='visual-portal-wrapper']//form[contains(@class, 'enableFormTabbing')]/fieldset/legend">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="style">display: none;</xsl:attribute>
      <xsl:apply-templates select="node()" />
    </xsl:copy>
  </xsl:template>
  <!-- end: tabs -->

  <!-- start: footer -->
  <xsl:template match="*[@id='visual-portal-wrapper']//*[@id='portal-footer']">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="class">ui-state-active ui-corner-all</xsl:attribute>
      <xsl:attribute name="id">portal-footer-ui</xsl:attribute>
      <xsl:apply-templates select="node()" />
    </xsl:copy>
  </xsl:template>
  <!-- end: footer -->

  <!-- start: portlets -->
  <xsl:template match="*[@id='visual-portal-wrapper']//dl[contains(concat( ' ', @class, ' ' ), concat( ' ', 'portlet', ' '))]">
    <dl>
      <xsl:attribute name="class"><xsl:value-of select="concat('ui-widget-content ui-corner-all ui-helper-reset ', @class)" /></xsl:attribute>
      <xsl:apply-templates select="node()" />
    </dl>
  </xsl:template>

  <xsl:template match="*[@id='visual-portal-wrapper']//*[@class='portletHeader']">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="class"><xsl:value-of select="concat('ui-state-default ui-corner-all ', @class)" /></xsl:attribute>
      <xsl:apply-templates select="node()" />
    </xsl:copy>
  </xsl:template>

  <xsl:template match="*[@id='visual-portal-wrapper']//*[@class='portletHeader']/a">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="class"><xsl:value-of select="concat('ui-state-default ui-corner-all ', @class)" /></xsl:attribute>
      <span class="ui-state-default" style="border: 0px;">
	<xsl:apply-templates select="node()" />
      </span>
    </xsl:copy>
  </xsl:template>

  <xsl:template match="*[@id='visual-portal-wrapper']//td[@class='todaynoevent'] | td[@class='event']">
    <xsl:copy>
      <xsl:attribute name="class">ui-state-highlight ui-corner-all</xsl:attribute>
      <xsl:apply-templates select="node()" />
    </xsl:copy>
  </xsl:template>

  <xsl:template match="*[@id='visual-portal-wrapper']//*[contains(concat( ' ', @class, ' '), ' navTreeCurrentItem ')]">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="class">
	<xsl:for-each select="@*">
	  <xsl:if test="'navTreeCurrentItem' = .">
	    <xsl:value-of select="." />
	  </xsl:if>
	</xsl:for-each>
      </xsl:attribute>
      <span style="margin-left: 0.25em; font-weight: bold;">
	<xsl:apply-templates select="node()" />
      </span>
    </xsl:copy>
  </xsl:template>
  <!-- end: portlets -->


  <!-- start: editbar -->
  <xsl:template match="*[@id='visual-portal-wrapper']//*[@id='edit-bar']">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="id">edit-bar-ui</xsl:attribute>
      <xsl:apply-templates select="node()" />
    </xsl:copy>
  </xsl:template>

  <xsl:template match="*[@id='visual-portal-wrapper']//*[@id='content-views']">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="class"><xsl:value-of select="concat('ui-state-active ui-corner-top ', @class)" /></xsl:attribute>
      <xsl:attribute name="id">content-views-ui</xsl:attribute>
      <xsl:apply-templates select="node()" />
    </xsl:copy>
  </xsl:template>

  <xsl:template match="*[@id='visual-portal-wrapper']//*[@id='contentActionMenus']">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="class"><xsl:value-of select="concat('ui-state-active ui-corner-bottom ', @class)" /></xsl:attribute>
      <xsl:attribute name="id">contentActionMenus-ui</xsl:attribute>
      <xsl:apply-templates select="node()" />
    </xsl:copy>
  </xsl:template>

  <xsl:template match="*[@id='visual-portal-wrapper']//*[@id='edit-bar']/ul/li[@class='selected']/a">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="class"><xsl:value-of select="concat('ui-state-default ui-corner-top ', @class)" /></xsl:attribute>
      <xsl:apply-templates select="node()" />
    </xsl:copy>
  </xsl:template>

  <xsl:template match="*[@id='visual-portal-wrapper']//*[@id='edit-bar']/ul/li[@class='plain']/a">
    <xsl:copy>
      <xsl:apply-templates select="@*" />
      <xsl:attribute name="class"><xsl:value-of select="concat('ui-corner-top ', @class)" /></xsl:attribute>
      <xsl:apply-templates select="node()" />
    </xsl:copy>
  </xsl:template>
  <!-- end: editbar -->

</rules>


Metadata-Version: 1.0
Name: Chameleon
Version: 2.0-rc8
Summary: Fast HTML/XML Template Compiler.
Home-page: UNKNOWN
Author: Malthe Borch
Author-email: mborch@gmail.com
License: BSD-like (http://repoze.org/license.html)
Description: Overview
        ========
        
        Chameleon is an HTML/XML template language compiler.
        
        The distribution comes with a complete template engine: Chameleon Page
        Templates [1]_.
        
        There are no external library dependencies [2]_. You can install it
        using setuptools or the newer `distribute
        <http://packages.python.org/distribute/>`_ (recommended)::
        
          $ easy_install Chameleon
        
        Formatted `documentation <http://chameleon.repoze.org/docs/latest/>`_
        is available.
        
        Platform
        ---------
        
        This library has been successfully tested on the following platforms:
        
        * Python 2.5, 2.6, 2.7
        * Python 3.1, 3.2
        * PyPy
        
        What's New in 2.x
        ------------------
        
        The 2.x series is a complete rewrite of the library and supports both
        Python 2.5+ and Python 3.1+ with a single source code.
        
        For most users it should be an easy upgrade, however note that at
        present, there is no engine for the Genshi language.
        
        New parser
        ~~~~~~~~~~
        
        This series features a new parser, implemented in pure Python. It
        parses both HTML and XML inputs (the previous parser relied on the
        expat system library and was more strict about its input).
        
        Language changes
        ~~~~~~~~~~~~~~~~
        
        The 2.x engine matches the output of the reference implementation more
        closely (usually exactly). There are less differences altogether; for
        instance, the method of escaping TALES expression (usually a
        semicolon) has been changed to match that of the reference
        implementation.
        
        This series also introduces a number of new language features:
        
        1) Support for the ``tal:on-error`` from the reference specification
        has been added.
        
        2) Inspired by the Genshi language, a pair of new attributes has been
        added: ``tal:switch`` and ``tal:case``, allowing flexible conditions.
        
        Expression engine
        ~~~~~~~~~~~~~~~~~
        
        The expression engine has been redesigned to make it easier to
        understand and extend.
        
        The engine is built on the ``ast`` module (available since Python 2.6;
        backports included for Python 2.5).
        
        Performance
        ~~~~~~~~~~~
        
        The compiler output has been optimized for complex templates. For most
        applications, the engine should perform similarly to the 1.x
        series.
        
        Very simple templates with tight loops (such as that of the "big
        table" benchmark) will see a decrease in performance. The compiler is
        optimized for dynamic variable scope and this lowers performance for
        templates that require only a static scope.
        
        
        License and Copyright
        ---------------------
        
        This software is made available as-is under a BSD-like license [3]_
        (see included copyright notice).
        
        
        Notes
        -----
        
        .. [1] The template language specifications and API for the Page
               Templates engine are based on Zope Page Templates (see in
               particular `zope.pagetemplate
               <http://pypi.python.org/pypi/zope.pagetemplate>`_). However,
               the Chameleon compiler and Page Templates engine is an entirely
               new codebase, packaged as a standalone distribution. It does
               require a Zope software environment.
        
        .. [2] The string translation interface is based on the `gettext
               <http://www.gnu.org/software/gettext/gettext.html>`_
               library. Chameleon comes with built-in support for the
               `zope.i18n <http://pypi.python.org/pypi/zope.i18n>`_ package
               which includes a translation framework
               (internationalization). If this package is installed, it will
               be used as the default translation framework. It is trivial to
               provide a custom translation function, however.
        
        .. [3] This software is licensed under the `Repoze
               <http://repoze.org/license.html>`_ license.
        
        
        Changes
        =======
        
        2.0-rc8 (2011-04-11)
        --------------------
        
        Bugfixes:
        
        - If a macro defines two slots with the same name, a caller will now
          fill both with a single usage.
        
        - If a valid of ``None`` is provided as the translation function
          argument, we now fall back to the class default.
        
        2.0-rc7 (2011-03-29)
        --------------------
        
        Bugfixes:
        
        - Fixed issue with Python 2.5 compatibility AST. This affected at
          least PyPy 1.4.
        
        Features:
        
        - The ``auto_reload`` setting now defaults to the class value; the
          base template class gives a default value of
          ``chameleon.config.AUTO_RELOAD``. This change allows a subclass to
          provide a custom default value (such as an application-specific
          debug mode setting).
        
        
        2.0-rc6 (2011-03-19)
        --------------------
        
        Features:
        
        - Added support for ``target_language`` keyword argument to render
          method. If provided, the argument will be curried onto the
          translation function.
        
        Bugfixes:
        
        - The HTML entities 'lt', 'gt' and 'quot' appearing inside content
          subtition expressions are now translated into their native character
          values. This fixes an issue where you could not dynamically create
          elements using the ``structure`` (which is possible in ZPT). The
          need to create such structure stems from the lack of an expression
          interpolation operator in ZPT.
        
        - Fixed duplicate file pointer issue with test suite (affected Windows
          platforms only). This fixes issue #9.
          [oliora]
        
        - Use already open file using ``os.fdopen`` when trying to write out
          the module source. This fixes LP #731803.
        
        
        2.0-rc5 (2011-03-07)
        --------------------
        
        Bugfixes:
        
        - Fixed a number of issues concerning the escaping of attribute
          values:
        
          1) Static attribute values are now included as they appear in the
             source.
        
             This means that invalid attribute values such as ``"true &&
             false"`` are now left alone. It's not the job of the template
             engine to correct such markup, at least not in the default mode
             of operation.
        
          2) The string expression compiler no longer unescapes
             values. Instead, this is left to each expression
             compiler. Currently only the Python expression compiler unescapes
             its input.
        
          3) The dynamic escape code sequence now correctly only replaces
             ampersands that are part of an HTML escape format.
        
        Imports:
        
        - The page template classes and the loader class can now be imported
          directly from the ``chameleon`` module.
        
        Features:
        
        - If a custom template loader is not provided, relative paths are now
          resolved using ``os.abspath`` (i.e. to the current working
          directory).
        
        - Absolute paths are normalized using ``os.path.normpath`` and
          ``os.path.expanduser``. This ensures that all paths are kept in
          their "canonical" form.
        
        
        2.0-rc4 (2011-03-03)
        --------------------
        
        Bugfixes:
        
        - Fixed an issue where the output of an end-to-end string expression
          would raise an exception if the expression evaluated to ``None`` (it
          should simply output nothing).
        
        - The ``convert`` function (which is configurable on the template
          class level) now defaults to the ``translate`` function (at
          run-time).
        
          This fixes an issue where message objects were not translated (and
          thus converted to a string) using the a provided ``translate``
          function.
        
        - Fixed string interpolation issue where an expression immediately
          succeeded by a right curly bracket would not parse.
        
          This fixes issue #5.
        
        - Fixed error where ``tal:condition`` would be evaluated after
          ``tal:repeat``.
        
        Features:
        
        - Python expression is now a TALES expression. That means that the
          pipe operator can be used to chain two or more expressions in a
          try-except sequence.
        
          This behavior was ported from the 1.x series. Note that while it's
          still possible to use the pipe character ("|") in an expression, it
          must now be escaped.
        
        - The template cache can now be shared by multiple processes.
        
        
        2.0-rc3 (2011-03-02)
        --------------------
        
        Bugfixes:
        
        - Fixed ``atexit`` handler.
        
          This fixes issue #3.
        
        - If a cache directory is specified, it will now be used even when not
          in debug mode.
        
        - Allow "comment" attribute in the TAL namespace.
        
          This fixes an issue in the sense that the reference engine allows
          any attribute within the TAL namespace. However, only "comment" is
          in common use.
        
        - The template constructor now accepts a flag ``debug`` which puts the
          template *instance* into debug-mode regardless of the global
          setting.
        
          This fixes issue #1.
        
        Features:
        
        - Added exception handler for exceptions raised while evaluating an
          expression.
        
          This handler raises (or attempts to) a new exception of the type
          ``RenderError``, with an additional base class of the original
          exception class. The string value of the exception is a formatted
          error message which includes the expression that caused the
          exception.
        
          If we are unable to create the exception class, the original
          exception is re-raised.
        
        2.0-rc2 (2011-02-28)
        --------------------
        
        - Fixed upload issue.
        
        2.0-rc1 (2011-02-28)
        --------------------
        
        - Initial public release. See documentation for what's new in this
          series.
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 2.5
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.1
Classifier: Programming Language :: Python :: 3.2

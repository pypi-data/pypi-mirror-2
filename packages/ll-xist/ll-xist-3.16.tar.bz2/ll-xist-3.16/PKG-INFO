Metadata-Version: 1.0
Name: ll-xist
Version: 3.16
Summary: Extensible HTML/XML generator, cross-platform templating language, Oracle utilities and various other tools
Home-page: http://www.livinglogic.de/Python/xist/
Author: Walter Doerwald
Author-email: walter@livinglogic.de
License: MIT
Download-URL: http://www.livinglogic.de/Python/Download.html#xist
Description: XIST provides an extensible HTML and XML generator. XIST is also a XML parser
        with a very simple and pythonesque tree API. Every XML element type corresponds
        to a Python class and these Python classes provide a conversion method to
        transform the XML tree (e.g. into HTML). XIST can be considered
        'object oriented XSLT'.
        
        XIST also includes the following modules and packages:
        
        * ``ll.make`` is an object oriented make replacement. Like make it allows
          you to specify dependencies between files and actions to be executed
          when files don't exist or are out of date with respect to one
          of their sources. But unlike make you can do this in a object oriented
          way and targets are not only limited to files.
        
        * ``ll.url`` provides classes for parsing and constructing RFC 2396
          compliant URLs.
        
        * ``ll.orasql`` provides utilities for working with cx_Oracle_:
        
          - It allows calling functions and procedures with keyword arguments.
        
          - Query results will be put into Record objects, where database fields
            are accessible as object attributes.
        
          - The ``Connection`` class provides methods for iterating through the
            database metadata.
        
          - Importing the modules adds support for URLs with the scheme ``oracle`` to
            ``ll.url``.
        
          .. _cx_Oracle: http://cx-oracle.sourceforge.net/
        
        * ``ll.ul4c`` is compiler for a templating language with similar capabilities
          to `Django's templating language`__. ``UL4`` templates are compiled to an
          internal bytecode format, which makes it possible to implement template
          renderers in other languages and makes the template code "secure" (i.e.
          template code can't open or delete files).
        
          __ http://www.djangoproject.com/documentation/templates/
        
        * ``ll.astyle`` can be used for colored terminal output (via ANSI escape
          sequences).
        
        * ``ll.color`` provides classes and functions for handling RGB color values.
          This includes the ability to convert between different color models
          (RGB, HSV, HLS) as well as to and from CSS format, and several functions
          for modifying and mixing colors.
        
        * ``ll.misc`` provides several small utility functions and classes.
        
        * ``ll.sisyphus`` provides classes for running Python scripts as cron jobs.
        
        * ``ll.daemon`` can be used on UNIX to fork a daemon process.
        
        * ``ll.xml_codec`` contains a complete codec for encoding and decoding XML.
        
        * ``ll.nightshade`` can be used to serve the output of PL/SQL
          functions/procedures with CherryPy__.
        
        __ http://www.cherrypy.org/
        
        
        Changes in 3.16 (released 01/21/2011)
        -------------------------------------
        
        * The UL4 functions ``json``, ``type``, ``islist`` and ``isdict`` can now
          handle all instances of ``collections.Mapping`` and
          ``collections.Sequence`` not just ``tuple``, ``list`` and
          ``dict``.
        
        * ``ll.sisyphus`` logging of exceptions and tracebacks should be more robust
          against encoding problems.
        
        * The ``cssutils`` version has been bumped to 0.9.7.
        
        * ``dtd2xsc.py`` can now combine the content of more than one DTD into a
          namespace. Handling of duplicate elements can be specified with a new
          ``duplicates`` option.
        
        * ``xml2xsc.py`` can now collect the XML info from multiple XML files.
        
        * Fixed a bug in the command line argument handling of ``dtd2xsc.py``.
        
        * ``dtd2xsc.py`` can now handle undefined entities.
        
        * The help message for all scripts in XIST now show the default for all options.
        
        * Replaced the function ``misc.flag`` with a class ``misc.FlagAction``
          that can be used as the action in ``argparse.ArgumentParser.add_argument``
          calls.
        
        * Command line options for all scripts have been enhanced: Flags without a
          ``yes``/``no`` value now toggle the default (using the new
          ``misc.FlagAction``).
        
        * The script ``xml2xsc.py`` has a new option ``--defaultxmlns`` for
          setting a namespace name for elements without a namespace.
        
        * ``ll.xist.xnd`` and the related scripts have seen some refactoring.
        
        
        
Keywords: ANSI,CSS,CherryPy,FTP,HLS,HSB,HSC,HSV,HTML,HTTP,Oracle,PI,PL/SQL,RFC 2396,RGB,Relax NG,SVG,UNIX,URL,WML,XHTML,XML,XSL-FO,XSLT,build,codec,color,cron,cx_Oracle,daemon,decorator,escape sequence,execnet,fork,iHTML,iterator,job,make,procedure,processing instruction,property,record,schema,ssh,template,templating language,terminal,toxic,user defined function
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: No Input/Output (Daemon)
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python
Classifier: Topic :: Database
Classifier: Topic :: Internet
Classifier: Topic :: Internet :: File Transfer Protocol (FTP)
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Internet :: WWW/HTTP :: Site Management
Classifier: Topic :: Multimedia :: Graphics
Classifier: Topic :: Software Development :: Build Tools
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Terminals
Classifier: Topic :: Text Processing :: General
Classifier: Topic :: Text Processing :: Markup :: HTML
Classifier: Topic :: Text Processing :: Markup :: XML

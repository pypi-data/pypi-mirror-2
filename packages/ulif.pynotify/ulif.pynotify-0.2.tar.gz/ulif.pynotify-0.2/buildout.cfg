[buildout]
develop = .
parts = 
      docs
      test
      pynotify-ctl
      pynotify
      coverage-detect
      coverage-report
#newest = false
versions = versions

[versions]
docutils = 0.5

#[scripts]
#recipe = zc.recipe.egg
#eggs = ulif.pynotify

[pynotify-ctl]
recipe = zc.recipe.egg
eggs = ulif.pynotify [sqlite]
scripts = pynotify-ctl

[pynotify]
recipe = zc.recipe.egg
eggs = ulif.pynotify [sqlite]
scripts = pynotify

[test]
recipe = zc.recipe.testrunner
eggs = ulif.pynotify [test, sqlite]

[docs]
# recipe = z3c.recipe.sphinxdoc
recipe = collective.recipe.sphinxbuilder
eggs = ulif.pynotify [docs, sqlite]
build = ${buildout:directory}/docs/_build
source = ${buildout:directory}/docs
outputs = doctest html
script-name = make-docs
extra-paths = ${buildout:directory}/src
# extensions = sphinx.ext.autodoc sphinx.ext.doctest

# Collect test coverage data.
[coverage-detect]
recipe = zc.recipe.testrunner
eggs = ulif.pynotify [test, sqlite]
defaults = ['--tests-pattern', '^f?tests$', '-v', '--coverage', 'coverage']

## Create a coverage report.
## Make sure to run bin/coverage-detect to collect the data for the report
## first!
[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coveragereport
arguments = ('${buildout:parts-directory}/coverage-detect/working-directory/coverage', '${buildout:directory}/coverage-report')

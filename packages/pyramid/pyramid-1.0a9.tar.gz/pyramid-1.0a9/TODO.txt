Pyramid TODOs
=============

Must-Have (before 1.0)
----------------------

- Write a "Whats New" (delta from BFG 1.3)

- Consider deprecations for ``model`` and ``resource`` APIs.

- Re-make testing.setUp() and testing.tearDown() the canonical APIs for test
  configuration.

- API docs for ``pyramid.views.action``.

- Use a commit veto when configuring repoze.tm2 in paster templates for
  non-1X, 2X, or 3X responses.

- Consider passing two callables to CallbackAuthenticationPolicy: one for
  validating/obtaining the userid, the other for returning groups.

- Add docs for ``__action_decorator__`` attr of handler.

- Document the ``request.override_renderer`` attribute.

Should-Have
-----------

- Add a session attribute to DummyRequest.

- Convert paster template and tutorial HTML templates to use
  ``request.static_url('{{package}}:static/foo.css')`` rather than
  ``${request.application_url}/static/foo.css``.

- Add notes about renderer response attrs to request docs.

- Add an example of using a cascade to serve static assets from the root.

- Explore static file return from handler action using wsgiapp2 + fileapp.

- Static (URL-generation only) routes.

- Add narrative docs for wsgiapp and wsgiapp2.

- translationdir ZCML directive use of ``path_spec`` should maybe die.

- Change "Cleaning up After a Request" in the urldispatch chapter to
  use ``request.add_response_callback``.

- Provide a response_set_cookie method on the request for rendered responses
  that can be used as input to response.set_cookie?

Nice-to-Have
------------

- Better "Extending" chapter.

- Try to make test suite pass on IronPython.

- Non-bwcompat use of threadlocals that need to be documented or ameliorated:

  security.principals_allowed_by_permission

  resource.OverrideProvider._get_overrides: can't credibly be removed,
  because it stores an overrideprovider as a module-scope global.

  traversal.traverse: this API is a stepchild, and needs to be changed.

  Configurator.add_translation_dirs: not passed any context but a message,
  can't credibly be removed.

- Supply ``X-Vhm-Host`` support.

- Basic WSGI documentation (pipeline / app / server).

- Fix message catalog extraction / compilation documentation.

- Change docs about creating a venusian decorator to not use ZCA.

- Try to better explain the relationship between a renderer and a
  template in the templates chapter and elsewhere.  Scan the
  documentation for reference to a renderer as *only* view
  configuration (it's a larger concept now).

- Create a ``render_view`` that works by using config.derive_view
  against an existing view instead of querying the registry.

- Create a function which performs a recursive request.

- Debug option to print view matching decision.

- Script or paster command that prints, for a given URL, the views
  that might match.  Underneath each potentially matching route, list
  the predicates required.  Underneath each route+predicate set, print
  each view that might match and its predicates.  E.g. with the input
  URL ``/foo``::

    '/foo' (foo_xhr)
       xhr = True
         (no view predicates)
           mypackage.views.MyXHRFooView.__call__

    '/{action}' (action_route)
       request_method = 'POST'
         action = '^foo$'
           mypackage.views.MyView.foo_POST
       request_method = 'GET'
         action = '^foo$'
           mypackage.views.MyView.foo_GET

- Raise an exception when a value in response_headerlist is not a
  string or decide to encode.

- Update App engine chapter with less creaky directions.

- Add functionality that mocks the behavior of ``repoze.browserid``.


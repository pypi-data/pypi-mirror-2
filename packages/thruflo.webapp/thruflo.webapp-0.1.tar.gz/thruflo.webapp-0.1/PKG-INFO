Metadata-Version: 1.0
Name: thruflo.webapp
Version: 0.1
Summary: Yet another WSGI web app framework
Home-page: http://github.com/thruflo/thruflo.webapp
Author: James Arthur
Author-email: thruflo@googlemail.com
License: [Dedicated to the Public Domain][d] by [James Arthur][j] 2010.

[d]: http://creativecommons.org/publicdomain/zero/1.0/legalcode
[j]: http://thruflo.com

Description: 
        `thruflo.webapp` is a WSGI compatible web application framework.  It has no test coverage and is no doubt flawed.  But it has the advantage of being setup just the way I want it:
        
        * `re.compile` based url mapping
        * class instances handling requests with methods that correspond to the HTTP Request's method, e.g.: `def post(self)` handles a `POST` request
        * a `webob.Request` as self.request
        * `return foo` as the method of responding, where `foo` can be a string, a `webob.Response`, or a `list` or `dict` to be returned as JSON
        * [mako templates][] with builtin methods including:
        * `static_url`
        * `xsrf_form_html`
        * `escape`, as well as references to
        * `handler` and
        * `request`
        
        Or to put it another way:
        
        from thruflo.webapp import web
        
        class Hello(web.RequestHandler):
        def get(self):
        return 'hello world'
        
        
        
        mapping = [('/.*', MainPage)]
        application = web.WSGIApplication(mapping)
        
        
        See [thruflo.webapp.demo][] for a slightly fleshed out usage or read the source code.
        
        [mako templates]: http://www.makotemplates.org
        [thruflo.webapp.demo]: http://github.com/thruflo/thruflo.webapp/tree/master/src/thruflo/webapp/demo/
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Web Environment
Classifier: Programming Language :: Python

"""Pylons middleware initialization"""
from beaker.middleware import SessionMiddleware
from paste.cascade import Cascade
from paste.registry import RegistryManager
from paste.urlparser import StaticURLParser
from paste.deploy.converters import asbool
from pylons.middleware import ErrorHandler, StatusCodeRedirect
from pylons.wsgiapp import PylonsApp
from routes.middleware import RoutesMiddleware
from sleepy.resource import static_dir

from {{package}}.config.environment import load_environment

def make_app( global_conf,
              full_stack=True,
              static_files=True,
              **app_conf ):
    config = load_environment( global_conf,
                               app_conf )

    app = PylonsApp( config=config )

    app = RoutesMiddleware( app,
                            config[ "routes.map" ],
                            singleton=False )
    app = SessionMiddleware( app,
                             config )

    # CUSTOM MIDDLEWARE HERE (filtered by error handling middlewares)

    if asbool( full_stack ):
        app = ErrorHandler( app,
                            global_conf,
                            **config[ "pylons.errorware" ] )

        if asbool( config[ "debug" ] ):
            app = StatusCodeRedirect( app )
        else:
            app = StatusCodeRedirect( app,
                                      [ 400,
                                        401,
                                        403,
                                        404,
                                        500 ] )

    app = RegistryManager( app )

    if asbool( static_files ):
        app = Cascade( [ StaticURLParser( config[ "pylons.paths" ]
                                                [ "static_files" ] ),
                         StaticURLParser( static_dir()),
                         app ] )
    app.config = config
    return app

[buildout]
parts = 
    instance
    zopepy
    sphinxbuilder
    test
    coverage-test
    coverage-report

eggs =
    Plone
    pillow
    niteoweb.click2sell
    plone.mocktestcase
    collective.recipe.sphinxbuilder
    repoze.sphinx.autointerface
    
zcml = 
    niteoweb.click2sell
    
extends = 
    http://dist.plone.org/release/4.0/versions.cfg

versions = versions
develop = .

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
debug-mode = on
verbose-security = on
eggs = 
    ${buildout:eggs}
zcml =
    ${buildout:zcml}


##################################################################
# Prepare a python interpreter with all buildout eggs installed. #
##################################################################   
[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy


###########################################
# Prepare Sphinx documentation generator. #
###########################################
[sphinxbuilder]
recipe = collective.recipe.sphinxbuilder
interpreter = ${buildout:directory}/bin/zopepy


##############################################
# Prepare test-runner for running unit tests #
##############################################
[test]
recipe = zc.recipe.testrunner
defaults = ['--exit-with-status', '--auto-color', '--auto-progress']
eggs =
    ${buildout:eggs}
    zope.testing


#####################################################
# Prepare test-runner for calculating test coverage #
#####################################################
[coverage-test]
recipe = zc.recipe.testrunner
eggs = ${test:eggs}
defaults = ['--coverage', '../../coverage', '-v', '--auto-progress']

[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coverage=coverage-report
arguments = ('coverage', 'report')

Metadata-Version: 1.0
Name: django-dynamic-link
Version: 0.5.0
Summary: A django file streaming application
Home-page: http://www.sources.e-blue.eu/de/pages/django/
Author: Andreas Fritz
Author-email: djangp-dynamic-link@bitzeit.eu
License: BSD
Download-URL: https://bitbucket.org/catapela/django-dynamic-link/downloads
Description: ===========
        Description
        ===========
        
        Django file streaming application to provide download links without showing the real path to the served file. The links can be set to expire by date or by clicks. It is also possible to use it for counting clicks on a download link.
        
        **License**
        
            New BSD license
        
        **Notes**
        
            * Tested with Django 1.2 / 1.3
            * Example project is included
        
        ========
        Features
        ========
        
            * Link expires by clicks (optional)
            * Link expires by time (optional)
            * Is usable for counting clicks
        
        ============
        Installation
        ============
        
        **Dependences**
        
            * This app
            * Django itself, its redirects from django.contrib and its locale middleware.
        
        **Installation**
        
            *Manual Installation*
        
                * Download the file and unzip it.
                * Copy the folder in your project root.
        
            *Installation with pip*
        
                * Type in your terminal:
                
                ::
                
                :~$ pip install django-dynamic-link
        
                * With pip you can also uninstall it:
        
                ::
        
                :~$ pip uninstall django-dynamic-link
        
            *Other possibilities*
        
                * Open a terminal and change to the folder which contains the setup.py and then type:
        
                ::
        
                :~$ python setup.py install
        
        **test your installation**
        
            Go to console and type:
        
        ::
        
            :~$ python
            >>> import dynamicLink
            >>> dynamicLink.VERSION
        
        =====
        Setup
        =====
        
            * Add "dynamicLink" to you installed apps in the settings file.
            * Make sure that:
                1.   'django.middleware.locale.LocaleMiddleware', is in your MIDDLEWARE_CLASSES.
                2.   'django.contrib.redirects.middleware.RedirectFallbackMiddleware', is in your MIDDLEWARE_CLASSES.
                3.   'django.contrib.redirects', is added to your INSTALLED_APPS.
                4.   Your Admin is enabled ('django.contrib.admin', is in your INSTALLED_APPS.)
            * Add the following to your urls.py:
                1.   from dynamicLink import presettings
                2.   (r'^\w+/%s/' % presettings.DYNAMIC_LINK_URL_BASE_COMPONENT, include('dynamicLink.urls')),
            * Finally run:
        
            ::
        
            :~$ python manage.py syncdb
            :~$ python manage.py runserver
        
        **Make it custom**
        
            Use the global settings.py in your projects root to overwrite the applications presettings with the following variables.
        
            * DYNAMIC_LINK_MEDIA
                - Default: settings.MEDIA_ROOT
                - A path to a directory. From this point you can walk down the subdirectories to choose your files to serve.
            * DYNAMIC_LINK_URL_BASE_COMPONENT
                - Default: 'serve'
                - A string that modifies your url serve path.
                - Example: www.example.com/DYNAMIC_LINK_URL_BASE_COMPONENT/link/3839hd8HKl3/example.zip.
        
        =====
        Usage
        =====
        
        Open the admin interface and go to "Dynamiclink" section. The rest should be self-explanatory.
        
        **Hints**
        
            * Zero value for link age means never expires.
            * Zero value for clicks means unlimited clicks.
            * If a link never expires you can use it for click counting.
            * Trough the action menu you can serve a site with several links. 
            * The filename from the created links are only for human readability. You can delete or change this filenames in any way you want.
        
        ===============
        Example project
        ===============
        
        djang-dynamic-links ships with an example proect.
        
            1. First unpack the tar.gz
            2. Than move "dynamicLink" in to the "example" folder or install it (see install section).
            3. Run "python manage.py syncdb" and "python manage.py runserver".
            4. Open a Browser, go to: http://127.0.0.1:8000/
Keywords: django file streaming dynamic links serve
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Framework :: Django
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Environment :: Console
Classifier: Natural Language :: English
Classifier: Natural Language :: German
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: Topic :: Internet
Classifier: Topic :: Utilities

# -*- coding: iso-8859-15 -*-
# (c) Mikael HÃ¶gqvist

import sys

from benri.log import initLogger
from benri.service import Service, InitFailure
from benri.security.authorization import AuthorizationService, AuthorizeFlatFile
from benri.security.authfilter import AuthFilter

from ${package}.service import Example

class Serve(Service):
    """
    Initializes the applications that should be served by this service.
    """
    def __init__(self, config):
        Service.__init__(self, config)
        
        # init logging
        initLogger(${repr(package)})

# where to put the security-stuff?
        self.auth_service = AuthorizationService()
#        try:
#            path = config["security"]["auth_file_path"]
#        except Exception, e:
#            pass

#        try:
#            service = config["security"]["vomrs"]
#            user = config["security"]["vomrs_user"]
#            password = config["security"]["vomrs_password"]
#        except:
#            pass
        
        try:
            self.addApp(Example())
        except InitFailure, e:
            log.info(str(e))
            sys.exit(1)

    def start(self):
        Service.start(self)
    
    def stop(self):
        Service.stop(self)

<configure xmlns="http://namespaces.zope.org/zope"
	   xmlns:zcml="http://namespaces.zope.org/zcml"
	   xmlns:five="http://namespaces.zope.org/five">

<!-- Including profiles.zcml (for registration of an extension profile) -->
<include file="profiles.zcml" />

<!-- Dependencies -->
<include package="getpaid.core" />
<!--<include package="getpaid.io" />-->

<include package="zope.annotation" />
<include zcml:condition="installed plone.indexer" package="plone.indexer" />

<!-- using five.intid ... by default this
     introduces subscribers for all persistent
     objects. -->
<include package="five.intid" file="base.zcml"/>
<include file="intid.zcml" />

<!-- permissions -->
<include file="permissions.zcml" />

<!-- Commenting on Orders 
<include package="zc.comment" />
-->


<five:implements
    class="Products.CMFPlone.Portal.PloneSite"
    interface="zope.annotation.interfaces.IAttributeAnnotatable" />

<five:implements
    class="Products.Archetypes.public.BaseContent"
    interface="zope.annotation.interfaces.IAttributeAnnotatable" />

<!-- UI -->
<include package=".browser" />

<!-- Load Up Plugins -->
<include file="plugins.zcml" />

<!-- Vocabularies -->
<include file="vocabularies.zcml" />

<!-- Content to Payable Adapters -->
<adapter
   for="Products.PloneGetPaid.interfaces.IBuyableMarker"
   provides="getpaid.core.interfaces.IBuyableContent"
   factory=".content.BuyableContentAdapter"
   />

<adapter
   for="Products.PloneGetPaid.interfaces.IShippableMarker"
   provides="getpaid.core.interfaces.IShippableContent"
   factory=".content.ShippableContentAdapter"
   />

<adapter
   for="Products.PloneGetPaid.interfaces.IPremiumMarker"
   provides="getpaid.core.interfaces.IPremiumContent"
   factory=".content.PremiumContentAdapter"
   />

<adapter
   for="Products.PloneGetPaid.interfaces.IDonatableMarker"
   provides="getpaid.core.interfaces.IDonationContent"
   factory=".content.DonatableContentAdapter"
  />

<adapter
   for="Products.PloneGetPaid.interfaces.IVariableAmountDonatableMarker"
   provides="getpaid.core.interfaces.IVariableAmountDonationContent"
   factory=".content.VariableAmountDonatableContentAdapter"
  />

<adapter
   for="Products.PloneGetPaid.interfaces.IRecurringPaymentMarker"
   provides="getpaid.core.interfaces.IRecurringPaymentContent"
   factory=".content.RecurringPaymentContentAdapter"
   />

<!-- Content to Line Item Adapter -->
<adapter
   for="getpaid.core.interfaces.IShoppingCart
        .interfaces.IPayableMarker"
   provides="getpaid.core.interfaces.ILineItemFactory"
   factory=".content.LineItemFactory"
   />

<adapter
   for="getpaid.core.interfaces.IShoppingCart
        .interfaces.IShippableMarker"
   provides="getpaid.core.interfaces.ILineItemFactory"
   factory=".content.ShippableItemFactory"
   />

<adapter
   for="getpaid.core.interfaces.IShoppingCart
        .interfaces.IVariableAmountDonatableMarker"
   provides="getpaid.core.interfaces.ILineItemFactory"
   factory=".content.VariableAmountLineItemFactory"
   />

<adapter
   for="getpaid.core.interfaces.IShoppingCart
        .interfaces.IRecurringPaymentMarker"
   provides="getpaid.core.interfaces.ILineItemFactory"
   factory=".content.RecurringLineItemFactory"
   />

<!-- Property Storage for Configuration Options -->
<adapter
   for="getpaid.core.interfaces.IStore"
   provides=".interfaces.IGetPaidManagementOptions"
   factory=".preferences.ConfigurationPreferences"
   />

<!-- Contact Information from Members -->
<five:implements
	class="Products.PluggableAuthService.PropertiedUser.PropertiedUser"
	interface=".interfaces.IStoreMember"
	/>

<adapter
	for=".interfaces.IStoreMember"
	provides="getpaid.core.interfaces.IUserContactInformation"
	factory=".member.memberContactInformation"
    />

<!-- Billing Address Info for Members -->
<adapter
	for=".interfaces.IStoreMember"
	provides="getpaid.core.interfaces.IBillingAddress"
	factory=".member.memberBillAddressInfo"
    />

<!-- Shipping Address Info for Members -->
<adapter
	for=".interfaces.IStoreMember"
	provides="getpaid.core.interfaces.IShippingAddress"
	factory=".member.memberShipAddressInfo"
    />


<!-- Utilities -->
<utility
    provides=".interfaces.ICountriesStates"
    factory=".vocabularies.CountriesStatesFromFile"/>

<utility
    provides=".interfaces.IMonthsAndYears"
    factory=".vocabularies.MonthsAndYears"/>

<utility
    provides="getpaid.core.interfaces.IFormSchemas"
    factory=".preferences.DefaultFormSchemas"/>

<utility
    provides="Products.PloneGetPaid.interfaces.ICurrencyFormatter"
    factory=".currencyformatter.CurrencyFormatter"/>

<!-- Notifications -->
<subscriber
   for="getpaid.core.interfaces.IOrder
	hurry.workflow.interfaces.IWorkflowTransitionEvent"
   handler=".notifications.sendNotification"
   />

<!-- Email Notification Templates -->
<adapter
   for="getpaid.core.interfaces.IOrder"
   name="merchant-new-order"
   factory=".notifications.MerchantOrderNotificationMessage"
   />

<adapter
   for="getpaid.core.interfaces.IOrder"
   name="customer-new-order"
   factory=".notifications.CustomerOrderNotificationMessage"
   />

<adapter
   for="getpaid.core.interfaces.IOrder"
   name="merchant-charge-order"
   factory=".notifications.MerchantOrderNotificationMessage"
   />

<adapter
   for="getpaid.core.interfaces.IOrder"
   name="customer-charge-order"
   factory=".notifications.CustomerOrderNotificationMessage"
   />

<adapter
   for="getpaid.core.interfaces.IOrder"
   name="merchant-decline-order"
   factory=".notifications.MerchantOrderNotificationMessage"
   />

<adapter
   for="getpaid.core.interfaces.IOrder"
   name="customer-decline-order"
   factory=".notifications.CustomerOrderNotificationMessage"
   />

<!-- Payment -->
<adapter
   for="*"
   provides="getpaid.core.interfaces.ICreditCardTypeEnumerator"
   factory=".payment.CreditCardTypeEnumerator"
   />



<subscriber
    for="*
         getpaid.core.interfaces.IPayableCreationEvent"
    handler=".events.payable_created"
    />

<!-- Catalog adapters -->
<adapter zcml:condition="installed plone.indexer" name="price" factory=".catalog.get_price" />

 
</configure>

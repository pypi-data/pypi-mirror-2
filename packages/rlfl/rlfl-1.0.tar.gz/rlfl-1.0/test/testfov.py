import unittest

import sys
sys.path.append('..')

import rlfl
from tmap import MAP as m
MAP, ORIGOS = m

class TestFov(unittest.TestCase):
    def setUp(self):
        rlfl.delete_all_maps()
        self.map = rlfl.create_map(len(MAP), len(MAP[0]))
        for row in range(len(MAP)):
            for col in range(len(MAP[row])):
                if MAP[row][col] != '#':
                    rlfl.set_flag(self.map, row, col, rlfl.CELL_SEEN) 
                    rlfl.set_flag(self.map, row, col, rlfl.CELL_OPEN) 
                    
    def test_basic(self):
        exp = [
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['--------------------------------S---------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['--------------------------------S---------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['----------------------------SSSSSSS-SS----------------------'],
            ['--------------------------SSSSSSSSSSSSS---------------------'],
            ['----------------------------S-SSSSS-S-----------------------'],
            ['-------------------------------SSS--------------------------'],
            ['--------------------------------S---------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['--------------------------------S---------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
        ]
        x, y = ORIGOS[0]
        rlfl.fov(self.map, x, y, 6, rlfl.FOV_BASIC);
        self.match(exp)
        exp = [
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['--------SS--------------------------------------------------'],
            ['--------SSS-------------------------------------------------'],
            ['-------SSS--------------------------------------------------'],
            ['-----SSSS-S-------------------------------------------------'],
            ['-----SSSSSSSS-----------------------------------------------'],
            ['-----SSSS-S-------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
        ]
        x, y = ORIGOS[1]
        rlfl.fov(self.map, x, y, 6, rlfl.FOV_BASIC);
        self.match(exp)
                    
    def test_shadowcasting(self):
        exp = [
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['---------------------------SSSSSSSSSSS----------------------'],
            ['--------------------------SSSSSSSSSSSSS---------------------'],
            ['---------------------------SSSSSSSSSSS----------------------'],
            ['-------------------------------SSS--------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['--------------------------------S---------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
        ]
        x, y = ORIGOS[0]
        rlfl.fov(self.map, x, y, 6, rlfl.FOV_SHADOW);
        self.match(exp)
        exp = [
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['---------S--------------------------------------------------'],
            ['--------SSS-------------------------------------------------'],
            ['-------SSS--------------------------------------------------'],
            ['-----SSSSSSS------------------------------------------------'],
            ['-----SSSSSSSS-----------------------------------------------'],
            ['-----SSSSSSS------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
        ]
        x, y = ORIGOS[1]
        rlfl.fov(self.map, x, y, 6, rlfl.FOV_SHADOW);
        self.match(exp)
        
    def test_restrictive(self):
        exp = [
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['--------------------------SSSSSSSSSS-S----------------------'],
            ['--------------------------SSSSSSSSSSSSS---------------------'],
            ['--------------------------SSSSSSSSSSSSS---------------------'],
            ['-------------------------------SSS--------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['--------------------------------S---------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
        ]
        x, y = ORIGOS[0]
        rlfl.fov(self.map, x, y, 6, rlfl.FOV_RESTRICTIVE);
        self.match(exp)
        
    def test_digital(self):
        exp = [
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['--------------------------SSSSSSSSSSSSS---------------------'],
            ['--------------------------SSSSSSSSSSSSS---------------------'],
            ['--------------------------SSSSSSSSSSSSS---------------------'],
            ['-------------------------------SSS--------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['-------------------------------SSS--------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
        ]
        x, y = ORIGOS[0]
        rlfl.fov(self.map, x, y, 6, rlfl.FOV_DIGITAL);
        self.match(exp)
        
    def test_diamond(self):
        x, y = ORIGOS[0]
        rlfl.fov(self.map, x, y, 6, rlfl.FOV_DIAMOND);
#        self.pr_map()
        
    def test_permissive(self):
        x, y = ORIGOS[0]
        rlfl.fov(self.map, x, y, 6, rlfl.FOV_PERMISSIVE);
#        self.pr_map()
        
    def match(self, emap):
       for row in range(len(MAP)):
            for col in range(len(MAP[row])):
                if rlfl.has_flag(self.map, row, col, rlfl.CELL_SEEN):
                    self.assertEqual(emap[row][0][col], 'S')
                else:
                    self.assertEqual(emap[row][0][col], '-') 

    def pr_map(self):
        for row in range(len(MAP)):
            for col in range(len(MAP[row])):
                if rlfl.has_flag(self.map, row, col, rlfl.CELL_SEEN):
                    print('S', end="")
                else:
                    print('-', end="")
            print()
        exp = [
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
            ['------------------------------------------------------------'],
        ]

if __name__ == '__main__':
    unittest.main()
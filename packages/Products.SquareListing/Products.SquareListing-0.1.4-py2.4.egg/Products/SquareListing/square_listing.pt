<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      lang="en"
      metal:use-macro="here/main_template/macros/master"
      i18n:domain="plone">
<head>
    <tal:js metal:fill-slot="javascript_head_slot">
        <script type="text/javascript">
            jq(document).ready(function(){
                jq('ul#category_view_mode a').click(function(){
                    jq('ul#category_view_mode li').removeClass('active');
                    classe = jq(this).attr('class');
                    jq(this.parentNode).attr('class', 'active');
                    switch(classe){
                        case 'square':
                            jq('ul#square-listing li').removeClass('line');
                            break;
                        case 'line':
                            jq('ul#square-listing li').addClass('line');
                            break;
                    }
                return false;
                });
            });
        </script>
    </tal:js>
    <tal:css metal:fill-slot="css_slot">
        <style type="text/css" media="screen" tal:condition="exists: portal/square_listing.css"
               tal:content="string:@import url($portal_url/square_listing.css);">
        </style>
    </tal:css>
    <tal:css metal:fill-slot="style_slot">
        <style type="text/css" media="screen"
               tal:content="string:@import url($portal_url/square_listing.css);">
        </style>
    </tal:css>
    
</head>
<body>

    <div metal:fill-slot="main">
    <metal:main-macro define-macro="main"
                      tal:define="kssClassesView context/@@kss_field_decorator_view;
                                  getKssClasses nocall:kssClassesView/getKssClassesInlineEditable;
                                  templateId string:square_listing;
                                  template_id templateId;">

        <div tal:replace="structure provider:plone.abovecontenttitle" />

        <!-- <h1 metal:use-macro="here/kss_generic_macros/macros/generic_title_view">
            Title or id
        </h1> -->

        <div tal:replace="structure provider:plone.belowcontenttitle" />
        <!-- <tal:comment replace="nothing">
        <p metal:use-macro="here/kss_generic_macros/macros/generic_description_view">
            Description
        </p>            
        </tal:comment> -->

        <div tal:replace="structure provider:plone.abovecontentbody" />

        <div metal:define-macro="text-field-view"
             id="parent-fieldname-text" class="stx"
             tal:define="kss_class python:getKssClasses('text',
                         templateId=templateId, macro='text-field-view');
                         text here/aq_explicit/getText|nothing"
             tal:condition="text"
             tal:attributes="class python:(here.Format() in ('text/structured',
                                                   'text/x-rst', )) and 'stx' + kss_class or 'plain' + kss_class">
            <div metal:define-slot="inside" tal:replace="structure text">The body</div>
        </div>
        
        <ul id="category_view_mode" class="v-mode">
            <li><a class="line" rel="line" href="#line">line</a></li>
            <li class="active"><a class="square" rel="square" href="#square">square</a></li>
        </ul>

        <metal:listingmacro define-macro="listing">
        <tal:foldercontents define="contentFilter python:{'exclude_from_nav': False };
                            limit_display limit_display|request/limit_display|nothing;
                            normalizeString normalizeString|nocall: context/plone_utils/normalizeString;
                            more_url more_url|request/more_url|string:folder_contents;
                            is_a_topic python:here.portal_type=='Topic';
                            folderContents folderContents|nothing;
                            Batch python:modules['Products.CMFPlone'].Batch;
                            b_size python:10;
                            b_start python:0;
                            b_start request/b_start | b_start;
                            folderContents python:folderContents or is_a_topic and here.queryCatalog(contentFilter) or here.getFolderContents(contentFilter);
                            plone_tools context/@@plone_tools;
                            properties plone_tools/properties;
                            use_view_action site_properties/typesUseViewActionInListings|python:();
                            over_limit python: limit_display and len(folderContents) > limit_display;
                            folderContents python: (over_limit and folderContents[:limit_display]) or folderContents;
                            batch python:Batch(folderContents, b_size, int(b_start), orphan=1);
                            isAnon context/@@plone_portal_state/anonymous|nothing;
                            show_about python:not isAnon or site_properties.allowAnonymousViewAbout;">
                            
        <tal:listing condition="folderContents">

            <ul id="square-listing">
                <tal:entry tal:repeat="item batch">
                <tal:block tal:condition="python:item.id != 'home'" tal:define="item_url item/getURL|item/absolute_url;
                                       item_id item/getId|item/id;
                                       item_title_or_id item/pretty_title_or_id;
                                       item_description item/Description;
                                       item_type item/portal_type;
                                       item_type_title item/Type;
                                       item_modified item/ModificationDate;
                                       item_created item/CreationDate;
                                       item_icon python:plone_view.getIcon(item);
                                       item_type_class python: normalizeString(item_type);
                                       item_wf_state item/review_state|python: wtool.getInfoFor(item, 'review_state', '');
                                       item_wf_state_class python:'state-' + normalizeString(item_wf_state);
                                       item_creator item/Creator;
                                       item_start item/start/ISO|item/StartDate|nothing;
                                       item_end item/end/ISO|item/EndDate|nothing;
                                       item_obj python:item.getObject();
                                       oddrow repeat/item/odd;
                                   ">

                    <li metal:define-macro="listitem" class="">
                        <a class="tile" href="#"
                           tal:attributes="href python:(item_type in use_view_action) and item_url+'/view' or item_url;">
                           <img alt="" tal:condition="python: not view.isGallery(item_obj) and view.hasLeadImageField(item_obj)" src="" tal:attributes="alt item_title_or_id; src string:${item_url}/leadImage_thumb" />
                           <tal:condition tal:condition="python: not view.isGallery(item_obj) and not(view.hasLeadImageField(item_obj))">
                           <img alt="" tal:condition="item_obj/image|nothing" src="" tal:attributes="alt item_title_or_id; src string:${item_url}/image_thumb" />
                           </tal:condition>
                           <tal:condition tal:condition="python: view.isGallery(item_obj)">
                           <img alt="" tal:define="img python:view.getImageExample(item_obj)" tal:condition="python:img" src="" tal:attributes="alt item_title_or_id; src string:${img}/image_thumb" />
                           </tal:condition>
                        </a>
                        <div class="content">
                        <div class="summary"
                              tal:attributes="class string:$item_type_class summary">
                            <a href="#"
                               tal:attributes="href python:(item_type in use_view_action) and item_url+'/view' or item_url;
                                               class string:url"
                               tal:content="item_title_or_id">
                                Item Title
                            </a>
                        </div>

                        <div tal:omit-tag="" tal:condition="not:item_description"> 
                            &nbsp; 
                        </div> 
                        <div class="description" 
                         tal:content="python:len(item_description)>120 and item_description[:120] + '...' or item_description">
                            description 
                        </div> 
                        </div> 
                    </li>
                    <li class="clear" tal:condition="python:oddrow">&nbsp;</li>
                </tal:block>
                </tal:entry>
            </ul>
            <div class="visualClear"><!-- --></div>
            <!-- Navigation -->
            <tal:block condition="python:batch">
                <div metal:use-macro="here/batch_macros/macros/navigation" />
            </tal:block>
            
        </tal:listing>
        <metal:empty metal:define-slot="no_items_in_listing">
            <p class="discreet"
               tal:condition="not: folderContents"
               i18n:translate="description_no_items_in_folder">
                There are currently no items in this folder.
            </p>
        </metal:empty>

        </tal:foldercontents>
        </metal:listingmacro>

        <div tal:replace="structure provider:plone.belowcontentbody" />

    </metal:main-macro>
    </div>
</body>
</html>
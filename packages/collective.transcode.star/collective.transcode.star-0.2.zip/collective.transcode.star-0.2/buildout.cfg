[buildout]
#extensions = 
#    mr.developer
#sources = sources
#auto-checkout = *

unzip = true
versions = versions

parts =
    twisted
    transcodedaemon
    instance
    zopepy

# Change the number here to change the version of Plone being used
extends = 
    http://download.zope.org/Zope2/index/2.12.3/versions.cfg
    http://dist.plone.org/release/4.0b5/versions.cfg
    http://good-py.appspot.com/release/dexterity/1.0b1?plone=4.0b5

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.0b5
    http://dist.plone.org/thirdparty

# Add additional eggs here
eggs =
    collective.transcode.recipe
    collective.transcode.daemon
    Twisted

# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop = .
#          src/*

[versions]
collective.transcode.daemon = 0.3
collective.transcode.recipe = 0.2
Twisted = 10.1.0-r29882

[instance]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.zope2instance
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
#debug-mode = on
#verbose-security = on
blob-storage = var/blobstorage
# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = Plone my.package
eggs =
    Zope2
    Plone
    PILwoTK
    plone.app.dexterity
    collective.transcode.star
    ${buildout:eggs}

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml = 

[twisted]
recipe = minitage.recipe:egg
eggs = Twisted

urls = svn://svn.twistedmatrix.com/svn/Twisted/tags/releases/twisted-10.1.0|svn|29882

[transcodedaemon]
recipe = collective.transcode.recipe
listen_host = localhost
listen_port = 8888
videofolder = videos
secret = 1771d99931264d538e75eeb19da7d6a0

# set default_supported_mimetypes (or supported_mimetypes in the profile) to an empty
# list [] to ignore mimetype checks 
default_supported_mimetypes = ['application/octet-stream', 'application/ogg', 'video/flv', 'video/x-flv', 'video/mpeg', 'video/3gpp', 'video/x-ms-wmv', 'video/ogg', 'video/x-ogg', 'video/x-ogm+ogg', 'video/mpeg', 'video/quicktime', 'video/x-la-asf', 'video/x-ms-asf', 'video/x-msvideo', 'video/mp4']

profiles = [ { 'id' : 'jpeg', 'cmd' : 'scripts/getThumb \"%s\" \"%s\"', 'supported_mime_types': ${transcodedaemon:default_supported_mimetypes}, 'output_mime_type': 'image/jpeg', 'output_extension': 'jpg' }, { 'id' : 'mp4', 'cmd' : 'scripts/transcodeMp4 \"%s\" \"%s\"', 'supported_mime_types': ${transcodedaemon:default_supported_mimetypes}, 'output_mime_type': 'video/mp4', 'output_extension': 'mp4' }, { 'id' : 'ogg', 'cmd' : 'scripts/transcodeTheora \"%s\" \"%s\"', 'supported_mime_types': ${transcodedaemon:default_supported_mimetypes}, 'output_mime_type': 'video/ogg', 'output_extension': 'ogv' } ]

eggs = ${buildout:eggs}

[sources]
#collective.transcode.recipe = svn https://svn.plone.org/svn/collective/collective.transcode.star/trunk
#collective.transcode.recipe = svn https://svn.plone.org/svn/collective/collective.transcode.daemon/trunk
#collective.transcode.recipe = svn https://svn.plone.org/svn/collective/collective.transcode.recipe/trunk

[zopepy]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/zc.recipe.egg
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

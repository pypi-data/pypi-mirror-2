from pylons import request, session, url
from pylons.controllers.util import redirect
from {{package}} import model as model

import logging
log = logging.getLogger(__name__)

_login_url = '/login/index'
_auth_user_environ_key = 'AUTH_USER'
_auth_user_session_key = 'AUTH_USER_ID'

def get_user():
    # log.debug("Getting user information from the environment")
    if _auth_user_environ_key not in request.environ:
        user_id = session.get(_auth_user_session_key)
        if user_id:
            user = model.User.get_by(id = user_id, active = True)
            request.environ[_auth_user_environ_key] = user
        else:
            request.environ[_auth_user_environ_key] = None
    # log.debug("Returning user information in the environment %s" % \
    #                         request.environ[_auth_user_environ_key])
    return request.environ[_auth_user_environ_key]

def login(user):
    # log.debug("Logging in user %s, setting AUTH_USER_ID to %s" % \
    #                 (user.username, user.id))
    session[_auth_user_session_key] = str(user.id)
    session.save()

def logout():
    # log.debug("Logging out with session key %s" % \
    #                                 _auth_user_session_key)
    session.pop(_auth_user_session_key, None)
    session.clear()
    session.delete()

def redirect_to_login():
    # log.debug("Redirecting to login")
    redirect(url(_login_url))




"""Custom validators"""
from datetime import datetime
import formencode
from {{package}}.model import User
from {{package}}.model import meta

class ExistingEmail(formencode.FancyValidator):
    def _to_python(self, value, state):
        users = meta.Session.query(User).filter_by(email=value).all()
        if not users:
            raise formencode.Invalid('No such e-mail address was found',
                                     value, state)
        user = users[0]
        
        # Check to see if the user has recently asked for an email token
        if user.password_token_issue:
            diff = datetime.utcnow() - user.password_token_issue
            if diff.days < 1 and diff.seconds < 3600:
                raise formencode.Invalid(
                    "You've already requested a password recently.  Please " 
                    "wait and try later.", value, state)
        return value


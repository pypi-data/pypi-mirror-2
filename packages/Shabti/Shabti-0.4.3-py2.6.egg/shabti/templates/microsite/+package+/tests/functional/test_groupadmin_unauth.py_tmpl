# microsite/tests/functional/test_groupadmin_unauth
from pylons import url
from {{package}}.model import *
from {{package}}.tests import *

class TestGroupUnauthAdminController(TestController):
    def test_unauthorised_group_state_retrieval_prohibited(self):
        """GroupUnauthAdmin (microsite): unauthorised group GET access is prohibited."""
        response = self.app.get(
                        url=url(controller='groups', action='edit', id='1'))
        
        assert response.status_int == 302
        
        assert response.location == 'http://localhost/login/index'
        
        response = self.app.get(
                        url=url(controller='groups', action='new'))
        
        assert response.status_int == 302
        
        assert response.location == 'http://localhost/login/index'
        
        response = self.app.get(
                        url=url(controller='groups', action='update', id='1'),
                        params={'name': 'Fake name',
                                    '_method':u'PUT'})
        
        assert response.status_int == 302
        
        assert response.location == 'http://localhost/login/index'
        
        response = self.app.get(
                        url=url(controller='groups', action='delete', id='1'),
                        params={'_method':'DELETE'})
        
        assert response.status_int == 302
        
        assert response.location == 'http://localhost/login/index'
    
    
    def test_unauthorised_group_state_change_prohibited(self):
        """GroupUnauthAdmin (microsite): unauthorised group PUTs and DELETEs are prohibited"""
        response = self.app.put(
                        url=url(controller='groups', action='update', id='1'),
                        params={'name': 'Fake Name',
                                '_method':'PUT'})
        
        assert response.status_int == 302
        print("RESPLOC", response.location)
        assert response.location == 'http://localhost/login/index'
        
        response = self.app.delete(
                        url=url(controller='groups', action='delete', id='1'))
        
        assert response.status_int == 302
        
        assert response.location == 'http://localhost/login/index'
    

# --- Added by Shabti microsite template


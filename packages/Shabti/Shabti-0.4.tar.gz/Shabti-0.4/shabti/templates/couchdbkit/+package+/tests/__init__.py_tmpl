"""Pylons application test package

This package assumes the Pylons environment is already loaded, such as
when this script is imported from the `nosetests --with-pylons=test.ini`
command.

This module initializes the application via ``websetup`` (`paster
setup-app`) and provides the base testing objects.
"""
import os
import logging
import hashlib
import datetime
from unittest import TestCase
from paste.deploy import loadapp
from paste.deploy import appconfig
from paste.script.appinstall import SetupCommand
from pylons import url
from routes.util import URLGenerator
from webtest import TestApp
from couchdb.design import ViewDefinition
from couchdb import Database
import pylons.test
from {{package}}.config.environment import load_environment
from {{package}}.model import *
from {{package}} import model

__all__ = ['environ', 'url', 'TestController', 
           'TestModel', 'TestAuthenticatedController']


# Invoke websetup with the current config file
SetupCommand('setup-app').run([pylons.test.pylonsapp.config['__file__']])

environ = {}

def setup():
    here_dir = os.path.dirname(__file__)
    conf_dir = os.path.dirname(os.path.dirname(here_dir))
    test_file = os.path.join(conf_dir, 'test.ini')
    conf = appconfig('config:' + test_file)
    config = load_environment(conf.global_conf, conf.local_conf)
    server = config['{{package}}.server']
    # Change teardown to True if the database
    # exists and is to be torn down and re-created
    teardown = True
    if teardown and '{{package}}_test' in server:
        try:
            del server['{{package}}_test']
        except:
            pass
        db = server.create('{{package}}_test')
    elif not '{{package}}_test' in server:
        try:
            db = server.create('{{package}}_test')
        except:
            db = server['{{package}}_test']
    else:
        db = pylons.config['{{package}}.db']


def teardown():
    pass


class TestModel(TestCase):
    def setUp(self):
        pass
    
    
    def tearDown(self):
        pass
    


class TestController(TestModel):
    
    def __init__(self, *args, **kwargs):
        wsgiapp = pylons.test.pylonsapp
        config = wsgiapp.config
        self.app = TestApp(wsgiapp)
        url._push_object(URLGenerator(config['routes.map'], environ))
        TestCase.__init__(self, *args, **kwargs)
    


class TestAuthenticatedController(TestModel):
    
    def __init__(self, *args, **kwargs):
        wsgiapp = pylons.test.pylonsapp
        config = wsgiapp.config
        self.app = TestApp(wsgiapp, extra_environ=dict(REMOTE_USER='admin'))
        url._push_object(URLGenerator(config['routes.map'], environ))
        TestCase.__init__(self, *args, **kwargs)
    

# Overwritten by Shabti couchdbkit template





{{if elixir}}
# auth/tests/functional/test_elixir.py
import {{package}}.model as model
from {{package}}.tests import *

class TestRest(TestModel):
    
    def test_metadata(self):
        """TestRest (auth): model is loaded"""
        tgt = 'A collection of Tables and their associated schema constructs.'
        assert tgt in model.metadata.__doc__
    

    def test_session(self):
        """TestRest (auth): model is sqlite (brittle)"""
        assert model.Session.connection().dialect.name is 'sqlite'
    

    def test_model_ops(self):
        """TestRest (auth): entity retrieval is correct"""
        g = model.Session.query(model.Group).filter_by(
                    name=u"Administrators").all()
        assert len(g) == 1, g
        assert g[0].name == "Administrators"
        u = model.Session.query(model.User).filter_by(
                                    username=u"admin").all()
        assert len(u) == 1, u
        assert u[0].username == 'admin'
        group = model.Session.query(model.Group).get(2)
        assert group.name == u'Subscription Members'
        u = model.Session.query(model.User).all()
        assert len(u) == 2, u
        print(group.permissions)
        assert len(group.permissions) == 1
        
    

# --- Added by Shabti auth template
{{endif}}

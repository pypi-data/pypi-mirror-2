[service]

# the http path prefix used as a base for serving graphs, query
# interface etc.
prefix = /
baseuri = http://example.org/

# starts a separate stellaris instance with multiple worker-processes
# as defined below in the store section. Set this to false when stellaris is run behind an existing web-server, e.g. apache with mod_wsgi
stand_alone = true

[server]

# binding where the http server receive requests
# use 0.0.0.0:<port> to bind to all interfaces

# this is only used when stellaris runs in stand-alone mode
bind = localhost:9090

# setup the ssl related paths, note that these must be absolute
#ssl_key_path = server_key.pem
#ssl_cert_path = server_cert.pem

# this is either a path with a set of .pem-files or a .pem-file
#ssl_cacert_path = cacert.pem

[logging]

# sets the log-level, valid values are:
# critical, error, warning, info, debug
# defaults to warning if not set.
level = info

# sets the logging type:
# file - log values to a file in the log directory in the environment
# consol - log values direct to stderr
type = console

# Enables group based security and user authorization. Note that by
# using certificate verification it is possible to only allowed
# certified users from a certain CA access to the service. Group based
# security goes a step further by allowing users to specify group of
# other users that are allowed to modify the created resources.
[security]

enabled = false

# specifies a default user as admin
admin = admin

[store]

# db_uri configures the database backend used for the store
# If it is not set, sqlite will be used and stored within the stellaris 
# environment. To backup this database, set the backup_path below. It is
# recommended to use a backup-path which resides on a separate disk or 
# a network share. If backup_path is not set, no backups will be performed.
# Note that the stellaris executable must have write access to the backup_path.
# Define the interval in seconds of backups using backup_interval

# db_uri = postgres://user:password@localhost:5432/
# backup_path = /tmp/
# backup_interval = 86400 # 24 hours
gc_interval = 60

# the worker-related options are only used in stand-alone mode
num_workers = 2

# number of seconds before a worker executing a query or parsing input
# data should timeout
worker_timeout = 60

# default in-memory index
[index:test]
type = rdflib-memory

# reloads the index from the store on restart, this is only relevant
# if the index is in memory
persistent = false

# Example of a virtuoso-index, stellaris is starting virtuoso 
# dynamically using the file etc/virtuoso.ini_tmpl
#[index:virtuoso]
#type = virtuoso
#install_prefix = /usr/local/virtuoso-opensource/
# port 8891 is default in the virtuoso.ini_tmpl used to configure the
# instance
#sparql_url = http://localhost:8891/sparql/


# Example of a configuration for a sesame index

#[index:sesame_example]

#type = sesame
#sesame_url = http://localhost:8180/openrdf-sesame/repositories/stellaris/

Implementation of PEP 362 (Function Signature Objects)
++++++++++++++++++++++++++++++++++++++++++++++++++++++

What is this?
====================

An implementation of `PEP 362`_; an object representation of the call signature
of functions/methods. The module makes it easier to introspect on the
parameters of a function or method. See ``examples.py`` on how to use the
module to implement a type-checking decorator for Python 3.0.

.. _PEP 362: http://www.python.org/dev/peps/pep-0362/


Where is the documentation?
===========================

`PEP 362`_ is considered the official documentation for this code.


Why package it up?
====================

There has been some interest in the work and I am taking a long time to get
this into Python's standard library.


What versions of Python does it work with?
==========================================

Python 2.5 and higher for the 2.x series is supported.

Python 3.0 is also supported with the exact same code.


What is the version history?
============================

The version number will get bumped as open issues in the PEP are closed.

0.6.2
-----

* Move test suite over to assert* methods.

0.6
---

* Removed all ``has_*`` methods.

* Added __getitem__ and __iter__ method to Signature.  That led to the removal
  of Signature.parameters.

* Fixed a bug in setting the annotation for variable keyword arguments.


0.4
----

Initial release.  Corresponds to verion 58051 of PEP 362.

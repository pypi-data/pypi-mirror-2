Metadata-Version: 1.0
Name: pyutmp
Version: 0.2.1
Summary: Python UTMP wrapper for Un*x systems
Home-page: http://bmc.github.com/pyutmp/
Author: Brian M. Clapper
Author-email: bmc@clapper.org
License: BSD license
Description: 
        Introduction
        ============
        
        The ``pyutmp`` module provides a Python-oriented interface to the *utmp*
        file on Unix-like operating systems. To paraphrase the *Linux Programmer's
        Manual* page *utmp*\ (5), the *utmp* file allows one to discover information
        about who is currently using (i.e., is logged into) the system. The *utmp*
        file is a series of entries whose structure is typically defined by the
        ``utmp.h`` C header file.
        
        This module provides an read-only interface to the underlying operating
        system's C *utmp* API.
        
        Interface and Usage
        ===================
        
        The ``pyutmp`` module supplies two classes: UtmpFile and Utmp. A
        UtmpFile object represents the open *utmp* file; when you iterate over a
        UtmpFile object, it yields successive Utmp objects. For example:
        
        ::
        
            from pyutmp import UtmpFile
            import time
        
            for utmp in UtmpFile():
                # utmp is a Utmp object
                if utmp.ut_user_process:
                    print '%s logged in at %s on tty %s' % (utmp.ut_user, time.ctime(utmp.ut_time), utmp.ut_line)
        
        
        UtmpFile
        --------
        
        In addition to the ``__iter__()`` generator method, allowing iteration over
        the contents of the *utmp* file, the UtmpFile class also provides a
        ``rewind()`` method that permits you to reset the file pointer to the top
        of the file. See the class documentation for details.
        
        Utmp
        ----
        
        The fields of the Utmp class are operating system-dependent. However, they
        will *always* include at least the following fields:
        
        +---------------------+-----------+----------------------------------------+
        | Field               | Type      | Description                            |
        +=====================+===========+========================================+
        | ``ut_user``         | ``str``   | The user associated with the *utmp*    |
        |                     |           | entry, if any.                         |
        +---------------------+-----------+----------------------------------------+
        | ``ut_line``         | ``str``   | The tty or pseudo-tty associated with  |
        |                     |           | the entry, if any. In this API, the    |
        |                     |           | line will *always* be the full path to |
        |                     |           | the device.                            |
        +---------------------+-----------+----------------------------------------+
        | ``ut_host``         | ``str``   | The host name associated with the      |
        |                     |           | entry, if any.                         |
        +---------------------+-----------+----------------------------------------+
        | ``ut_time``         | timestamp | The timestamp associated with the      |
        |                     |           | entry. This timestamp is in the form   |
        |                     |           | returned by ``time.time()`` and may be |
        |                     |           | passed directly to methods like        |
        |                     |           | ``time.ctime()``.                      |
        +---------------------+-----------+----------------------------------------+
        | ``ut_user_process`` | ``bool``  | Whether or not the *utmp* entry is a   |
        |                     |           | user process (as opposed to a reboot or|
        |                     |           | some other system event).              |
        +---------------------+-----------+----------------------------------------+
            
        On some operating systems, other fields may be present. For instance, on
        Linux and Solaris systems (and other System V-derived systems), Utmp also
        contains the following fields:
        
        +---------------------+-----------+----------------------------------------+
        | Optional Field      | Type      | Description                            |
        +=====================+===========+========================================+
        | ``ut_type``         | ``str``   | The type of the entry, typically one of|
        |                     |           | the following string values:           |
        |                     |           | "RUN_LVL", "BOOT_TIME", "NEW_TIME",    |
        |                     |           | "OLD_TIME", "INIT_PROCESS",            |
        |                     |           | "LOGIN_PROCESS", "USER_PROCESS",       |
        |                     |           | "DEAD_PROCESS", "ACCOUNTING".          |
        |                     |           | See the *utmp*\ (5) manual page for a  |
        |                     |           | description of these values            |
        +---------------------+-----------+----------------------------------------+
        | ``ut_pid``          | ``int``   | Associated process ID, if any.         |
        +---------------------+-----------+----------------------------------------+
        | ``ut_id``           | ``str``   | The *init*\ (8) ID, or the abbreviated |
        |                     |           | tty name.                              |
        +---------------------+-----------+----------------------------------------+
        | ``ut_exit_code``    | ``int``   | Process exit code, if applicable.      |
        +---------------------+-----------+----------------------------------------+
        | ``ut_session``      | ``int``   | Session ID, for windowing.             |
        +---------------------+-----------+----------------------------------------+
        | ``ut_addr``         | ``int``   | IPv4 address of remote host (if        |
        |                     | array     | applicable), one octet per array       |
        |                     |           | element.                               |
        +---------------------+-----------+----------------------------------------+
        
        If you're writing portable code, you should not count on the presence of
        those attributes--or, at the very least, you should wrap access to them in
        a ``try/catch`` block that catches ``AttributeError``.
        
        
        Notes
        =====
        
        This module has been tested on the following operating systems:
        
        - Ubuntu Linux, version 8.04
        - FreeBSD
        - Mac OS X 10.4 (Tiger)
        - OpenSolaris (2008.05, x86, using the SunStudio 12 compiler suite)
        
        Adding support for other Unix variants should be straightforward.
        
        Restrictions
        ============
        
        - Access to the *utmp* file is read-only. There is no provision for writing
          to the file.
        
        Copyright and License
        =====================
        
        This software is released under a BSD license, adapted from
        <http://opensource.org/licenses/bsd-license.php>
        
        Copyright (c) 2008-2010 Brian M. Clapper.
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        * Redistributions of source code must retain the above copyright notice,
          this list of conditions and the following disclaimer.
        
        * Redistributions in binary form must reproduce the above copyright notice,
          this list of conditions and the following disclaimer in the documentation
          and/or other materials provided with the distribution.
        
        * Neither the name "clapper.org" nor the names of its contributors may be
          used to endorse or promote products derived from this software without
          specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
        ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
        LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
        CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
        SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
        INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
        CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
        ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
        POSSIBILITY OF SUCH DAMAGE.
        
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: Unix
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules

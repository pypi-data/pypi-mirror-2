Metadata-Version: 1.0
Name: openxmllib
Version: 1.0.7
Summary: Provides resources to handle OpenXML documents.
Home-page: http://code.google.com/p/openxmllib/
Author: Gilles Lenfant
Author-email: gilles.lenfant@gmail.com
License: GPLv2
Description: ==========
        openxmllib
        ==========
        
        openxmllib is a set of tools that deals with the new ECMA 376 office file
        formats known as OpenXML.
        
        http://www.ecma-international.org/publications/standards/Ecma-376.htm
        
        OpenXML format is actually used by Microsoft Office 2007. Apple iWork'08 and
        OpenOffice 2.2 have filters to use this format too.
        
        Features
        ========
        
        Tested features
        ---------------
        
        * Extract words from a document for indexing purpose.
        * Get metadata from a document
        * Add OpenXml mimetypes to standard ``mimetypes`` module.
        
        Planned features
        ----------------
        
        * Transform a document to HTML
        
        Public API
        ==========
        
        These examples say all::
        
          >>> import openxmllib
          >>> doc = openxmllib.openXmlDocument(path='office.docx')
          >>> # Raises a ValueError on not supported office files.
          >>> doc.mimeType
          'application/vnd.openxmlformats-officedocument.wordprocessingml.document'
          >>> doc.coreProperties # Keys may depend on application
          {'title': u'blah...', u'creator': u'John Doe', ...}
          >>> doc.extendedProperties # Keys may depend on application
          {'Words': u'312', 'Application': u'Your favorite word processor', ...}
          >>> doc.customProperties # May return an empty mapping
          {'My property': u'My value', ...}
          >>> doc.allProperties # Merges core+extended+custom properties (see above)
          {...}
          >>> doc.indexableText(include_properties=False)
          u'all the words of that document body'
          >>> doc.indexableText(include_properties=True)
          u'all the words of that document body and all properties values'
        
        Standard ``mimetypes`` package extensions ::
        
          >>> import mimetypes
          >>> mimetypes.guess_type('somedoc.docx')
          ('application/vnd.openxmlformats-officedocument.wordprocessingml.document', None)
          >>> mimetypes.guess_type('somecalc.xlsx')
          ('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', None)
          >>> mimetypes.guess_type('someslides.pptx')
          ('application/vnd.openxmlformats-officedocument.presentationml.presentation', None)
        
        Document factory signatures::
        
          >>> # We have the path for the office file
          >>> doc = openxmllib.openXmlDocument(path='office.docx')
          >>> # We have a file object for the office file
          >>> fh = open('office.docx', 'rb')
          >>> doc = openxmllib.openXmlDocument(file_='office.docx')
          >>> # We have the URL for the office file
          >>> doc = openxmllib.openXmlDocument(url='http://domain.tld/office.docx')
          >>> # Xe have the raw data of the office file
          >>> import mimetypes
          >>> docx_mimetype = mimetypes.guess_type('office.docx')
          >>> body = open('office.docx', 'rb').read()
          >>> doc = open(data=body, mime_type=docx_mimetype)
        
        Note that if you're not running a Python application, you may get the indexable
        text from a document with the `openxmlinfo.py` console utility. Just type::
        
          $ openxmlinfo --help
        
        Copying and License
        ===================
        
        Copyright (c) 2008 Gilles Lenfant
        
        This software is subject to the provisions of the GNU General Public
        License, Version 2.0 (GPL).  A copy of the GPL should accompany this
        distribution.  THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL
        EXPRESS OR IMPLIED WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT
        LIMITED TO, THE IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY,
        AGAINST INFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE
        
        More details in the ``COPYING`` file included in this package.
        
        Status
        ======
        
        This software is in production quality, has been tested on Mac OSX, Linux and
        Windows with Python 2.4, Python 2.5, lxml 1.3.6 and lxml 2.2.
        
        It should work on other platforms, with Python 2.6, perhaps with
        other versions of lxml.
        
        Installation
        ============
        
        Using the usual setuptools command::
        
          $ [sudo] easy_install openxmllib
        
        Note that this will install the excellent `lxml` egg too if not already done.
        
        From now you can "import openxmllib" in your Python apps and use the
        "openxmlinfo.py" command line utility.
        
        Gotchas
        =======
        
        Be aware that most text data coming from the various openxmllib
        services might be us-ascii or Unicode. This is a side effect of lxml
        (bug or feature ?). It's up to your application to convert these texts
        to the appropriate charset.
        
        We do not actually handle exceptions due to malformed XML or various
        unexpected structures. You should handle the various (potential)
        problems in a try (...) except (...) block in your application.
        
        Developing and testing
        ======================
        
        You should grab openxmllib with your subversion client from its `repository at
        Google code <http://code.google.com/p/openxmllib/source/checkout>`_.
        
        Then::
        
          $ cd /where/you/installed/openxmllib
          $ python setup.py develop
        
        Note that testing does not require the installation::
        
          $ cd tests
          $ python runalltests.py
        
        Support
        =======
        
        Use the issue tracker provided from the `project site
        <http://code.google.com/p/openxmllib/>`_.
        
        Credits
        =======
        
        * Gilles Lenfant <gilles dot lenfant at gmail dot com>
        * Kevin Deldycke <kev at coolcavemen dot com>
        * Hugo Lopes Tavares <hltbra at gmail dot com>
        
        ============================
        Future features and bugfixes
        ============================
        
        Features
        ========
        
        Remove downloaded temporary file
        --------------------------------
        
        When data is coming from HTTP (...) URL, it's stored in a temporary file that's
        not deleted after processing.
        
        Support for standard mimetypes module
        -------------------------------------
        
        Add our mime types to standard Python module.
        
        Human readable plain text conversion
        ------------------------------------
        
        >>> from openxmllib import openXmlDocument
        >>> doc = openXmlDocument(...)
        >>> doc.textDocument(target_directory)
        
        (this may be not possible for spreadsheets)
        
        HTML conversions
        ----------------
        
        >>> from openxmllib import openXmlDocument
        >>> doc = openXmlDocument(...)
        >>> doc.htmlDocument(target_directory)
        
        This requires to find open source XSLT stylesheets.
        
        Document generation
        -------------------
        
        FIXME: more to say here
        
        Bugfixes
        ========
        
        ...Waiting for feedback ;o)
        
        =======
        History
        =======
        
        .. admonition::
           Issues # xxx
        
           See <http://code.google.com/p/openxmllib/issues/list>_
        
        1.0.7
        =====
        
         - Fixed setup.py that imports indirectly lxml. Raises failure in buildout.
           Issue # 11
           [gilles_DOT_lenfant_AT_gmail_DOT_com]
         - unit tests temporary http server did not work
           [gilles_DOT_lenfant_AT_gmail_DOT_com]
        
        1.0.6
        =====
        
         - The bug of mid word style change is still not fixed in presentation and
           spreadsheets :/ Anyway, we needed an API sanitazation.
           [gilles_DOT_lenfant_AT_gmail_DOT_com]
         - Factory API changed for a safer and faster document object construction.
           [gilles_DOT_lenfant_AT_gmail_DOT_com]
         - Added support for new mime types that are not in the standard mimetypes
           module.
           [gilles_DOT_lenfant_AT_gmail_DOT_com]
        
        1.0.5
        =====
        
         - Optims on large documents.
           [gilles_DOT_lenfant_AT_gmail_DOT_com]
         - CamelCased functions and method names in consistency with applied rules.
           [gilles_DOT_lenfant_AT_gmail_DOT_com]
         - Version reset to 1.0.5
           [gilles_DOT_lenfant_AT_gmail_DOT_com]
         - Support for urllib compatible URLs
           [gilles_DOT_lenfant_AT_gmail_DOT_com]
         - New: Support for URLs
           [hltbra_AT_gmail_DOT_com]
         - Fixed implementation to that old tests pass (the "midword"/"metadata" case,
           bold + normal style was not ok)
           [hltbra_AT_gmail_DOT_com]
        
        1.0.4
        =====
        
         - Compliance with python 2.5 and lxml 2.2
           Still works with python 2.4 and lxml 1.3.6
           [gilles_DOT_lenfant_AT_gmail_DOT_com]
         - Automate package and version definition
         - Bump version to 1.0.4
           2008-12-11 [kev_AT_coolcavemen_DOT_com]
        
        1.0.3
        =====
        
         - Conforming XPath constructor signature.
           [gilles_DOT_lenfant_AT_gmail_DOT_com]
        
         - New test files built with Mac Office 2008
           [gilles_DOT_lenfant_AT_gmail_DOT_com]
        
        1.0.2
        =====
        
         - Fix bad "egging".
           [kev_AT_coolcavemen_DOT_com]
        
        1.0.1
        =====
        
         - Egg-ification.
           [kev_AT_coolcavemen_DOT_com]
        
        1.0.0
        =====
        
         - First public version.
           [gilles_DOT_lenfant_AT_gmail_DOT_com]
Keywords: Python OpenXML lxml Office2007 ECMA376
Platform: UNKNOWN
Classifier: License :: OSI Approved :: GNU General Public License (GPL)
Classifier: Topic :: Office/Business :: Office Suites
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Text Processing :: Indexing
Classifier: Programming Language :: Python

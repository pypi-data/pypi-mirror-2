#!/usr/bin/python

import logging
import optparse
import re
import subprocess
import sys

import blueprint
from blueprint import context_managers

parser = optparse.OptionParser('Usage: %prog [-q] <name>')
parser.add_option('-q', '--quiet',
                  dest='quiet',
                  default=False,
                  action='store_true',
                  help='operate quietly')
(options, args) = parser.parse_args()

if options.quiet:
    logging.root.setLevel(logging.CRITICAL)

if 1 != len(args):
    parser.print_usage()
    sys.exit(1)
if re.search(r'[/ \t\r\n]', args[0]):
    logging.error('invalid blueprint name')
    sys.exit(1)
name = args[0]

try:
    b = blueprint.Blueprint(name=name)
except KeyError:
    logging.error('blueprint {0} does not exist'.format(name))
    sys.exit(1)

with context_managers.mkdtemp():
    filename = b.sh().dumpf()
    p = subprocess.Popen(['sudo', 'sh', filename], close_fds=True)
    p.communicate()
    sys.exit(p.returncode)

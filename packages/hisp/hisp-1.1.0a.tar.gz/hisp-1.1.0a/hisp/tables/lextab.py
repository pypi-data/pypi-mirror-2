# lextab.py. This file automatically created by PLY (version 3.3). Don't edit!
_tabversion   = '3.3'
_lextokens    = {'CLOSER': 1, 'WORD': 1, 'ATTR': 1, 'MACRO': 1, 'DJANGO_COMMENT': 1, 'OPEN_BLOCK': 1, 'DOCTYPE': 1, 'ELEM': 1, 'LITERAL': 1, 'ID': 1, 'CDATA': 1, 'CLOSED_BLOCK': 1, 'VARIABLE': 1, 'CLASS': 1, 'CP': 1, 'HTML_COMMENT': 1, 'CB': 1, 'STRING': 1}
_lexreflags   = 0
_lexliterals  = ''
_lexstateinfo = {'INITIAL': 'inclusive'}
_lexstatere   = {'INITIAL': [('(?P<t_newline>\\n+)|(?P<t_ignore_COMMENT>\n    \\{!                 (?# Bracket Bang)\n    ([^!\\\\]|\\\\.|![^}])* (?# Anything but unescaped brackets or slashes)\n    !\\}                 (?# Closing Bang Bracket))|(?P<t_DJANGO_COMMENT>\n    \\{\\#                    (?# Bracket Hash)\n    ([^#\\\\]|\\\\.|\\#[^}])*    (?# Anything but unescaped brackets or slashes)\n    \\#\\}                    (?# Closing Bracket))|(?P<t_HTML_COMMENT>\n    \\(!                 (?# Paren Bang)\n    ([^!\\\\]|\\\\.|![^}])* (?# Anything but unescaped parens or slashes)\n    \\!\\)                (?# Closing Paren))|(?P<t_DOCTYPE>\n    \\(~             (?# Paren Tilda)\n    ([^)\\\\]|\\\\.)    (?# Anything but unescaped parens or slashes)\n    \\)              (?# Closing Paren))|(?P<t_CLOSER>     (?# Nameless elements are allowed, as in #id.class)\n    \\(\\s*           (?# Open Paren frontslash, whitespace)\n    [\\w:-]*         (?# Maybe a tag name, hyphens and colins allowed)\n    /               (?# A frontslash))|(?P<t_OPEN_BLOCK>\n    \\{\\s*%              (?# Bracket Percent)\n    (\n      [^~"}\\\\]|         (?# Normal characters)\n      \\\\.|              (?# Escaped characters)\n      "([^"\\\\]|\\\\.)*"   (?# Full strings)\n    )*~)|(?P<t_CLOSED_BLOCK>\n    \\{\\s*%              (?# Bracket Percent)\n    (\n      [^~"}\\\\]|         (?# Normal characters)\n      \\\\.|              (?# Escaped characters)\n      "([^"\\\\]|\\\\.)*"   (?# Full strings)\n    )*\\})|(?P<t_MACRO>\n    \\(%\\s*                  (?# Paren, Percent, Whitespace)\n      ([^\\s{}()\\[\\].#]+)    (?# Match 1: Macro Name)\n      (?:\\[(                (?# Match 2: Argument)\n        (?:[^\\]\\\\]|\\\\.)*    (?# The arg can contain all but unescaped ]s or \\s)\n      )\\])?                 (?# The argument is optional))|(?P<t_LITERAL>\n    \'               (?# Opening Single Quote)\n    ([^\'\\\\]|\\\\.)*   (?# Anything except unescaped \\ or \')\n    \'               (?# Closing Single Quote))|(?P<t_STRING>\n    "(                  (?# Opening Quote)\n      [^"{\\\\]|          (?# Unescaped Character)\n      \\\\.|              (?# Escaped Character)\n      \\{([^}\\\\]|\\\\.)*\\} (?# Template Variable)\n    )*"                 (?# Closing Quote))|(?P<t_VARIABLE>\n    \\{(?!\\s*%)      (?# Open Bracket without following percent)\n    ([^}\\\\]|\\\\.)*   (?# Anything except unescaped \\ or })\n    \\}              (?# Close Bracket))|(?P<t_CDATA>\n    <               (?# Opening Angle Bracket)\n    ([^>\\\\]|\\\\.)*   (?# Anything except unescaped \\ or >)\n    >               (?# Closing angle bracket))|(?P<t_ATTR>\n    \\(:              (?# Paren Colin)\n    \\s*[\\w:-]+       (?# A word, including hyphens and colins))|(?P<t_CLASS>\n    (?<!\\s)         (?# Not preceeded by whitespace)\n    \\.              (?# A dot)\n    [\\w:-]+         (?# A word, hyphens and colins allowed))|(?P<t_ID>\n    (?<!\\s)         (?# Not preceeded by whitespace)\n    \\#              (?# A hash)\n    [\\w:-]+         (?# A word, hyphens and colins allowed))|(?P<t_CP>\\))|(?P<t_CB>\\})|(?P<t_ELEM>     (?# Nameless elements are allowed, as in #id.class)\n    \\(\\s*           (?# Open Paren, whitespace)\n    [\\w:-]*         (?# Maybe a tag name, hyphens and colins allowed))|(?P<t_WORD>[^\\s"\'<>)}]+)', [None, ('t_newline', 'newline'), ('t_ignore_COMMENT', 'ignore_COMMENT'), None, ('t_DJANGO_COMMENT', 'DJANGO_COMMENT'), None, ('t_HTML_COMMENT', 'HTML_COMMENT'), None, ('t_DOCTYPE', 'DOCTYPE'), None, ('t_CLOSER', 'CLOSER'), ('t_OPEN_BLOCK', 'OPEN_BLOCK'), None, None, ('t_CLOSED_BLOCK', 'CLOSED_BLOCK'), None, None, ('t_MACRO', 'MACRO'), None, None, ('t_LITERAL', 'LITERAL'), None, ('t_STRING', 'STRING'), None, None, ('t_VARIABLE', 'VARIABLE'), None, ('t_CDATA', 'CDATA'), None, ('t_ATTR', 'ATTR'), ('t_CLASS', 'CLASS'), ('t_ID', 'ID'), ('t_CP', 'CP'), ('t_CB', 'CB'), ('t_ELEM', 'ELEM'), ('t_WORD', 'WORD')])]}
_lexstateignore = {'INITIAL': ' \t'}
_lexstateerrorf = {'INITIAL': 't_error'}

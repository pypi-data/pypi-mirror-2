Metadata-Version: 1.0
Name: mockcache
Version: 0.9
Summary: The Python dictionary-based mock memcached client library.
Home-page: http://bitbucket.org/lunant/mockcache/
Author: 0.9
Author-email: dahlia@lunant.net
License: MIT License
Description: The Python dictionary-based mock memcached client library. It does not
        connect to any memcached server, but keeps a dictionary and store every cache
        into there internally. It is a just emulated API of memcached client only for
        tests. It implements expiration also. NOT THREAD-SAFE.
        
        try:
        import memcache
        except ImportError:
        import warnings
        import mockcache as memcache
        warnings.warn("imported mockcache instead of memcache; cannot find "
        "memcache module")
        
        mc = memcache.Client(["127.0.0.1:11211"])
        
        This module and other memcached client libraries have the same behavior.
        
        >>> from mockcache import Client
        >>> mc = Client()
        >>> mc
        <mockcache.Client {}>
        >>> mc.get("a")
        >>> mc.get("a") is None
        True
        >>> mc.set("a", "1234")
        1
        >>> mc.get("a")
        '1234'
        >>> mc
        <mockcache.Client {'a': ('1234', None)}>
        >>> mc.add("a", "1111")
        0
        >>> mc.get("a")
        '1234'
        >>> mc
        <mockcache.Client {'a': ('1234', None)}>
        >>> mc.replace("a", "2222")
        1
        >>> mc.get("a")
        '2222'
        >>> mc
        <mockcache.Client {'a': ('2222', None)}>
        >>> mc.append("a", "3")
        1
        >>> mc.get("a")
        '22223'
        >>> mc
        <mockcache.Client {'a': ('22223', None)}>
        >>> mc.prepend("a", "1")
        1
        >>> mc.get("a")
        '122223'
        >>> mc
        <mockcache.Client {'a': ('122223', None)}>
        >>> mc.incr("a")
        122224
        >>> mc.get("a")
        122224
        >>> mc
        <mockcache.Client {'a': (122224, None)}>
        >>> mc.incr("a", 10)
        122234
        >>> mc.get("a")
        122234
        >>> mc
        <mockcache.Client {'a': (122234, None)}>
        >>> mc.decr("a")
        122233
        >>> mc.get("a")
        122233
        >>> mc
        <mockcache.Client {'a': (122233, None)}>
        >>> mc.decr("a", 5)
        122228
        >>> mc.get("a")
        122228
        >>> mc
        <mockcache.Client {'a': (122228, None)}>
        >>> mc.replace("b", "value")
        0
        >>> mc.get("b")
        >>> mc.get("b") is None
        True
        >>> mc
        <mockcache.Client {'a': (122228, None)}>
        >>> mc.add("b", "value", 5)
        1
        >>> mc.get("b")
        'value'
        >>> mc  # doctest: +ELLIPSIS
        <mockcache.Client {'a': (122228, None), 'b': ('value', ...)}>
        >>> import time
        >>> time.sleep(6)
        >>> mc.get("b")
        >>> mc.get("b") is None
        True
        >>> mc
        <mockcache.Client {'a': (122228, None)}>
        
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Testing
Classifier: Topic :: Software Development :: Libraries :: Python Modules

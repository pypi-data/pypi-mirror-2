Metadata-Version: 1.0
Name: profilehooks
Version: 1.5
Summary: Decorators for profiling individual functions
Home-page: http://mg.pov.lt/profilehooks/
Author: Marius Gedminas
Author-email: marius@gedmin.as
License: MIT
Description: profilehooks
        ============
        
        It's a collection of decorators for profiling functions.  E.g. to profile a
        single function::
        
            from profilehooks import profile
        
            @profile
            def my_function(args, etc):
                pass
        
        The results will be printed when the program exits (or you can use
        ``@profile(immediate=True)``).
        
        If you're interested in coarse timings and don't want to pay for the overhead
        of profiling, use ::
        
            from profilehooks import timecall
        
            @timecall       # or @timecall(immediate=True)
            def my_function(args, etc):
                pass
        
        Finally, you may be interested in seeing line coverage for a single function ::
        
            from profilehooks import coverage
        
            @coverage
            def my_function(args, etc):
                pass
        
        Full documentation is available through ``pydoc profilehooks`` after
        installation.
        
        The home page for this module is http://mg.pov.lt/profilehooks.  It has
        screensho, uh, that is, more examples.
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Operating System :: OS Independent

<?xml version="1.0" encoding="utf-8"?>
<?py
from cocktail.html import Element
from cocktail.controllers import context
from woost.models.publishable import get_category_from_mime_type
from woost.models.file import get_human_readable_file_size
?>

<py:woost.views.BackOfficeFieldsView
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:py="http://www.whads.com/ns/cocktail/templates">

    <py:with py:element="self.body" enctype="multipart/form-data"/>

    <py:with py:element="self.item_body">
        <py:ready>
            <py:with py:element="self.edit_form">
                <py:with py:def="label" py:args="member, language = None" py:baseargs="member, language">
                    <py:block py:if="member.name == 'upload'">
                        <?py
                        form = self.edit_form
                        upload = form.get_member_value(form.data, member)
                        ?>
                        <py:new py:element="self.create_upload_info(upload)" py:if="upload and not form.data.get('local_path')"/>
                    </py:block>
                </py:with>
                <py:with py:def="control" py:args="obj, member">
                    <?py
                    if member.name == "image_effects":
                        element.edited_item = context['cms_item']
                    ?>
                </py:with>
            </py:with>
        </py:ready>
    </py:with>

    <p py:def="upload_info">
        <?py
        resource_type = self.edited_item.resource_type
        if resource_type:
            element.add_class("resource_type_" + resource_type)

        mime_type = self.edited_item.mime_type
        if mime_type:
            element.add_class("mime_type_" + mime_type.replace("/", "_").replace(".", "_"))
        ?>
        <span class="file_name">${self.edited_item.file_name}</span>
        <span class="file_size">
            ${get_human_readable_file_size(self.edited_item.file_size)}
        </span>
    </p>

</py:woost.views.BackOfficeFieldsView>

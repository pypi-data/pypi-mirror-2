Metadata-Version: 1.0
Name: Theano
Version: 0.3.0
Summary: Optimizing compiler for evaluating mathematical expressions on CPUs and GPUs.
Home-page: http://deeplearning.net/software/theano/
Author: LISA laboratory, University of Montreal
Author-email: theano-dev@googlegroups.com
License: BSD
Description: Theano is a Python library that allows you to define, optimize, and efficiently evaluate mathematical expressions involving multi-dimensional arrays. It is built on top of NumPy_. Theano features:
        
        * **tight integration with NumPy:** a similar interface to NumPy's. numpy.ndarrays are also used internally in Theano-compiled functions.
        * **transparent use of a GPU:** perform data-intensive computations up to 140x faster than on a CPU (support for float32 only).
        * **efficient symbolic differentiation:** Theano can compute derivatives for functions of one or many inputs.
        * **speed and stability optimizations:** avoid nasty bugs when computing expressions such as log(1+ exp(x) ) for large values of x.
        * **dynamic C code generation:** evaluate expressions faster.
        * **extensive unit-testing and self-verification:** includes tools for detecting and diagnosing bugs and/or potential problems.
        
        Theano has been powering large-scale computationally intensive scientific
        research since 2007, but it is also approachable enough to be used in the
        classroom (IFT6266 at the University of Montreal).
        
        .. _NumPy: http://numpy.scipy.org/
        
        
        Theano 0.3 (2010-11-23)
        -----------------------
        
        This is the first major release of Theano since 0.1. Version 0.2 development started internally but it was never advertised as a release.
        
        There have been so many changes since 0.1 that we have lost track of many of them. Below is a *partial* list of changes since 0.1.
        
        * GPU code using NVIDIA's CUDA framework is now generated for many Ops.
        * Some interface changes since 0.1:
        * A new "shared variable" system to allow reusing memory space between Theano functions.
        * A new memory contract has been formally written for Theano, for people who want to minimize memory copies.
        * The old module system has been deprecated.
        * By default, inputs to a Theano function will not be silently downcasted (e.g. from float64 to float32).
        * An error is now raised when using the result of logical operation on Theano variable in an 'if' (i.e. an implicit call to __nonzeros__).
        * An error is now raised when we receive a non-aligned ndarray as input to a function (this is not supported).
        * An error is raised when the list of dimensions passed to dimshuffle() contains duplicates or is otherwise not sensible.
        * Call NumPy BLAS bindings for gemv operations in addition to the already supported gemm.
        * If gcc is unavailable at import time, Theano now falls back to a Python-based emulation mode after raising a warning.
        * An error is now raised when tensor.grad is called on a non-scalar Theano variable (in the past we would implicitly do a sum on the tensor to make it a scalar).
        * Added support for "erf" and "erfc" functions.
        * The current default value of the parameter axis of theano.{max,min,argmax,argmin,max_and_argmax} is deprecated. We now use the default NumPy behavior of operating on the entire tensor.
        * Theano is now available from PyPI and installable through "easy_install" or "pip".
        
Keywords: theano math numerical symbolic blas numpy gpu autodiff differentiation
Platform: Windows
Platform: Linux
Platform: Solaris
Platform: Mac OS-X
Platform: Unix
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Code Generators
Classifier: Topic :: Software Development :: Compilers
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS

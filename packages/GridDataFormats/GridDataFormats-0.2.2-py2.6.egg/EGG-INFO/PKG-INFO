Metadata-Version: 1.0
Name: GridDataFormats
Version: 0.2.2
Summary: Reading and writing of data on regular grids in Python
Home-page: https://github.com/orbeckst/GridDataFormats
Author: Oliver Beckstein
Author-email: orbeckst@gmail.com
License: GPLv3
Description: 
        The *gridDataFormats* package provides classes to unify reading and
        writing n-dimensional datasets. One can read grid data from files,
        make them available as a :class:`Grid` object, and allows one to
        write out the data again.
        
        The Grid class
        --------------
        
        A :class:`Grid` consists of a rectangular, regular, N-dimensional
        array of data. It contains
        (1) The position of the array cell edges.
        (2) The array data itself.
        
        This is equivalent to knowing
        (1) The origin of the coordinate system (i.e. which data cell
        corresponds to (0,0,...,0)
        (2) The spacing of the grid in each dimension.
        (3) The data on a grid.
        
        :class:`Grid` objects have some convenient properties:
        
        * The data is represented as a :class:`numpy.array` and thus shares
        all the advantages coming with this sophisticated and powerful
        library.
        
        * They can be manipulated arithmetically, e.g. one can simply add or
        subtract two of them and get another one, or multiply by a
        constant. Note that all operations are defined point-wise (see the
        :mod:`numpy` documentation for details) and that only grids defined
        on the same cell edges can be combined.
        
        * A :class:`Grid` object can also be created from within python code
        e.g. from the output of the :func:`numpy.histogramdd` function.
        
        * The representation of the data is abstracted from the format that
        the files are saved in. This makes it straightforward to add
        additional readers for new formats.
        
        * The data can be written out again in formats that are understood by
        other programs such as VMD_ or PyMOL_.
        
        .. _VMD: http://www.ks.uiuc.edu/Research/vmd/
        .. _PyMOL: http://www.pymol.org/
        
        
        Supported file formats
        ----------------------
        
        The package can be easily extended. The OpenDX format is widely
        understood by many molecular viewers and is sufficient for many
        applications that were encountered so far. Hence, at the moment only a
        small number of file formats is directly supported.
        
        ==========  =========  =====  =====  =========================================
        format      extension  read   write  remarks
        ==========  =========  =====  =====  =========================================
        OpenDX_     dx         x      x      subset of OpenDX implemented
        gOpenMol    plt        x
        pickle      pickle     x      x      standard Python pickle of the Grid class
        ==========  =========  =====  =====  =========================================
        
Keywords: science array density
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: GNU General Public License (GPL)
Classifier: Programming Language :: Python
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Software Development :: Libraries :: Python Modules

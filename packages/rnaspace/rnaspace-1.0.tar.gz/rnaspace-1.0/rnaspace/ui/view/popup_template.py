#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
from os.path import getmtime, exists
import time
import types
import __builtin__
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers

##################################################
## MODULE CONSTANTS
try:
    True, False
except NameError:
    True, False = (1==1), (1==0)
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.0.1'
__CHEETAH_versionTuple__ = (2, 0, 1, 'final', 0)
__CHEETAH_genTime__ = 1268406723.8657341
__CHEETAH_genTimestamp__ = 'Fri Mar 12 16:12:03 2010'
__CHEETAH_src__ = 'popup_template.tmpl'
__CHEETAH_srcLastModified__ = 'Mon Mar  8 17:00:03 2010'
__CHEETAH_docstring__ = 'Autogenerated by CHEETAH: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class popup_template(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        Template.__init__(self, *args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        # 
        #  RNAspace: non-coding RNA annotation platform
        #  Copyright (C) 2009  CNRS, INRA, INRIA, Univ. Paris-Sud 11
        #  
        #  This program is free software: you can redistribute it and/or modify
        #  it under the terms of the GNU General Public License as published by
        #  the Free Software Foundation, either version 3 of the License, or
        #  (at your option) any later version.
        #  
        #  This program is distributed in the hope that it will be useful,
        #  but WITHOUT ANY WARRANTY; without even the implied warranty of
        #  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        #  GNU General Public License for more details.
        #  
        #  You should have received a copy of the GNU General Public License
        #  along with this program.  If not, see <http://www.gnu.org/licenses/>.
        # 
        write('''
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
\t  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="fr" lang="fr">

  <head>
    <title>''')
        _v = VFFSL(SL,"page_title",True) # '$page_title' on line 24, col 12
        if _v is not None: write(_filter(_v, rawExpr='$page_title')) # from line 24, col 12.
        write('''</title>
    <meta http-equiv="Content-Type" content="text/html;charset=iso-8859-15" />
    <meta http-equiv="Content-Style-Type" content="text/css" />
    <meta http-equiv="Content-Language" content="fr" />
    <link href="''')
        _v = VFFSL(SL,"mount_point",True) # '${mount_point}' on line 28, col 17
        if _v is not None: write(_filter(_v, rawExpr='${mount_point}')) # from line 28, col 17.
        write('''ressource/img/favicon.ico"  rel="SHORTCUT ICON" />
    <link href="''')
        _v = VFFSL(SL,"mount_point",True) # '${mount_point}' on line 29, col 17
        if _v is not None: write(_filter(_v, rawExpr='${mount_point}')) # from line 29, col 17.
        write('''ressource/css/rnaspace.css" rel="stylesheet" 
\t  type="text/css" />

    <script type="text/javascript" 
\t    src="''')
        _v = VFFSL(SL,"mount_point",True) # '${mount_point}' on line 33, col 11
        if _v is not None: write(_filter(_v, rawExpr='${mount_point}')) # from line 33, col 11.
        write('''ressource/js/jquery-1.3.1.min.js">
    </script>
\t
\t''')
        _v = VFFSL(SL,"import_ressources",True) # '$import_ressources' on line 36, col 2
        if _v is not None: write(_filter(_v, rawExpr='$import_ressources')) # from line 36, col 2.
        write('''

    <script type="text/javascript">
     <!--
     $(document).ready(function(){
\t  var cookieStr = "ck_check=checkingnow";
\t  document.cookie = cookieStr;
\t  if (document.cookie.indexOf(cookieStr) <= -1)
\t  {
\t    window.location.replace("/cookies_error");
\t  }
  \t  ''')
        _v = VFFSL(SL,"jquery",True) # '$jquery' on line 49, col 6
        if _v is not None: write(_filter(_v, rawExpr='$jquery')) # from line 49, col 6.
        write('''
\t  });
\t  ''')
        _v = VFFSL(SL,"javascript",True) # '$javascript' on line 53, col 4
        if _v is not None: write(_filter(_v, rawExpr='$javascript')) # from line 53, col 4.
        write('''
     -->
    </script>

  </head>
  <body>
    
    <div id="container"> 
      
      <div id="logo"><a href="/"></a></div>
      
      <div id="header">
      </div>   
       
      <div id="content">
       <div id="help_o">
\t <a href="''')
        _v = VFFSL(SL,"mount_point",True) # '${mount_point}' on line 69, col 12
        if _v is not None: write(_filter(_v, rawExpr='${mount_point}')) # from line 69, col 12.
        write('''help" target="blank">
\t   <img src="''')
        _v = VFFSL(SL,"mount_point",True) # '${mount_point}' on line 70, col 15
        if _v is not None: write(_filter(_v, rawExpr='${mount_point}')) # from line 70, col 15.
        write('''ressource/img/icon/help_o.png" alt="help" 
\t\tclass="border0" />
\t </a>
       </div>
       <noscript>
\t <div id="crb_header">
\t   <div id="crb_title"> J a v a s c r i p t &nbsp; W a r n i n g </div>
\t   <div id="crb_content">
\t     If you see this message, your web browser doesn\'t support 
\t     JavaScript or JavaScript is disabled. Please enable JavaScript
\t     in your browser settings so RNAspace can be functional. 
\t   </div>
\t </div>
       </noscript>
       
       ''')
        _v = VFFSL(SL,"page_content",True) # '$page_content' on line 85, col 8
        if _v is not None: write(_filter(_v, rawExpr='$page_content')) # from line 85, col 8.
        write('''
      </div>
      
      <div id="big_footer">
\t<div id="footer">
\t  <p>
\t    Comments and remarks: 
\t    <a href="mailto:contact@rnaspace.org">contact@rnaspace.org</a>.
\t  </p>
\t</div>
      </div>
      
    </div> 
  </body>
</html>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_popup_template= 'respond'

## END CLASS DEFINITION

if not hasattr(popup_template, '_initCheetahAttributes'):
    templateAPIClass = getattr(popup_template, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(popup_template)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=popup_template()).run()



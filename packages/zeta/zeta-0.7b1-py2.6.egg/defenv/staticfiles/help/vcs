[< <style type="text/css"> >]
h1, h2, h3, h4, h5 { 
    margin : 0px;
    padding: 5px 0px 2px 3px;
    background-color : #EAEAFC;
    border-bottom: 1px solid #CCCCCC;
}
[< </style> >]

{{ Toc( float="right" ) }}

=== Version control system

[<Q Revision control, also known as version control, source control or software
 configuration management (SCM), is the management of changes to documents,
 programs, and other information stored as computer files. It is most commonly
 used in software development, where a team of people may change the same files.
 Changes are usually identified by a number or letter code, termed the
 "revision number", "revision level", or simply "revision".
 For example, an initial set of files is "revision 1". When the first change
 is made, the resulting set is "revision 2", and so on. Each revision is
 associated with a timestamp and the person making the change.  Revisions can be
 compared, restored, and with some types of files, merged. >]
 
A repository is where files' current and historical data are stored, often
on a server. Sometimes also called a depot (for example, by SVK, AccuRev and
Perforce). Any number of repositories can be integrated with projects hosted
under a Zeta site. Currently, support is available for,
  * ''SVN'', most popular open source version control system.
  * ''Bazaar'', open source and next generation version control system called
    distributed version control. 

=== Integrating a repository

To integrate a repository with a project, provide the following fields,

  * ''name'', human readable name for repository
  * ''type'', can be //bzr// or //svn//
  * ''rooturl'', url path where the repository is rooted. Zeta support both
    // file:~/~// // and // http:~// // schema to specify the root url. Make
    sure that the repository is located on the same machine as the Zeta site
    or atleast in its local network. Otherwise, performance will be very slow.

{{ Image( '/screenshots/vcsexplorer.png', 'screenshot of repository browser',
        style="max-width: 80%; margin-left: 10%" ) }}

=== Source browsing

Repositories can be browsed in explorer style window. By default the latest
version of the repository is displayed, to display other revisions, use the
revision number selector at the top right corner of the screen.
Left column displays the directory tree. Right column displays the files under
selected directory, along with its author (latest author), date, size and
last revision in which it was modified.

Repository directories can be [[ /help/vcs#Mounting directories | mounted ]]
as they are navigated

=== Change-sets

{{ Image( '/screenshots/vcschangeset.png', 'screenshot of revision change set',
          padding="5px", margin="5px", float="right",
          style="border-left : 2px solid #d6d6d6;" ) }}

When ever a revision number of repository / file is displayed, it is displayed
as a link, which most probably take you to that revision's change-set details.
Alternatively use '/ Revlist '/ link to view complete list of all repository
revisions and then navigate to desired revision number.

Every repository revision has its own change-set page, which provides
following information,
  * Revision log message
  * Commiter
  * Committed date
  * List of affected files, categorised as, //modified//, //added//,
    //deleted//
  * Changes in each affected file can be downloaded in patch format
  * Changes in all affected files can be downloaded in path format
  * Single click review request for all files that are modified or added in
    that revision

{{ Clear() }}

=== File listing

When a repository is successfully integrated with its project, every file
under the repository will get its url. Users can list files, selecting them in
the right column of repository explorer.

When a file is selected, it will be listed with the following details,
  * Syntax highlighted file content
  * Annotation for each line of the file, as hover message
  * File revision number
  * List of all commiters to the file
  * List of repository revisions where the file was modified
  * Single click review request
  * Download-link
  * Lifespan of the file in relation to the life span of repository
  * Navigation to a different revision of the file

{{ Image( '/screenshots/vcsfilelisting.png', 'screenshot of file in repository',
          padding="5px", margin="5px", style="margin-left: 10%;" ) }}

=== Mounting directories

Some developers prefer to check-in their documents along with source code
into their repository. There are also automatic documentation generator like
[[ http://www.doxygen.org/ | doxygen ]] that can generate documents in html
format and store them in a directory tree (which again can be checked-into the
repository).

To host such documents without the hazzle of setting up a web server, just
mount those directories onto project's url. For instance, document directory
having relative path (to repository) as //zeta/doc// is mounted, its content
(including its subdirectories) could be hosted at,
[<PRE /p/{projectname}/mnt/{id}/zeta/doc >]

=== Bazaar

* [[ http://wiki.bazaar.canonical.com/Download | Get bazaar ]]
* [[ http://doc.bazaar.canonical.com/bzr.2.1/en/ | Bazaar documentation ]]

=== SVN

A detailed document of SVN can be found as [[ *http://svnbook.red-bean.com/ | online book ]]

If you are impatient you can directly jump into
[[ *http://svnbook.red-bean.com/nightly/en/svn.tour.importing.html | this page ]]
to get started with setting up your repository and subsequently you can refer
back with the book.

/* vim: set filetype=zwiki : */

[< <style type="text/css"> >]
h1, h2, h3, h4, h5 { 
    margin : 0px;
    padding: 5px 0px 2px 3px;
    background-color : #EAEAFC;
    border-bottom: 1px solid #CCCCCC;
}
[< </style> >]

{{ Toc( position='relative', float='right' ) }}

=== Zeta tickets

Zeta provides an efficient way to track issues, requirements, tasks and activities 
in the project with tickets. Project members are assigned tickets and can view 
all tickets assigned to them using the custom filters. Assign tickets to project
members, prioritize based on severity, milestone or version, view ticket 
workflow , discuss about tickets or prompt other users for action.


=== Ticket features

Following is a snapshot of ticket features,
  * Create and edit tickets
  * Listing tickets in grid-style, where by users can navigate and edit ticket
    attributes, in spreadsheet style
  * Color coding for tickets
  * Ticket workflow
  * Timeline of all tickets under the project or timeline of a single ticket
  * RSS feed for both timelines
  * Consolidated list of files attached to tickets
  * Tag widget
  * Attachment widget
  * Up-voting or down-voting tickets
  * User favorites, and watch list
  * Discuss tickets
  * Charts and analytics

Let us now move on to attributes of a ticket.

=== Attributes of a ticket

Every created ticket will have the following attributes, note that, the
possible values that each of those attributes can take are fully configurable.

: Type ::
    Gives an idea of why and what of a ticket. 
: Severity ::
    Denotes the urgency of a ticket. Synonymous to priority.
: Status ::
    This is an important attribute tracking ticket's activity as it progress
    towards closure (one of the //resolved// status).
: Owner ::
    User who is currently responsible for the ticket. Users can become ticket 
    owners by changing its status.
: Duedate ::
    Deadline by which the ticket should be acted upon, the result of which can
    be moving the ticket to a different status.
: Promptuser ::
    Note that, a ticket's owner is not assigned by another user, instead a
    user becomes the owner of a ticket by changing its status (more like
    accepting the ownership, rather than delegating it). There could be
    situations where a ticket needs to be acted upon by another user, who is
    not its current owner. //Promptuser// attribute can prompt such users to act
    on a ticket.
: Component, milestone, versions ::
    Triage tickets based on project's component, milestone and version

: Summary ::
    A one line summary highlighting the purpose of a ticket.
: Description ::
    Detailed description providing all required information to resolve tickets.

''Customize possible values for ticket ``{c}type``, ``{c}severity``,
``{c}status`` and ticket resolve status at siteadmin->siteConfig.''

=== Ticket dependencies

: Blocking tickets ::
    Mark tickets that depend on each other as // blocking // or
    // blocked-by//. By doing so, users can watch complete dependency tree of
    a ticket (upto any level).
    [[ /screenshots/tck_depgraph.png | Example graph ]].

: Parent-child ::
    When a ticket needs to be split into sub-activities, create new ticket
    for each of those sub-activities and mark them as children for the master
    ticket. By doing so, users can watch complete task tree of a ticket (upto
    any level).  [[ /screenshots/tck_tasktree.png | Example tree ]].

===Ticket listing

Tickets are listed in grid-style, which are like spread-sheet, where users
can navigate from one cell to another (using up, down, left, right arrows) or
select a cell with mouse. To edit ticket attributes in-line, double click on
the cell or press ENTER. Once entering the desired value press ENTER once
again or navigate away from the cell.

The header row in the grid can be used for two purposes. One, to sort ticket
list by its attributes (left click on the corresponding attribute column) and two,
to add/remove columns (right click on the header row).

Since ticket filtering and listing are provided in a single page, users will
find that identifying desired tickets and updating them are effortless.

{{ Image( '/screenshots/tckindex.png', 'screenshot of ticket list',
          padding="5px", margin="5px 5px 5px 50px" ) }}

=== Ticket filters

As the number of tickets grow larger, it becomes important to do intelligent
filtering to generate list of desired tickets. Zeta supports very
sophisticated and interactive filters.

: Standard filters ::
    Standard filters are the most sophisticated, where filter rules can be
    given in ''regular expression'' and ''templated strings''. These rules are defined
    in the back-end, and are stored in a file //tckfilters.pyd//. First
    filter rule will be taken as the default rule to apply when ever
    project's tickets are requested by the browser. Subsequently, users can
    fetch tickets applying different filter rules. Standard filtering rules are
    applicable both on server side and client side. Only administrators having
    access to Zeta server can define standard filters.
    Use //in-browser filtering// to filter on client side, or //Filter from server//
    link to filter on the server side.
: Custom filters ::
    Custom filters provide a list of selectable options for most of the ticket
    attributes. Users can select the attribute value, applying them on the
    listed tickets. If more than one attribute value is selected, only tickets
    that match ''all selected values'' will be listed.
: Saved filters ::
    Users can save their custom filters and refer to them later.

=== Ticket Lifecycle

A typical lifecycle of a ticket starts from 'new' state, moves through various
other status as per activity and finally gets parked in one of the resolved
status. Zeta does not provide any workflow management for tickets as yet,
but in future we are planning to introduce a pluggable workflow framework which
can enforce various activity patterns.

Another policy worth mentioning  here is that, ownerships are not delegated, instead
ownerships are accepted. Users can accept ownership of a ticket by changing
its status.

=== How to use issue tracking ?

: Create ticket ::
    Create new tickets using the //Create// link. While creating a ticket,
    following fields are mandatory, \\ 
    [<PRE  summary, type, severity >]
    Note that tickets can only be created under project's context. Only users
    having //TICKET_CREATE// permission can create new tickets.
: Edit ticket ::
    A newly created ticket will have its own page under the project. Editing
    the ticket is done inline. If a ticket's field is editable, it will be
    hover-highlighted when moving the mouse over it. To edit, just click on
    the field, appropriate form element will pop-up enabling you to update the
    field's value. Navigating away from the field will submit the new value to
    the server. Example in figure.
: Ticket color coding ::
    Whether a ticket is listed in the index page or viewed in its own page, it
    will be color coded based on the definitions in //tckccodes.json// file
    under,
    [[ /help/IniConfig#Setup time configuration | public directory ]]
: Discuss ticket ::
    Add new comments to ticket or reply to another comments. Use
    // Conversation // mode to list ticket comments like threads. Only users
    having //TICKET_COMMENT_CREATE// permission can discuss tickets.
: Inline editing ticket list ::
    Tickets are listed in grid style, enabling users to navigate and
    edit them inline. Use up, down, left, right arrow keys (or mouse)
    navigate from one cell to another. To edit, press Enter, or double click
    on the cell. A suitable edit form will pop-up. Once updating the cell with
    desired value, navigate away from the cell (or press ENTER once again) to
    save it. Note that, cells that cannot be edited are displayed in gray.
: Changing ticket status ::
    Change ticket status by clicking on //{b} Change-status // element.
    Every status change should provide the next status of the ticket and due-date
    to act on the ticket. Note that the user must have //TICKET_STATUS_CHANGE//
    permission, to do this operation.
    The user who is changing the status will become the new owner of the ticket.
: Prompt user ::
    In case a ticket expects a response from a user other than the ticket's owner,
    it can be indicated so using //promptuser// attribute.
: Ticket dependencies ::
    On the ticket page, click //{b}Graph// element to view complete
    dependency graph for that ticket.
    [[ /screenshots/tck_depgraph.png | Example graph ]].
: Ticket task tree ::
    On the ticket page, click //{b}Tree// element to view complete tree of
    parent and children for that ticket.  [[ /screenshots/tck_tasktree.png | Example tree ]]
: Timeline ::
    Click on the {{ Image( '/zetaicons/time.png', 'Timeline' ) }} icon, to
    visit ticket timelines
: Voting ::
    Click on the {{ Image( '/zetaicons/thumbsup_x.png', 'Up-Vote' ) }} icon
    to up-vote a ticket or the
    {{ Image( '/zetaicons/thumbsdown_x.png', 'Down-Vote' ) }} icon to
    down-vote a ticket. User must have //TICKET_VIEW// permission to cast
    their vote.
: Favorite ::
    Click on the favorite
    {{ Image( '/zetaicons/star_selected.png', 'favorite' ) }} icon to select
    or de-select ticket as your favorite. Once selected you will be added to
    the watch-list and will be notified on any updates done to the ticket.
: Attachment ::
    Attach files to ticket, using the attachment-widget. To add new
    attachments, click on the
    {{ Image( '/zetaicons/attach.png', 'attachment' ) }} icon, to remove an
    existing attachment click on the cross-bar super-scripted to the attached
    file.
: Tagging ::
    Tag files to ticket, using the tag-widget. To add new tag, click on the
    {{ Image( '/zetaicons/tag_green.png', 'tag' ) }} icon, to remove an
    existing tag click on the cross-bar super-scripted to the tagname.

{{ Image( '/screenshots/tck_board.png', 'screenshot of ticket board',
          padding="5px", margin="5px 5px 5px 50px" ) }}

=== Permissions

* // TICKET_VIEW //, to view tickets in a project, mark them as favorites and
  up-vote or down-vote them.
* // TICKET_CREATE //, to create a new ticket under project.
* // TICKET_STATUS_CREATE//, to participate in ticket workflow.
* // TICKET_COMMENT_CREATE//, to discuss tickets

[[ /help/pms | more about permission system ]]

=== Searching

All tickets are converted into a document for indexing. All ticket attributes 
and its associated data like //discussions//, //tagname// and //project// it
belongs to, are included in the document. Tickets can be searched project-wise 
or for the entire site.

=== Analytics

Raw data in database is aggregated, analysed and its results are reported in
charts and graphs.


/* vim: set filetype=zwiki : */

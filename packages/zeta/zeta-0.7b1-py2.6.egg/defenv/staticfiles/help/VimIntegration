[< <style type="text/css"> >]
    h1, h2, h3, h4, h5 { 
        margin : 0px;
        padding: 5px 0px 2px 3px;
        background-color : #EAEAFC;
        border-bottom: 1px solid #CCCCCC;
    }
[< </style> >]

[< <style type="text/css"> >]
h1, h2, h3, h4, h5 { 
    margin : 0px;
    padding: 5px 0px 2px 3px;
    background-color : #EAEAFC;
    border-bottom: 1px solid #CCCCCC;
}
[< </style> >]

{{ Toc( float='right' ) }}

h2. VimInterface

Use Vim editor to interface with a zeta site. Download the plugin from
[[ http://www.vim.org/scripts/script.php?script_id=3145 | vim site ]]. The
plugin also contains reference implementation of
[[ /help/XmlRpcApi | XMLRPC API interface ]].
Refer to zetaclient.py in the plugin package.

h2. VimCommands

All commands are available as Vim Ex-commands (commands that are executed
in '':'' mode). Zeta commands for vim are generally classified as,

* profile commands
* wiki commands
* ticket commands
* review commands
* guest-wiki commands

h3. Profiles

Create a profile for each server once, and subsequently use the profile for
connecting and interfacing with it. A profile typically consists of four
fields,
[<PRE 
    name     : <profile-name>
    server   : <server-ip>
    username : <login-user>
    password : <password-for-user>
>]

While inside the vim editor, users can create, list and clear site profiles.
Alternately, users can connect to zeta-site (without creating a profile first)
using the //Zconnect// command

h3. Guest-wiki pages

Once connected to the site, use Zeta-vim Ex commands to list, fetch, create
and update guest-wiki pages. Use //path-url// to identify the page that needs to
be fetched or created.

h3. Project-wiki pages

Set current project or pass the project along with the command to list, fetch,
create and edit project's wiki pages.

h3. Project-ticket pages

Set current project or pass the project along with the command to list, fetch,
create and edit project's tickets.

h2. Complete list of commands


    === Profile commands

    ==== Add a new profile for a zeta site

    > [<PRE Zaddprofile name [ server username password ] >]

    :name     :: profile name
    :server   :: server url, eg: http://sandbox.devwhiz.net/xmlrpc
    :username :: registered user in `server`
    :password :: user password

    


    ==== List all the profiles accessible by this client.

    > [<PRE Zlistprofile >]

    print as list of tuples, like, 
    [< PRE name, server, username, password >]
    


    ==== Clear all the profiles previously created for this client.

    > [<PRE Zclearprofiles >]

    clear all profiles for this client.
    


    ==== Connect with a server (zeta site) using a profile

    > [<PRE Zconnect <name|server> [username] [password] >]

    where,

    :name ::
        profile-name or server-url to connect with. For this to
        work, already a profile must be created either by that profile name or
        for the server url.
    :server & username & password ::
        Alternately connect directly to the `server` using username:password,
        without creating a profile
    


    ==== List member projects

    > [<PRE Zlprojects >]

    List of all project in which user participates.
    


    === Guest-Wiki commands

    ==== List guest wiki pages

    > [<PRE Zlgw >]

    List all guest-wiki pages available under connected site.
    


    ==== Create new guest wiki page

    > [<PRE Znewgw url >]

    Create a new guest wiki page under //url//, must be full path name.
    


    ==== Fetch guest wiki page

    > [<PRE Zfetchgw url >]

    Fetch guest wiki page into vim. Once fetched, its content is available for
    editing.
    


    === Project-Wiki commands

    ==== List project wiki pages

    > [<PRE Zlwiki projectname >]

    List all wiki pages under project //projectname//
    


    ==== Create a wiki page

    > [<PRE Znewwiki <projectname> <pagename> [type] [summary] >]

    : projectname :: Create the wiki page for this //projectname//
    : pagename    :: Wiki page name
    : type        :: Optional wiki page type
    : summary     :: Optional wiki page summary
    


    ==== Fetch project's wiki page

    > [<PRE Zfetchwiki pagename [projectname] >]

    Fetch the contents of wiki page //pagename// for project //projectname//.
    Once fetched and available in vim window, it is available for editing.
    


    === Project-Ticket commands

    ==== List project tickets

    > [<PRE Zlticket [projectname] >]

    List all the tickets (by its id) under project //projectname//.
    


    ==== Create a new ticket

    > [<PRE Znewtck <projectname> <type> <severity> <summary> >]
    
    Create a new ticket for project //projectname//. //type//, //severity//
    and //summary// attributes of the ticket are mandatory.
    


    ==== Fetch a project ticket

    > [<PRE Zfetchtck id [projectname] >]

    Fetch ticket by its //id// for project //projectname//
    


    === Common commands to wiki, ticket and review

    ==== Add tags

    > [<PRE Zatags tagname,tagname,tagname,... >]

    Based on the resource opened in the current window, like a wiki page or ticket,
    the resource will be tagged with tagnames
    


    ==== Delete tags

    > [<PRE Zdtags tagname,tagname,tagname,... >]

    Based on the resource opened in the current window, like a wiki page or ticket,
    tagnames (if present) will be removed from the resource
    


    ==== Vote ticket or wiki page

    > [<PRE Zvote <up|down> >]

    Based on the resource opened in the current window, like a wiki page or ticket,
    up-vote (//up//) or down-vote the resource (//down//)
    


    ==== Favorite wiki page or ticket

    > [<PRE Zfav >]

    Based on the resource opened in the current window, like a wiki page or ticket,
    mark the resource a favorite or remove the resource from your favorite
    list.
    


    ==== Remove Favorite wiki page or ticket

    > [<PRE Znofav >]

    Based on the resource opened in the current window, like a wiki page or ticket,
    mark the resource a favorite or remove the resource from your favorite
    list.
    


    ==== Comments to wiki or ticket page

    > [<PRE Zcmt >]

    Based on the resource opened in the current window, like a wiki page or ticket,
    comment on it.
    
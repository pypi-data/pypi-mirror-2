#
# zeta - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file

[DEFAULT]
debug = false
# Uncomment and replace with the address which should receive any error reports
email_to = support@discoverzeta.com
smtp_server = gmail.com
error_email_from = zeta-error@gmail.com

[server:main]
# To be interpreted by paster server, not for apache deployments
use = egg:Paste#http
host = 127.0.0.1
port = 5000

[pipeline:main]
pipeline = gzip zetapylons

[filter:gzip]
use = egg:Paste#gzip

[app:zetapylons]
# Our normal Pylons [app:main] section
use = egg:zeta
full_stack = false


# --- Following configuration are to be made while setup-time and will always
# --- be interpreted from this file
zeta.envpath       = %(here)s/defenv
zeta.sitelogo      = /sitelogo
zeta.public_dir    =
zeta.template_dir  =
zeta.hdisclaimer   = This is only a demonstration site
cache_dir          = %(here)s/defenv/data
xapian.storepath   = %(here)s/defenv/data/xapian
zeta.zetalink      = http://discoverzeta.com
zeta.zetalogo      = /zeta-110x45.png
zeta.siteadmin     = admin
zeta.timezone      = UTC
zeta.mstnccodes    = %(here)s/defenv/public/mstnccodes.json
zeta.tckccodes     = %(here)s/defenv/public/tckccodes.json
zeta.tckfilters    = %(here)s/defenv/public/tckfilters.pyd

zeta.smtp_serverip =
zeta.smtp_user     =
zeta.smtp_password =
zeta.smtpmysql.url =
zeta.smtpmysql.pool_recycle =
zeta.smtpmysql.echo =
zeta.smtpmysql.encoding =
zeta.smtpmysql.pool_size =
# --- Till here -----


# --- Following configurations will always be interpreted from this file
zeta.pageheader    = True
zeta.sitename      = ZetaDemo
zeta.unicode_encoding = utf-8

zeta.webanalytics  = 

zeta.enabletline   = True
zeta.fasttline     = True
zeta.xapiansearch  = True
# --- Till here -----


# --- The following configurations will be updated into the database,
# --- Only interpreted during setup-time and subsequently updatable via web.
zeta.welcomestring = Demonstration of Zeta Project Management Suite
zeta.specialtags   = download,docs,featured
zeta.projteamtypes = non-members
zeta.ticketseverity= normal
zeta.ticketstatus  = new
zeta.tickettypes   = defect
zeta.ticketresolv  = 
zeta.reviewnatures = 
zeta.reviewactions = 
zeta.vcstypes      = svn,bzr
zeta.wikitypes     = draft
zeta.def_wikitype  = draft
zeta.userrel_types = 
zeta.strictauth    = False
zeta.googlemaps    =
zeta.userpanes     = 
zeta.regrbyinvite  = False
zeta.invitebyall   = False
# --- Till here -----


# --- Beaker specific configuration
beaker.session.data_dir = %(here)s/defenv/data/sessions/data
beaker.session.key = zeta-session
beaker.session.secret = somesecret
beaker.session.cookie_expires = True
# beaker.session.cookie_domain = ""

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.type       = file
#beaker.cache.data_dir   = %(here)s/defenv/data/cache/data
#beaker.cache.lock_dir   = %(here)s/defenv/data/cache/lock
# --- Till here -----


# --- SQLAlchemy specific configuration
# SQLAlchemy database URL
# sqlalchemy.url = sqlite:///%(here)s/databasefile.sqlite
sqlalchemy.url = mysql://zetadev:zetadev#321@localhost:3306/zetadev
sqlalchemy.pool_recycle = 3600
sqlalchemy.echo = False
sqlalchemy.encoding = utf-8
sqlalchemy.pool_size = 5
# --- Till here -----


# --- Authkit specific configuration
authkit.setup.enable = true
authkit.setup.method = form, cookie
authkit.form.authenticate.user.type = zeta.auth.users:UsersFromZetaDB
authkit.form.authenticate.user.data = zeta.model
#authkit.setup.method  = digest
#authkit.digest.authenticate.user.data = user:pass
#authkit.digest.realm = technically_any_random_text
authkit.cookie.secret = secret_string
authkit.cookie.signoutpath = /accounts/signout
authkit.form.template.obj = zeta.lib.view:render_signin
authkit.cookie.badcookie.page = false
#authkit.cookie.params.expires = 10
#authkit.cookie.enforce = True
authkit.cookie.includeip = False
# --- Till here -----


# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
#set debug = false

# Logging configuration
[loggers]
keys = root, routes, zeta, sqlalchemy

[handlers]
keys = console, file

[formatters]
keys = generic

[logger_root]
level = WARNING
#handlers = console
handlers = file

[logger_routes]
level = WARNING
handlers =
qualname = routes.middleware
# "level = DEBUG" logs the route matched and routing variables.

[logger_zeta]
level    = WARNING
handlers =
qualname = zeta

[logger_sqlalchemy]
level    = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

[handler_file]
class = FileHandler
args = ('application.log', 'a')
level = INFO
formatter = generic

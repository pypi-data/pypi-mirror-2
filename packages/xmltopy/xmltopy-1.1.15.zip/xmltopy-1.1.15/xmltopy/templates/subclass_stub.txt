"""
Objects generated from {{ schema_file }} for namespace {{ target_namespace }}

Generated by xsdtopy {{ version }} on {{ timestamp }}
"""

from datetime import datetime
{% for dependency in dependencies %}
import {{ dependency }}
{% endfor %}
import {{ base_classes_module }}_base
from {{ base_classes_module }}_base import {% for class in constant_classes %}{{ class.name }}{% if not loop.last %}, {% endif %}{% endfor %}


{% for class in classes %}
class {{ class.name }}({{ base_classes_module }}_base.{{ class.name }}):
    """
    >>> import pytz
    >>> x = {{ class.name }}()    
{% for member in class.types %}
    >>> x.{{ member.name }} = {{ member.test_assignment }}
{% endfor %}
    >>> from lxml import etree
    >>> from xmltopy.xmlserializer import toxml, fromxml
    >>> etree.tostring(toxml(x)) == etree.tostring(toxml(fromxml(toxml(x), {{ class.name }}())))
    True
    """

    def __init__(self):
        super({{ class.name }}, self).__init__()

{% endfor %}

if __name__ == "__main__":
    import doctest
    doctest.testmod()

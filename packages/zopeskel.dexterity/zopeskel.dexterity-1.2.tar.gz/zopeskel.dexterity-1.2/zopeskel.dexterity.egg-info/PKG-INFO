Metadata-Version: 1.0
Name: zopeskel.dexterity
Version: 1.2
Summary: Paster templates for dexterity
Home-page: http://svn.plone.org/svn/collective/zopeskel.dexterity
Author: Izhar Firdaus
Author-email: izhar@inigo-tech.com
License: GPL
Description: Installation
        ============
        
        Add these lines into buildout::
        
          [buildout]
          parts = 
             paster
          
          [paster]
          recipe = zc.recipe.egg
          eggs = 
             ZopeSkel
             PasteScript
             PasteDeploy
             zopeskel.dexterity
             ${buildout:eggs}
          entry-points = paster=paste.script.command:run
          
        And run the buildout
        
        Usage
        ======
        
        Creating a dexterity product::
        
          /path/to/paster create -t dexterity
        
        Adding a contenttype skeleton::
        
          cd /path/to/product/root
          /path/to/paster addcontent dexterity_content
        
        Adding a behavior skeleton::
        
          cd /path/to/product/root
          /path/to/paster addcontent dexterity_behavior
        
        Adding a view::
        
          cd /path/to/product/root
          /path/to/paster addcontent dexterity_view
        
        Adding a field to the content type schema::
        
          cd /path/to/product/root
          /path/to/paster addcontent dexterity_content_field
          
        Adding a field to a behavior schema::
        
          cd /path/to/product/root
          /path/to/paster addcontent dexterity_behavior_field
         
        Note
        ====
        
        If you hit and error like this::
        
          pkg_resources.DistributionNotFound: plone.app.relationfield: Not Found for: my.product (did you run python setup.py develop?) 
        
        when attempting to run `paster addcontent`, then you need to ensure that
        Paster knows about all the relevant eggs from your buildout.
        
        Add `${instance:eggs}` to your `paster` section in your buildout, thusly::
        
          [paster]
          recipe = zc.recipe.egg
          eggs = 
             ...
             ${instance:eggs}
          entry-points = paster=paste.script.command:run
          
        where `instance` is the name of your ``plone.recipe.zope2instance`` section.
        Re-run the buildout and the issue should be resolved.
        
        Changelog
        =========
        
        1.1b2 ~ 2010-11-23
        ------------------
        
        * Fixed identation in the module generated by dexterity_behavior local
          command. It was using 3 spaces indet insted of 4 spaces.
          [esartor]
        * Added import for the i18n message factory to the dexterity_behavior local
          command.
          [esartor]
        
        
        1.1b1 ~ 2010-06-21
        ------------------
        
        * Correcting date type fields to use schema.Date rather than schema.Datetime.
          Using Datetime caused an incorrect widget being used, leading to
          issues in KSS validation and not being able to save content.
          [davidjb]
        * Updating collective.z3cform.datetimewidget widgets locations.  The old 
          locations are now deprecated.
          [davidjb]
        * Wrapped Dexterity content title/description fields in MessageFactory call
          [davidjb]
        * Added note about Paster and potentially missing eggs to readme
          [davidjb]
        
        1.1a1
        -----
        
        * added ability to add fields to the content type and behavior schema
          [vangheem]
        
        * moved to zopeskel.dexterity package from collective.dexteritypaste
          [vangheem]
          
        1.0a1dev
        --------
        
        - Initial release
        
Keywords: plone dexterity
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: Framework :: Plone
Classifier: Framework :: Zope3
Classifier: Topic :: Software Development :: Libraries :: Python Modules

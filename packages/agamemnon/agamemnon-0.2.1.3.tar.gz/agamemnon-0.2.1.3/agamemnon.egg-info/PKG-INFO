Metadata-Version: 1.0
Name: agamemnon
Version: 0.2.1.3
Summary: A graph database built on top of cassandra
Home-page: https://github.com/turtlebender/agamemnon
Author: Tom Howe
Author-email: trhowe@ci.uchicago.edu
License: LICENSE.txt
Description: ==============
        Agamemnon
        ==============
        
        Agamemnon is a thin library built on top of pycassa.  It allows you to use the Cassandra database (<http://cassandra.apache.org>) as a graph database.  Much of the api was inspired by the excellent neo4j.py project (<http://components.neo4j.org/neo4j.py/snapshot/>)
        
        Documentation
        ==============
        Soon, I promise.  For now, take a look at agamemnon.functional_tests  This is a fairly complete example of basic behaviors.  The unit tests are very "unit test-y" and might not be a great way to understand how to work with the library.  They mostly focus on making sure that the correct information is being sent to Cassandra.  But the functional tests are designed to actually interact with cassandra.  Note, the functional tests require a instance of Cassandra running at localhost:9160
        
        Thanks To
        =============
        This project is an extension of the globusonline.org project and is being used to power the upcoming version of globusonline.org.  I'd like to thank Ian Foster and Steve Tuecke for leading that project, and all of the members of the cloud services team for participating in this effort, especially: Vijay Anand, Kyle Chard, Martin Feller and Mike Russell for helping with design and testing.  I'd also like to thank Bryce Allen for his help with some of the python learning curve.
        
        
        0.2.1.3
        ==============
        
        * fixed bug with in memory column comparisons
        
        0.2.1.2
        ==============
        
        * fixing bug with root reference node, adding support for unicode serialization and bumping version num
        
        
        0.2.1.1
        ==============
        
        * adding method to get all relationships regardless of type
        
        * removing generated doc files and updating index.rst
        
        * adding doctest to usage documentation and setup.cfg
        
        * updating setup files with requirements
        
        * multiple fixes for issues discovered by globusonline
        
        
        0.2.1.0
        ==============
        
        * added support for contains operator (with relationships_with(other_node_key) function) and added type conversion for pr
        
        * merging relationship code from globusonline
        
        
        0.0.1.3
        ==============
        
        * Updating datastore.save_node so that it no longer uses batch storage
        
Keywords: cassandra
Platform: UNKNOWN
Classifier: Programming Language :: Python

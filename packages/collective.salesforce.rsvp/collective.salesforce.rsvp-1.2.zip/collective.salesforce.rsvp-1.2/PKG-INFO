Metadata-Version: 1.0
Name: collective.salesforce.rsvp
Version: 1.2
Summary: RSVP/Event registration system integrating the Plone content management system with       the Salesforce.com customer relationship management system.
Home-page: http://groups.google.com/group/plonesf
Author: David Glick, Groundwire
Author-email: davidglick@groundwire.org
License: GPL
Description: RSVP for Salesforce
        ===================
        
        Product home is
        http://plone.org/products/collective.salesforce.rsvp
        
        A `documentation area`_ and `issue
        tracker`_ are available at
        the linked locations.
        
        .. _documentation area: http://plone.org/documentation/manual/integrating-plone-with-salesforce.com
        .. _issue tracker: http://plone.org/products/collective.salesforce.rsvp/issues
        
        A Google Group, called `Plone Salesforce Integration`_ exists with the sole aim
        of discussing and developing tools to make Plone integrate well with
        Salesforce.com. If you have a question, joining this group and posting to the
        mailing list is the likely best way to get support.
        
        .. _Plone Salesforce Integration: http://groups.google.com/group/plonesf
        
        Failing that, please try using the Plone users' mailing list or the #plone irc
        channel for support requests. If you are unable to get your questions answered
        there, or are interested in helping develop the product, see the credits below
        for individuals you might contact.
        
        Overview
        ========
        
        Using Plone's Archetypes system and archetypes.schemaextender, the RSVP for
        Salesforce add-on product enables a mechanism for "marking" pieces of content
        as eligible to accept RSVPs (i.e. registrations) from site visitors. The act of
        "marking" content extends the existing piece of content with several additional
        fields for custom RSVP behaviors.
        
        However, this is not a generic RSVP/registration system, but as the name
        suggests, is optimized to work with the Salesforce.com Customer Relationship
        Management system, which is a generic system that can be used to manage Leads,
        Contacts, Campaigns, and Events. By default, registrants are stored as Lead
        objects with an associated CampaignMember object serving as the "junction"
        between an organization's configured "Campaign" and those interested in
        participating. This can be useful in cases of in person and/or virtual events
        (i.e. a training, a conference, a political rally, etc.) and online campaigns
        allowing participant sign-on (signature drives, pledge drives, etc.). The
        default behavior of creating a Lead and CampaignMember associated with the
        configured Campaign can be fully customized with the optional add-on Plone
        products PloneFormGen (and dependencies) and Salesforce PFG Adapter.
        
        Features of RSVP for Salesforce include:
        
        - Complete integration with the robust and powerful CRM system
        Salesforce.com
        
        - Ability to mark and configure any Archetypes content object as RSVP-aware
        
        - Default registration form requiring minimal attendee information and
        completely free of complex configuration demands.
        
        - Optional maximum capacity for RSVP-enabled activities
        
        - Optional acceptance of "waitlist" registrations in the event of
        cancellations
        
        - Optional expiration date for the automatic disabling of RSVP
        
        - Ability to model "first come first served" or "apply for acceptance after
        further consideration" type events.  This can be done by setting the
        default signup "status" from within Salesforce.com for the RSVP-enabled
        event (i.e. the status for a newly created CampaignMember could be "sent",
        "applied", "responded", etc. depending upon how event attendance is
        modeled in each case.
        
        - Optional Add-on Capability: Using PloneFormGen with Salesforce PFG Adapter
        create enhanced and completely customizable registration forms requesting
        and/or requiring arbitrary sign-up data that can be mapped to arbitrary
        Salesforce.com objects.  The referring "RSVP" accepting Salesforce.com
        object id is passed to the custom form for appropriate association.
        
        
        What this isn't...
        ==================
        ... and may or may not ever be:
        
        - A general, feature complete ticketing, online registration system.  This is
        simple and optimized to integrate well with Salesforce.com and is optimized
        towards events with a flexible amount of capacity. While one can certainly
        use this to lock down capacity a bit more tightly, the burden is upon a
        correct configuration of the capacity related fields.
        
        - A system for accepting online payment to secure event attendance -- though
        we're placing bets internally on how long it will be until this feature is
        requested.
        
        - A fail safe system for absolutely capping attendance at a hard capacity.
        Because a greater than max capacity # of participants could load a custom
        PloneFormGen-based registration form (or the default registration form for
        that matter) that suggests available capacity, we advise you to set
        expectations appropriately during the signup process and via any
        auto-response emails that are sent.  In other words, text like the
        following goes a long way towards expectation management: "Thanks for
        expressing your interest in attending our event. A follow-up email will be
        sent within 24 hours confirming your space for the event."
        
        
        DEPENDENCIES
        ============
        
        RSVP for Salesforce requires Plone 3.0 or greater.
        
        The following dependencies should be pulled in automatically when you install
        the egg:
        
        * beatbox >= 0.9.1.1
        * Products.salesforcebaseconnector >= 1.0
        * archetypes.schemaextender
        
        If you want to use custom PloneFormGen-based registration forms, then you must
        have PloneFormGen >= 1.5b2.
        
        CONFIGURATION TIPS
        ==================
        
        Q: But I only want content type X or Y (i.e. Event objects) to be configured as RSVP-aware...
        A: To limit which content types the user can easily configure as RSVP-aware, the
        condition_expr for the "allowRSVPs" and "disableRSVPs" actions, could be changed to something
        like (replace 'Event' with the name(s) of your preferred content type below)::
        
        condition_expr="python:not object.restrictedTraverse('@@rsvp-configuration').isRSVPEnabled() and object.portal_type in ('Event',) "
        
        
        Q: How can I customize the registration form and messages?
        A: You can configure a PloneFormGen form as a custom registration form.  In this case RSVP for
        Salesforce displays the form and checks for whether capacity has been reached, but does not
        actually handle the management of records in Salesforce.com.  To achieve that with a custom
        registration form, use the Salesforce PFG Adapter (Products.salesforcepfgadapter).  In a typical
        use case, you might use two PFG adapters to create a Contact and a CampaignMember object linking
        that contact to a particular campaign.
        
        Note: This requires PloneFormGen >= 1.5b2.
        
        RSVP for Salesforce will pass the configured Salesforce object (typically a Campaign) to the form
        in the 'signup-object-id' variable of the request, so that it is possible to optionally use the
        same registration form to register people for multiple campaigns.  For instance, you might create
        a 'CampaignID' string field in the PloneFormGen form with the server-side only flag set (so that
        the field doesn't render) and with a default value override like
        python:request.get('signup-object-id', ''), and map this field to the Salesforce CampaignID field
        via the salesforcepfgadapter edit screen.
        
        If you need to modify the messages regarding waitlist status and successful registration,
        the best approach is to override the rsvp.register viewlet on a theme-specific browser layer.
        The ZMCL to do so might look something like this::
        
        <browser:viewlet
        name="rsvp.register"
        for="collective.salesforce.rsvp.interfaces.ISalesforceRSVPable"
        manager="plone.app.layout.viewlets.interfaces.IBelowContentBody"
        class="collective.salesforce.rsvp.registration.RegistrationViewlet"
        template="path/to/my_custom_template.pt"
        allowed_interface="collective.salesforce.rsvp.interfaces.IRegistrationViewlet"
        permission="zope2.View"
        layer="myproduct.interfaces.IThemeSpecific"
        />
        
        where my_custom_template.pt would be a modified copy of browser/templates/registration-viewlet.pt
        from this package.
        
        Credits
        =======
        The Plone & Salesforce crew in Seattle and Portland:
        
        - Jon Baldivieso <jonb --AT-- onenw --DOT-- org>
        - Andrew Burkhalter <andrewburkhalter --AT-- gmail --DOT-- com>
        - Brian Gershon <briang --AT-- webcollective --DOT-- coop>
        - David Glick <davidglick --AT-- onenw --DOT-- org>
        - Jesse Snyder <jesses --AT-- npowerseattle --DOT-- org>
        
        Salesforce.com Foundation and Enfold Systems for their gift and work on beatbox
        and the original proof of concept code that has become Salesforce Auth Plugin (see:
        http://gokubi.com/archives/onenorthwest-gets-grant-from-salesforcecom-to-integrate-with-plone)
        
        CHANGELOG
        =========
        
        collective.salesforce.rsvp - 1.2 (2010-06-01)
        
        - Keep the custom registration form reference when RSVPable items are
        copied.  Fixes
        http://plone.org/products/collective.salesforce.rsvp/issues/11.
        Thanks to Steve Allgood.
        [davisagli]
        
        - Cache the types and fields lookups to Salesforce.  This improves speed at
        the cost of needing to restart Zope if you add/remove fields or types in
        Salesforce.
        [davisagli]
        
        - Don't include the friendly label for Salesforce object types; it requires
        calling describeSObjects which takes forever to run.
        [davisagli]
        
        collective.salesforce.rsvp - 1.2b1 (2009-09-08)
        
        - Updated salesforcebaseconnector query calls to use the new syntax
        where a full SOQL query is specified.  Beatbox 16.0dev or greater
        is now required.
        [davisagli]
        
        collective.salesforce.rsvp - 1.1 (2009-08-13)
        
        - Include the form prologue and epilogue in the registration viewlet
        when using a custom PloneFormGen form.
        [davisagli]
        
        - Make sure the schema extender fields don't show up in base_view.
        [davisagli]
        
        - Fixed a test to work with v16 of the Salesforce API, which is stricter
        about ID field format.
        [davisagli]
        
        collective.salesforce.rsvp - 1.0 (2009-01-13)
        
        - Updated salesforcebaseconnector dependency to v1.0 final.
        [davisagli]
        
        - Show both the id and label for Salesforce objects and fields.
        [davisagli]
        
        - Refactored to wrap the form rendering in the capacity check regardless of
        which type of form is being used.
        [davisagli]
        
        - Take advantage of new embedded forms support in PloneFormGen when rendering a
        custom registration form.  This requires PloneFormGen >= 1.5b2.
        [davisagli]
        
        - Refactored the registration form viewlet and default registration form to be
        rendered in a much saner fashion.
        [davisagli]
        
        - Add i18n message ids.
        [davisagli]
        
        - Make the "limit registration capacity" field actually have an effect rather than
        just controlling display of other form fields.  This helps in the edge case where
        the user clicks this to turn capacity off, but the hidden fields are still selected.
        [davisagli]
        
        - Make the "enable custom registration form" actually have an effect rather than
        just controlling display of another form field.  This helps workaround the issue
        with not being able to un-reference an item with the ATReferenceBrowserWidget.
        [davisagli]
        
        
        collective.salesforce.rsvp - 1.0a4
        
        - Fix for kss configuration issue within Plone 3.0.x. See:
        http://plone.org/products/collective.salesforce.rsvp/issues/1 [andrewb]
        
        - provide zcml declarations for all registration-based browser:page templates, this
        allows for standard customization via layers for others using this product,
        traverse to browser pages, so that layers are accounted for [andrewb]
        
        collective.salesforce.rsvp - 1.0a3
        
        - Fixing kss configuration tests and uninstallation tests, so that we can better claim support
        for Plone 3.1.x along with 3.0.x [andrewb]
        
        - Package branding changed to 'RSVP for Salesforce' [andrewb, thanks jonstahl]
        
        collective.salesforce.rsvp - 1.0a2
        
        - Cleanup of some problematic RST formatting pulled into the long desc on PyPI [andrewb]
        
        collective.salesforce.rsvp - 1.0a1
        
        - Initial experimental release of RSVP for Salesforce feature allowing for
        Plone content objects to be tied to "registerable" Salesforce.com objects [andrewb]
        
        
        RUNNING TESTS
        =============
        It is strongly recommended that you run your tests
        against a free developer account, rather than a real
        production Salesforce.com instance. ... With that said,
        to run the tests for Salesforce Auth Plugin do the following:
        
        =======================================
        Configure your Salesforce.com instance:
        =======================================
        In order to successfully run all of the automated unit tests,
        some modifications need to happen within your Salesforce.com
        instance.
        
        In many of the tests, a dummy campaign within your Salesforce.com
        instance is created.  In a few cases, we test the logic for presentation
        of the registration/waitlist signup/registration closed options for the
        RSVP-enabled content object.  This assumes that the following fields have
        been added to the "Campaign" object via Setup --> Customize --> Campaigns
        --> Fields --> "New" button under "Campaign Custom Fields & Relationships"::
        
        Field Label         Field Name          Field Type    Field Description
        
        -----------         ----------          ----------    -----------------
        
        Allow Waitlists?    Allow_Waitlists     Checkbox      Will you accept waitlist
        registrations for this campaign?
        Only required if you plan to enable
        RSVPs in a capacity limited way
        via your website.
        
        Max Capacity        Max_Capacity         Number(18, 0)
        
        
        Note: You can accept the defaults for the other field attributes.
        
        =====
        Read:
        =====
        
        Running Tests --> "To run tests in a unix-like environment" from
        `SalesforceBaseConnector`_, which is a dependency, so you should have it :)
        
        .. _SalesforceBaseConnector: http://plone.org/products/salesforcebaseconnector
        
        =================
        Do the following:
        =================
        Rather than running the test suite for salesforcebaseconnector
        do the following:
        
        $INSTANCE/bin/zopectl test -s collective.salesforce.rsvp
        
        =======================
        FAQ about running tests
        =======================
        If you have trouble running tests, consult "FAQ about running tests" from
        SalesforceBaseConnector.
        
        
        DOWNLOAD
        ========
        
Keywords: Zope CMF Plone Salesforce.com CRM registration
Platform: UNKNOWN
Classifier: Framework :: Plone
Classifier: Framework :: Zope2
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Development Status :: 5 - Production/Stable

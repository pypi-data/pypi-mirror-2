Metadata-Version: 1.0
Name: collective.amberjack.core
Version: 1.1
Summary: The Amberjack layer
Home-page: http://pypi.python.org/pypi/collective.amberjack.core
Author: Massimo Azzolini and contributors
Author-email: collective.amberjack.support@lists.coactivate.org
License: GPL
Description: collective.amberjack.core
        -------------------------
        
        This package provides core functionality for collective.amberjack package.
        
        Be aware that series 0.9.x is compatible with Plone3, series 1.x is compatible
        with Plone4.
        
        Useful links
        ============
        
        - project wiki, info: http://www.coactivate.org/projects/collectiveamberjack
        - pypi: http://pypi.python.org/pypi/collective.amberjack.core
        - Plone: http://plone.org/products/collective.amberjack.core
        - issue tracker: https://bugs.launchpad.net/collective.amberjack
        - svn repository: http://svn.plone.org/svn/collective/collective.amberjack.core
        
        
        How to create new tour
        ======================
        
        First of all you need to define the tour. Starting version 1.1 we are using
        configuration based style.
        
        A tour is a .cfg file. It has an ``amberjack`` main section which
        has two options: ``title`` and ``steps`` - this is where you define tour steps::
        
            [amberjack]
            steps = 
                my_step1
                my_step2
            title = My first amberjack tour
        
        there are also available two blueprints:
        1. Step
        a ``step`` section is defined by ``collective.amberjack.blueprints.step`` and
        has several options: 
        
          * ``title``
          * ``text``
          * ``url`` - step url definition
          * ``xpath`` - xpath selector
          * ``xcontent`` - xcontent selector
          * ``microsteps`` - microsteps sections
          * ``validators`` - tales expression validation
        
        it looks like that::
        
            [my_step1]
            blueprint = collective.amberjack.blueprints.step
            title = This is my first Step
            text = You should now know how to create a step section
            url = /mystep
            validators =
                python: context.isFolderish()
            xpath = ''
            xcontent = ''
            microsteps = 
                microstep_1
                microstep_2
        
        2. Microstep
        a ``microstep`` section is defined by ``collective.amberjack.blueprints.microsteps`` 
        and it has several options:
        
          * ``idstep``
          * ``text``
          * ``description``
          * ``selector``
        
        it looks like that::
        
            [microstep_1]
            blueprint = collective.amberjack.blueprints.microstep
            idstep = menu_state
            text = This is my dummy microstep
            description = Now you should now how to define microsteps
            selector = #insert
        
        
        Tour registration
        =================
        
        Finally you have to register it. The only acceptable format is an archive 
        (zip or tar) which contains one or multiple .cfg files (tours)
        Using zcml::
        
            <configure 
                xmlns:collective.amberjack="http://namespaces.plone.org/collective.amberjack.core">
                <collective.amberjack:tour
                    tourlocation="mytourpackage.zip"
                />
            </configure>
        
        Changelog
        =========
        
        1.1 (2010-11-05)
        -----------------
        
        - moved the check procedure to identify the next tour from the portlet into viewlet
          [mirco]
        - updated the canMoveToNextStep function that now stop the passage to next step if 
          there is an error message.
          [mirco]
        - modified AJ alert message: now the user can choise to restart the tour or close the tour
          [mirco]
        - bugfix for align the phrase "next tour"
          [mirco]
        - changed in #CCC the css color directive for ".contentActions a.aj_link_inactive"
          [mirco]
        - inverted in the code the parts to load key and value from dictionaries of selectors
          [mirco]
        - added a check for the micro-steps of type "highlight" to use in the render of "doAllStep" button.
          [mirco]
        - changed from function trim()  to function jQuery.trim().
          [mirco]
        - added sunburst theme and fixed some problems in tour's template
          [nekorin]
        - fix translations
          [amleczko]
        - Messages in control panel and validators can be translated
          [sylvainb]
        - Sync pot/po files and add french translations
          [sylvainb]
        - amberjackDefaults.js must not be cacheable because of some messages depend on the user's language.
          [sylvainb]
        - Allow translations for the alert message when the user clics on other links.
          [sylvainb]
        - added a js to manage the "next tours" cookie when it's used the "next tour" link of the aj popup.
          [mirco]
        - IE bugfix into javascripts file.
          [mirco]
        - translation can be now in language folders
          [amleczko]
        
        1.1a (2010-09-21)
        -----------------
        
        - font-size at 80%
          [massimo]
        - fixing next tour link in viewlets
          [mirco]
        - fixing doAllStep
          [mirco]
        - update the checkStep and checkAllStep
          [mirco]
        - updated dependency with collective.js.jqueryui
          [mirco]
        - removed ui.draggable-1.7.2 file and the registration from jsregistry
          [mirco]
        - add dependency whit collective.amberjack.portlet
          [mirco]
        - Inserted 'checkPreviousSteps' function to control if the previous micro-steps are done
          [mirco]
        - added .metadata files for image inside the skins
          [keul]
        - javascript resources were all not cachable/coockable
          [keul]
        - added stepAdapters.js, reducing the complexity of doStep and highlightStep methods
          [keul]
        - show label element in the correct way #572464
          [fdelia]
        - change the way to hide actions of micro-steps when they haven't an idStep
          [mirco]
        - layout calendar select #580573
          [fdelia]
        - rely on jQuery UI for performing alert if available (close #572239)
          [keul, fdelia]
        - new tour syntax with registration and config parser
          [amleczko]
        - move old stuff to depracated folder
          [amleczko]
        - implemented the sandbox
          [mirco]
        - add hasRole validation and remove too specific ones
          [amleczko]
        - implemented validation and precondition
          [mirco]
        - remove depracated module - update tests
          [amleczko]
        - we have changed the action of button "Next"(>>) that now perform all the 
          micro-steps of the step.
          [mirco]
        - changed the alert messages: substituted the number of the tour with the description
          of the tour.
          [mirco]
        - implemented the check for the required fields of Plone, if the required fields are 
          empty the user can't pass to the next step.
          [mirco]
        - fix problem with zcml registration
          [amleczko]
        
        1.0 (2010-05-17)
        ----------------
        
        - compatibility with plone4
          [amleczko]
        - add control and functionality to manage text in kupu and tiny for step 'form_text'
          [mirco]
        - add some 'ajStandardSteps' to use the TinyMCE's buttons
          [mirco]
        - inserted some changes into the js to make click on the buttons of TinyMCE
          [mirco]
        - inserted some changes into the js to do actions in the iframe
          [mirco]
        - changes to fix the operation of the highlights
          [mirco]
        - commented the previous button of tours
          [mirco]
        - minor Javascript refactoring
          [keul]
        
        0.9 (2010-04-30)
        ----------------
        
        - Change version to 0.9 (plone3 release series)
          [amleczko]
        - Renamed validation to validators now a list of validators.
          Renamed isVisible to validate.
          Now show a warning box for each error message.
          [vincentfretin]
        - Internationalize the "of" separator but the javascript is cached once it's generated so the translation is the first language seen on the portal after a restart.
          [vincentfretin]
        - Internationalize the expected text of a step.
          [vincentfretin]
        - Don't disable button input textarea select. The user needs to fill out
          the "remaining fields" and upload an image for example.
          [vincentfretin]
        - Rename IManageTourUtility to ITourManager.
          [vincentfretin]
        - Add url to next tour at the end of a tour.
          [vincentfretin]
        - Add basic step validations: isAnonymous and isAuthenticated.
          [amleczko]
        - Refactor tour and step: add proper Interface schema for Tour and Step.
          Add validation checkings write some coverage tests for that.
          [fdelia; amleczko]
        - Add doctests for meta registration.
          [fdelia; amleczko]
        - Add unittests for tour_manager.
          [fdelia; amleczko]
        
        Contributors
        ============
        
        * Massimo Azzolini [massimo_azzolini]
        * Vincent Fretin [vincentfretin]
        * Luca Fabbri [keul]
        * Federica D'Elia [fdelia]
        * Mirco Angelini [mirco]
        * Andrew Mleczko [amleczko]
        * Giacomo Spettoli [giacomos]
        * Simone Orsi [simahawk]
        * Jacopo Deyla
        * Regione Emilia-Romagna
        * Aaron VanDerlip [aaronv]
        * Michael Davis [millie]
        * Irene Capatti [nekorin]
        * Giorgio Borelli [gborelli]
        * Andrea Benetti [DkAndrea]
        * Sylvain Boureliou [sylvainb]
        
        Amberjack library
        -----------------
        * Arash Yalpani [http://amberjack.org/]
        
        Translations
        ------------
        
        * Slovenian translation started by Domen Kozar
        * Italian translation started by Stefano Marchetti [stemrc]
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Framework :: Plone
Classifier: Framework :: Zope2
Classifier: License :: OSI Approved :: GNU General Public License (GPL)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules

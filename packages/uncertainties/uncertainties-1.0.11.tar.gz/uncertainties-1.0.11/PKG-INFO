Metadata-Version: 1.0
Name: uncertainties
Version: 1.0.11
Summary: Transparent calculations with uncertainties on the quantities involved (aka "error propagation") ; calculation of derivatives
Home-page: UNKNOWN
Author: Eric O. LEBIGOT (EOL)
Author-email: eric.lebigot@normalesup.org
License: This software is released under a dual license.  (1) The GNU General Public License version 2.  (2) Any other license, as long as it is obtained from the original author.
Description: ``uncertainties`` allows calculation such as (0.2 +- 0.01)**2 = 0.04 +- 0.004
        to be performed transparently.
        
        **Correlations** between expressions are correctly taken into account 
        (``x-x`` is exactly zero, for instance).
        
        Basic examples::
        
            import uncertainties
            from math import *  # Must be done *after* importing uncertainties
        
            # Mathematical operations:
            x = uncertainties.Number_with_uncert((0.20, 0.01))  # x = 0.20+-0.01
            x = uncertainties.Number_with_uncert("0.20(1)")  # Other representation
            print x**2  # Prints "0.04+-0.004"
            print sin(x**2)  # Prints "0.0399...+-0.00399..."
        
            print x.position_in_sigmas(0.17)  # Print "-3.0": deviation of -3 sigmas
        
            # Access to the nominal value, and to the uncertainty:
            s = x**2  # Square
            print s  # Prints "0.04+-0.004"  
            print s.nominal_value  # Prints "0.04"
            print s.std_dev()  # Prints "0.004..."
        
            print s.derivatives[x]  # Partial derivative: prints "0.4" (= 2*0.20)
        
            print s - x*x  # Exactly zero: correlations taken into account
        
        The Python_ (or IPython_) shell can thus be used as a powerful calculator 
        that handles quantities with uncertainties (``print`` statements are 
        optional, and all mathematical functions can be imported with ``from 
        math import *`` *after* importing this module with ``import uncertainties``).
        
        **Almost all mathematical operations** are supported, including most 
        functions from the standard math_ module and functions from the 
        third-party numpy_ module (fast operations on arrays and matrices).  
        There is no restriction on the complexity of the expressions, or on the 
        number of variables involved.
        
        Another possible use of this module is the calculation of **partial 
        derivatives** of mathematical functions.
        
        More examples and additional information can be obtained with ``pydoc 
        uncertainties`` after installation.
        
        Please send feature requests, bug reports, or feedback to the author.
        
        *Installation*: ``sudo easy_install uncertainties`` might work for you 
        (this does not require any manual download). For additional installation 
        methods, see ``README.txt`` in the provided file.
        
        *Version history* (main changes only):
        
        - 1.0.11: ``origin_value`` was renamed more appropriately as           ``nominal_value``.
        - 1.0.9: ``correlations()`` was renamed more appropriately as          ``covariance_matrix()``.
        
        .. _Python: http://docs.python.org/tutorial/interpreter.html
        .. _IPython: http://ipython.scipy.org/
        .. _numpy: http://numpy.scipy.org/
        .. _math: http://docs.python.org/library/math.html
        
Keywords: error propagation,uncertainties,uncertainty calculations,standard deviation,derivatives,partial derivatives,differentiation
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Other Audience
Classifier: Intended Audience :: Science/Research
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.5
Classifier: Programming Language :: Python :: 2.6
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities

Metadata-Version: 1.0
Name: nose-cov
Version: 1.1
Summary: nose plugin for coverage reporting
Home-page: http://bitbucket.org/memedough/nose-cov/overview
Author: Meme Dough
Author-email: memedough@gmail.com
License: MIT License
Description: nose-cov
        ========
        
        This plugin produces coverage reports.  It also supports coverage of subprocesses.
        
        All features offered by the coverage package should be available, either through nose-cov or
        through coverage's config file.
        
        
        Installation
        ------------
        
        The `nose-cov`_ package may be installed with pip or easy_install::
        
            pip install nose-cov
            easy_install nose-cov
        
        .. _`nose-cov`: http://pypi.python.org/pypi/nose-cov/
        
        
        Uninstallation
        --------------
        
        Uninstalling packages is supported by pip::
        
            pip uninstall nose-cov
        
        However easy_install does not provide an uninstall facility.
        
        .. IMPORTANT::
        
            Ensure that you manually delete the init_cov_core.pth file in your site-packages directory.
        
            This file starts coverage collection of subprocesses if appropriate during site initialisation
            at python startup.
        
        
        Usage
        -----
        
        The following will report on the combined coverage of the main process and all of it's subprocesses::
        
            nosetests --with-cov --cov myproj tests/
        
        Shows a terminal report::
        
            ---------- coverage: platform linux2, python 2.6.5-final-0 -----------
            Name                 Stmts   Exec  Cover
            ----------------------------------------
            myproj/__init__          2      2   100%
            myproj/myproj          257    244    94%
            myproj/feature4286      94     85    90%
            ----------------------------------------
            TOTAL                  353    331    93%
            ----------------------------------------------------------------------
        
        
        Reporting
        ---------
        
        It is possible to generate any combination of the reports for a single test run.
        
        The available reports are terminal (with or without missing line numbers shown), HTML, XML and
        annotated source code.
        
        The terminal report without line numbers (default)::
        
            nosetests --with-cov --cov-report term --cov myproj tests/
        
            ---------- coverage: platform linux2, python 2.6.5-final-0 -----------
            Name                 Stmts   Exec  Cover
            ----------------------------------------
            myproj/__init__          2      2   100%
            myproj/myproj          257    244    94%
            myproj/feature4286      94     85    90%
            ----------------------------------------
            TOTAL                  353    331    93%
            ----------------------------------------------------------------------
        
        
        The terminal report with line numbers::
        
            nosetests --with-cov --cov-report term-missing --cov myproj tests/
        
            ---------- coverage: platform linux2, python 2.6.5-final-0 -----------
            Name                 Stmts   Exec  Cover   Missing
            --------------------------------------------------
            myproj/__init__          2      2   100%
            myproj/myproj          257    244    94%   24-26, 99, 149, 233-236, 297-298, 369-370
            myproj/feature4286      94     85    90%   37, 40, 183-188, 197
            --------------------------------------------------
            TOTAL                  353    331    93%
            ----------------------------------------------------------------------
        
        
        The remaining three reports output to files without showing anything on the terminal (useful for
        when the output is going to a continuous integration server)::
        
            nosetests --with-cov
                      --cov-report html
                      --cov-report xml
                      --cov-report annotate
                      --cov myproj tests/
        
        
        Coverage Data File
        ------------------
        
        The data file is erased at the beginning of testing to ensure clean data for each test run.
        
        The data file is left at the end of testing so that it is possible to use normal coverage tools to
        examine it.
        
        
        Limitations
        -----------
        
        For subprocess measurement environment variables must make it from the main process to the
        subprocess.  The python used by the subprocess must have nose-cov installed.  The subprocess must
        do normal site initialisation so that the environment variables can be detected and coverage
        started.
        
        
        Acknowledgements
        ----------------
        
        Whilst this plugin has been built fresh from the ground up it has been influenced by the work done
        on pytest-coverage (Ross Lawley, James Mills, Holger Krekel) and nose-cover (Jason Pellerin) which are
        other coverage plugins.
        
        Ned Batchelder for coverage and its ability to combine the coverage results of parallel runs.
        
        Holger Krekel for pytest with its distributed testing support.
        
        Jason Pellerin for nose.
        
        Michael Foord for unittest2.
        
        No doubt others have contributed to these tools as well.
Keywords: nose nosetest cover coverage
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.4
Classifier: Programming Language :: Python :: 2.5
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.0
Classifier: Programming Language :: Python :: 3.1
Classifier: Topic :: Software Development :: Testing

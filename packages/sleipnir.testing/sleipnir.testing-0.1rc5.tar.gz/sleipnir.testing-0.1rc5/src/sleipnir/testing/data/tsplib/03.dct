# -*- mode: python; coding: utf-8 -*-
# tsp comment

# comment 1. Should go to TSP Headers

EOF

# foo content
FOO_SECTION:   
# line 1
11, 12, 13
# line 2
21, 22, 23
31, 32, 33
EOF
# All from here is ignored

 >>> mro = unmarshal.create(tsp_filter, 1)[0]
 >>> tsp = mro.load(__file__) or None
 >>> assert len(tsp) == 4 # count first comment

# verify there are 2 comments and 1 section
  >>> assert len(tsp.comments) == 3
  >>> assert len(tsp.sections) == 0
  >>> assert len(tsp.contents) == 1

# verify section only contains header elements
 >>> assert not hasattr(tsp.foo, 'section')
 >>> assert hasattr(tsp.foo, 'content')

# verify section contents
 >>> assert tsp.contents.foo.name  == 'FOO'
 >>> assert tsp.contents.foo.value == 'FOO_SECTION'
 >>> assert len(tsp.contents.foo.comments) == 1
 >>> assert tsp.foo.content.values[0](str) == '11, 12, 13'
 >>> assert len(tsp.foo.content.values[0]) == 1
 >>> assert len(tsp.foo.content.values[0].comments) == 1

# Unmarshal tests
 >>> uro = marshal.create(tsp_filter, 1)[0]
 >>> out = uro.dump(tsp)
 >>> assert mro.load(out) == tsp

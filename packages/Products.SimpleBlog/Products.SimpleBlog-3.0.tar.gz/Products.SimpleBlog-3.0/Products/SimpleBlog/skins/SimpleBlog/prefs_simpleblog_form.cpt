<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      lang="en"
      metal:use-macro="here/prefs_main_template/macros/master"
      i18n:domain="SimpleBlog">

  <metal:block fill-slot="top_slot"
             tal:define="dummy python:request.set('disable_border',1)" />

<body>

<div metal:fill-slot="prefs_configlet_main"
     tal:define="errors python:request.get('errors', {})">
    <h1>SimpleBlog Setup</h1>

    <p>
    Portal-wide settings.
    </p>

    <form name="simpleblogForm" method="post" 
		name="pref_simpleblog_set" 
		tal:define="errors options/state/getErrors;props python:here.portal_properties;"
		tal:attributes="action template/id">
        <fieldset>
            <legend>SimpleBlog details</legend>
            <div class="field"
                 tal:define="error errors/publishedState | nothing;
			                 pstate python:here.simpleblog_tool.getPublishedState();
							 allStates python:here.simpleblog_tool.getEntryWorkflowStates(here);
							 reqState request/publishedState|nothing;
							 cursel python:test(reqState,reqState,pstate)"
                 tal:attributes="class python:test(error, 'field error', 'field')">
                 
				<label>Workflow 'published' state name</label>
                <div class="formHelp">
    	            Workflow state that is used to filter Blog Entries on the Blog front page. Usually 'published'. <br/>
					Check the workflow for the BlogEntry portal type.
                </div>
                <div tal:content="error">Validation error output</div>
                <select name="publishedState" size="1">
					<tal:states tal:repeat="st allStates">
						<option value="1" 
							tal:attributes="selected python:test(st==cursel ,'select', None);
								value st"
							tal:content="st">
							state
						</option>
					</tal:states>
    		    </select>
            </div>

            <div class="field" 
				tal:define="submitted request/sub|python:0;
					checkit python:test(submitted,request.has_key('allowAnonymousViewByline'),here.simpleblog_tool.getAllowAnonymousViewByline())">
                <div class="formHelp">
				Can anonymous users see the byline. The byline tells who wrote the entry and when it was published and to which categories it belongs.
                </div>
				<input type="checkbox"
                     class="noborder" 
                     id="allowAnonymousViewByline"
                     name="allowAnonymousViewByline"
					 tal:attributes="checked python:test(checkit, 'checked', None)" />
                <label for="allowAnonymousViewByline">
                Anonymous users can view the byline
                </label>
            </div>			
			
            <div class="field" tal:define="cats python:here.simpleblog_tool.getGlobalCategories();
										   reqCats request/globalCategories | nothing;
                             error errors/globalCategories | nothing">
                <label>Global categories</label>
                <div class="formHelp">
					Global categories are available to all Blog Entries in the site. One category per line.
                </div>
                <textarea cols="30" rows="6" name="globalCategories"><span tal:condition="not: reqCats" tal:replace="python:'\n'.join(cats)"/><span tal:condition="reqCats" tal:replace="reqCats"/></textarea>
            </div>
			<h3>Portlet creation settings</h3>
            <div class="field" 
				tal:define="submitted request/sub|python:0;
					checkit python:test(submitted,request.has_key('createPortletOnBlogCreation'),here.simpleblog_tool.getCreatePortletOnBlogCreation())">
                <div class="formHelp">
                	SimpleBlog can create a portlet in the Blog's folder that displays the top most recent entries
					and a list of categories you can search for.
                </div>
				<input type="checkbox"
                     class="noborder" 
                     id="createPortletOnBlogCreation"
                     name="createPortletOnBlogCreation"
					 tal:attributes="checked python:test(checkit, 'checked', None)" />
                <label for="createPortletOnBlogCreation">
                Create a local portlet for newly created Blogs
                </label>
            </div>
			<p>Defaults for newly created portlets:</p>
            <div class="field" 
				tal:define="submitted request/sub|python:0;
					checkit python:test(submitted,request.has_key('showCalendar'),here.simpleblog_tool.getShowCalendar())">
                <div class="formHelp"></div>
				<input type="checkbox"
                     class="noborder" 
                     id="showCalendar"
                     name="showCalendar"
					 tal:attributes="checked python:test(checkit, 'checked', None)" />
                <label for="showCalendar">
                Show the calendar inside the portlet
                </label>
            </div>
            <div class="field" 
				tal:define="submitted request/sub|python:0;
					checkit python:test(submitted,request.has_key('showRecent'),here.simpleblog_tool.getShowRecent())">
                <div class="formHelp"></div>
				<input type="checkbox"
                     class="noborder" 
                     id="showRecent"
                     name="showRecent"
					 tal:attributes="checked python:test(checkit, 'checked', None)" />
                <label for="showRecent">
                Show recent additions inside the portlet
                </label>
            </div>
            <div class="field" 
				tal:define="submitted request/sub|python:0;
					checkit python:test(submitted,request.has_key('showCategories'),here.simpleblog_tool.getShowCategories())">
                <div class="formHelp"></div>
				<input type="checkbox"
                     class="noborder" 
                     id="showCategories"
                     name="showCategories"
					 tal:attributes="checked python:test(checkit, 'checked', None)" />
                <label for="showCategories">
                Show the categories for the blog inside the portlet
                </label>
            </div>
            <div class="field" 
				tal:define="submitted request/sub|python:0;
					checkit python:test(submitted,request.has_key('showComments'),here.simpleblog_tool.getShowComments())">
                <div class="formHelp"></div>
				<input type="checkbox"
                     class="noborder" 
                     id="showComments"
                     name="showComments"
					 tal:attributes="checked python:test(checkit, 'checked', None)" />
                <label for="showComments">
                Show recent comments inside the portlet
                </label>
            </div>
			
			
			<br/>
			<div class="formControls">
	        	<input class="context"
	                       type="submit"
	                       name="form.button.Save"
	                       value="Save"
	                       i18n:attributes="value"
	                       />
				<input class="standalone"
	                       type="submit"
	                       name="form.button.Cancel"
	                       value="Cancel"
	                       i18n:attributes="value"
	                       />
			</div>
	        <input type="hidden" name="sub" value="1" />
	        <input type="hidden" name="form.submitted" value="1" />
        </fieldset>
    </form>
	<h3>2.x Portlet Migration</h3>
	<p>Older Plone versions used a different mechanism for portlets. You can convert existing
	old style blog portlets to the new style so you can manage them using the portlet manager.
	</p>
    <form method="post" action="migrateBlogPortlets">
		<input class="context"
				   type="submit"
				   value="Migrate portlets"/>
	</form>
</div>
</body>
</html>

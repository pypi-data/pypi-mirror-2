status: 200
x-ratelimit-remaining: 57
content-location: https://github.com/api/v2/json/issues/list/ask/python-github2/open
x-runtime: 36ms
content-length: 4100
server: nginx/0.7.67
connection: keep-alive
x-ratelimit-limit: 60
etag: "d4fc8ccc95a538f78b061f48e21b40e2"
cache-control: private, max-age=0, must-revalidate
date: Wed, 08 Jun 2011 13:41:36 GMT
content-type: application/json; charset=utf-8

{"issues":[{"gravatar_id":"7e8b501f7f579c66ddac7e65cb7962b4","position":1.0,"number":1,"votes":0,"created_at":"2009/04/18 13:04:09 -0700","comments":0,"body":"This to support getting raw blob/tree data as specified in http://develop.github.com/p/object.html.","title":"option to make_request so it doesn't parse the response as json.","updated_at":"2009/04/18 13:04:09 -0700","html_url":"https://github.com/ask/python-github2/issues/1","user":"ask","labels":[],"state":"open"},{"gravatar_id":"7e8b501f7f579c66ddac7e65cb7962b4","position":5.0,"number":5,"votes":1,"created_at":"2010/05/18 06:10:36 -0700","comments":1,"body":"Goes without saying...","title":"This project needs tests!","updated_at":"2010/06/20 05:47:06 -0700","html_url":"https://github.com/ask/python-github2/issues/5","user":"ask","labels":[],"state":"open"},{"gravatar_id":"5b3558b0fd5ca9c08d9061a6e51b555a","position":24.0,"number":24,"votes":0,"created_at":"2010/12/08 23:50:26 -0800","comments":11,"body":"Hi, I added an optional 'page' argument to receive not only last 35 commits, but all others too. Think, such approach could be useful for other list operations too.","title":"Pagination support for commits.","updated_at":"2011/01/04 16:26:07 -0800","diff_url":"https://github.com/ask/python-github2/pull/24.diff","patch_url":"https://github.com/ask/python-github2/pull/24.patch","pull_request_url":"https://github.com/ask/python-github2/pull/24","html_url":"https://github.com/ask/python-github2/issues/24","user":"svetlyak40wt","labels":[],"state":"open"},{"gravatar_id":"e40de1eb6e8a74cb96b3f07f3994f155","position":39.0,"number":39,"votes":0,"created_at":"2011/04/18 08:25:47 -0700","comments":3,"body":"\nFeeble brainstorming session...\n\nI've just been bitten quite badly by the lack of timezone handling, the cause is the use of naive datetime objects in the 'GitHub' timezone(`America/Los_Angeles`).  While processing some tasks that span the PST/PDT changeover the ordering of events is broken.\n\nOptions are:\n\n1. Leave alone and try to process the datetime objects externally, somewhat easy but not a good solution as it requires duplication in each project that requires accurate date handling\n2. Start producing non-naive datetime objects, breaks any caller who is not prepared for it.\n3. Introduce a setting to toggle naive object availability, defaulting to naive objects to maintain backwards compatibility\n\n[python-dateutil](http://labix.org/python-dateutil) makes handling option 1 quite easy, and also simplifies the handling of option 3 at the cost of another external dependency.  Option 2 is just pure evil, or pure stupidity depending on point of view.\n\nOption 3 results in a parsing using something like the following entirely untested code:\n\n    datetime_ = parser.parse(github_date)\n    if NAIVE:\n        datetime_.replace(tzinfo=None)\n    return datetime_\n\nAnd similarly producing GitHub compatible date strings would require handling of naive formats with equally untested code such as:\n\n    if NAIVE:\n        datetime_ = datetime_.replace(tz.gettz(\"America/Los_Angeles\"))\n    return datetime_.strftime(\"%Y/%m/%d %H:%M:%S %z\")","title":"Datetime timezone handling.","updated_at":"2011/05/29 08:37:08 -0700","diff_url":"https://github.com/ask/python-github2/pull/39.diff","patch_url":"https://github.com/ask/python-github2/pull/39.patch","pull_request_url":"https://github.com/ask/python-github2/pull/39","html_url":"https://github.com/ask/python-github2/issues/39","user":"JNRowe","labels":[],"state":"open"},{"gravatar_id":"e40de1eb6e8a74cb96b3f07f3994f155","position":53.0,"number":53,"votes":0,"created_at":"2011/05/28 22:15:49 -0700","comments":1,"body":"It would make more sense, and be easy to filter wanted data, if debug info was handled with the `logging` module.  Side effect being the output will change significantly, but does it matter for debugging output anyway?","title":"Use logging for debug information.","updated_at":"2011/06/06 16:17:26 -0700","html_url":"https://github.com/ask/python-github2/issues/53","user":"JNRowe","labels":[],"state":"open"}]}
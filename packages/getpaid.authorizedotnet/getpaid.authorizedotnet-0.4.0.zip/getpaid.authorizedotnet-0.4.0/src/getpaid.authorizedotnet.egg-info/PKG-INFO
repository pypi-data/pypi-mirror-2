Metadata-Version: 1.0
Name: getpaid.authorizedotnet
Version: 0.4.0
Summary: GetPaid authorize.net payment processor functionality
Home-page: http://code.google.com/p/getpaid
Author: getpaid community
Author-email: getpaid-dev@googlegroups.com
License: ZPL2.1
Description: This package provides authorizedotnet payment processor functionality for the getpaid framework.
        
        
        =======
        CHANGES
        =======
        
        0.4.0 (2010-04-07)
        ------------------
        
        - Use zope.annotation instead of zope.app.annotation
        [davisagli]
        
        0.3.3 (2009-08-19)
        ------------------
        - Record the transaction id returned by authorize.net
        
        0.3.2 (2009-07-22)
        ------------------
        - Handle expiration date as a string.
        
        0.3.1 (2009-03-13)
        ------------------
        - added M2Crypto in the setup.py dependencies [lucielejard]
        
        0.3 (2008-08-29)
        ----------------
        - Added buildout files and general text documents to project root.
        - Removed setup.cfg
        
        0.2 (2008-08-21)
        ----------------
        - Eggified package
        
        Detailed Documentation
        **********************
        
        GetPaid Authorize.Net Payment Processor
        =======================================
        
        
        Store Specific Processor Setting Tests
        --------------------------------------
        
        First let's create a store class to work with:
        
        >>> from getpaid.core import interfaces
        >>> from zope.annotation import IAttributeAnnotatable
        >>> from zope.interface import implements
        >>> class Store:
        ...    implements( interfaces.IStore, IAttributeAnnotatable )
        >>> store = Store()
        
        And configure our payment processor:
        
        >>> interfaces.I
        >>
        
        Now let's create an order to process:
        
        >>> from getpaid.core import order, item, cart
        >>> order1 = order.Order()
        >>> my_cart = cart.ShoppingCart()
        >>> my_cart['abc'] = abc = item.LineItem()
        >>> abc.cost = 22.20; abc.name = 'abc'; abc.quantity = 3
        >>> str(order1.getTotalPrice())
        '22.20'
        
        Authorizing an Order
        --------------------
        
        Now we can run it through a processor:
        
        >>> from zope import component
        >>> processor = IPaymentProcessor( store )
        >>> processor.authorize( order ) == interfaces.keys.results_sucess
        True
        >>>
        
        Capturing/Charing an Order
        --------------------------
        
        Refunding an Order
        ------------------
        
        
        Voiding an Order
        ----------------
        Download
        **********************
        
Platform: UNKNOWN
Classifier: Framework :: Plone
Classifier: Framework :: Zope3
Classifier: Programming Language :: Python
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Zope Public License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Office/Business :: Financial
Classifier: Topic :: Software Development :: Libraries

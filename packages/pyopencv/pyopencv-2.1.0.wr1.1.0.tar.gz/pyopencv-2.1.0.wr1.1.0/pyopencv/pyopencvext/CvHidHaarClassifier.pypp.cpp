// This file has been generated by Py++.

#include "boost/python.hpp"
#include "__ctypes_integration.pypp.hpp"
#include "opencv_headers.hpp"
#include "boost/python/object.hpp"
#include "boost/python/list.hpp"
#include "boost/python/tuple.hpp"
#include "opencv_converters.hpp"
#include "CvHidHaarClassifier.pypp.hpp"

namespace bp = boost::python;

static bp::object get_node( CvHidHaarClassifier const & inst ){
    bp::list l;
    for(int i = 0; i < inst.count; ++i)
        l.append(inst.node[i]);
    return bp::tuple(l);
}

static cv::Mat get_alpha(::CvHidHaarClassifier const &inst)
{
    cv::Mat alpha2;
    convert_from_array_of_T_to_Mat(inst.alpha, inst.count+1, alpha2);
    return alpha2;
}

void register_CvHidHaarClassifier_class(){

    bp::class_< CvHidHaarClassifier >( "CvHidHaarClassifier" )    
        .add_property( "this", pyplus_conv::make_addressof_inst_getter< CvHidHaarClassifier >() )    
        .def_readwrite( "count", &CvHidHaarClassifier::count )    
        .add_property( "node", &::get_node )    
        .add_property( "alpha", &::get_alpha);

}

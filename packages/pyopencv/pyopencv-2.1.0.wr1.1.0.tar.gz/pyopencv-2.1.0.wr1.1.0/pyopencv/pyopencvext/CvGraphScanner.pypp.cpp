// This file has been generated by Py++.

#include "boost/python.hpp"
#include "__ctypes_integration.pypp.hpp"
#include "opencv_headers.hpp"
#include "boost/python/object.hpp"
#include "CvGraphScanner.pypp.hpp"

namespace bp = boost::python;

static ::CvGraphVtx * get_vtx( ::CvGraphScanner const & inst ) { return inst.vtx; }

static ::CvGraphVtx * get_dst( ::CvGraphScanner const & inst ) { return inst.dst; }

static ::CvGraphEdge * get_edge( ::CvGraphScanner const & inst ) { return inst.edge; }

static ::CvGraph * get_graph( ::CvGraphScanner const & inst ) { return inst.graph; }

static ::CvSeq * get_stack( ::CvGraphScanner const & inst ) { return inst.stack; }

void register_CvGraphScanner_class(){

    bp::class_< CvGraphScanner >( "CvGraphScanner" )    
        .add_property( "this", pyplus_conv::make_addressof_inst_getter< CvGraphScanner >() )    
        .def_readwrite( "index", &CvGraphScanner::index )    
        .def_readwrite( "mask", &CvGraphScanner::mask )    
        .add_property( "vtx", bp::make_function(&::get_vtx, bp::return_internal_reference<>()) )    
        .add_property( "dst", bp::make_function(&::get_dst, bp::return_internal_reference<>()) )    
        .add_property( "edge", bp::make_function(&::get_edge, bp::return_internal_reference<>()) )    
        .add_property( "graph", bp::make_function(&::get_graph, bp::return_internal_reference<>()) )    
        .add_property( "stack", bp::make_function(&::get_stack, bp::return_internal_reference<>()) );

}

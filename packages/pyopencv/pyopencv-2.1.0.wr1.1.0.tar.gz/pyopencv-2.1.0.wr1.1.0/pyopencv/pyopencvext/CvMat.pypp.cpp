// This file has been generated by Py++.

#include "boost/python.hpp"
#include "__ctypes_integration.pypp.hpp"
#include "opencv_headers.hpp"
#include "CvMat.pypp.hpp"

namespace bp = boost::python;

static bp::object get_data(CvMat const &inst)
{
    return bp::object(bp::handle<>(PyBuffer_FromReadWriteMemory(
        (void*)inst.data.ptr, inst.rows*inst.step)));
}

void register_CvMat_class(){

    bp::class_< CvMat >( "CvMat", "\nA multi-channel matrix."
    "\n"
    "\nWarning: This structure is obsolete. It exists only to support "
    "\nbackward compatibility. Please use class Mat instead."
    "\nReference:"
    "\n    http://opencv.willowgarage.com/documentation/basic_structures.html#cvmat" )    
        .add_property( "this", pyplus_conv::make_addressof_inst_getter< CvMat >(), "\nA multi-channel matrix."
    "\n"
    "\nWarning: This structure is obsolete. It exists only to support "
    "\nbackward compatibility. Please use class Mat instead."
    "\nReference:"
    "\n    http://opencv.willowgarage.com/documentation/basic_structures.html#cvmat" )    
        .add_property( "this", pyplus_conv::make_addressof_inst_getter< CvMat >() )    
        .def_readwrite( "cols", &CvMat::cols )    
        .def_readwrite( "width", &CvMat::width )    
        .add_property( "this", pyplus_conv::make_addressof_inst_getter< CvMat >() )    
        .def_readwrite( "height", &CvMat::height )    
        .def_readwrite( "rows", &CvMat::rows )    
        .def_readwrite( "step", &CvMat::step )    
        .def_readwrite( "type", &CvMat::type )    
        .add_property("data", &::get_data);

}

// This file has been generated by Py++.

#include "boost/python.hpp"
#include "__ctypes_integration.pypp.hpp"
#include "opencv_headers.hpp"
#include "opencv_converters.hpp"
#include "sequence.hpp"
#include "ndarray.hpp"
#include "__dummy_struct.pypp.hpp"

namespace bp = boost::python;

template<> inline ::cv::Mat normal_cast( ::CvMat const &inst ) { return cv::Mat((CvMat const *)&inst); }

template<> inline ::std::vector< cv::Vec<float, 4> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Vec4f>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Vec<float, 4> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Vec4f>(inst); }

template<> inline ::std::vector< short > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<short>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< short > const &inst ) { return convert_from_vector_of_T_to_Mat<short>(inst); }

template<> inline ::std::vector< cv::Vec<unsigned char, 4> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Vec4b>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Vec<unsigned char, 4> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Vec4b>(inst); }

template<> inline ::std::vector< int > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<int>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< int > const &inst ) { return convert_from_vector_of_T_to_Mat<int>(inst); }

template<> inline ::std::vector< std::vector< int > > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_vector_of_T<int>(inst); }

template<> inline ::std::vector< unsigned char > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<unsigned char>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< unsigned char > const &inst ) { return convert_from_vector_of_T_to_Mat<unsigned char>(inst); }

template<> inline ::std::vector< cv::Vec<int, 4> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Vec4i>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Vec<int, 4> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Vec4i>(inst); }

template<> inline ::std::vector< cv::Vec<unsigned short, 4> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Vec4w>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Vec<unsigned short, 4> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Vec4w>(inst); }

template<> inline ::std::vector< cv::Point3_<int> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Point3i>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Point3_<int> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Point3i>(inst); }

template<> inline ::std::vector< std::vector< cv::Point3_<int> > > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_vector_of_T<cv::Point3i>(inst); }

template<> inline ::std::vector< cv::Point_<int> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Point2i>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Point_<int> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Point2i>(inst); }

template<> inline ::std::vector< std::vector< cv::Point_<int> > > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_vector_of_T<cv::Point2i>(inst); }

template<> inline ::std::vector< cv::Vec<double, 4> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Vec4d>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Vec<double, 4> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Vec4d>(inst); }

template<> inline ::std::vector< cv::Vec<short, 4> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Vec4s>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Vec<short, 4> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Vec4s>(inst); }

template<> inline ::std::vector< cv::Vec<float, 2> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Vec2f>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Vec<float, 2> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Vec2f>(inst); }

template<> inline ::std::vector< cv::Range > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Range>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Range > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Range>(inst); }

template<> inline ::std::vector< cv::RotatedRect > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::RotatedRect>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::RotatedRect > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::RotatedRect>(inst); }

template<> inline ::std::vector< cv::Size_<int> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Size2i>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Size_<int> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Size2i>(inst); }

template<> inline ::std::vector< cv::Point3_<double> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Point3d>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Point3_<double> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Point3d>(inst); }

template<> inline ::std::vector< std::vector< cv::Point3_<double> > > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_vector_of_T<cv::Point3d>(inst); }

template<> inline ::std::vector< char > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<char>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< char > const &inst ) { return convert_from_vector_of_T_to_Mat<char>(inst); }

template<> inline ::std::vector< cv::Point3_<float> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Point3f>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Point3_<float> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Point3f>(inst); }

template<> inline ::std::vector< std::vector< cv::Point3_<float> > > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_vector_of_T<cv::Point3f>(inst); }

template<> inline ::std::vector< cv::Point_<double> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Point2d>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Point_<double> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Point2d>(inst); }

template<> inline ::std::vector< std::vector< cv::Point_<double> > > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_vector_of_T<cv::Point2d>(inst); }

template<> inline ::std::vector< cv::Vec<unsigned short, 3> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Vec3w>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Vec<unsigned short, 3> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Vec3w>(inst); }

template<> inline ::std::vector< cv::Vec<unsigned short, 2> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Vec2w>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Vec<unsigned short, 2> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Vec2w>(inst); }

template<> inline ::std::vector< cv::Vec<short, 3> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Vec3s>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Vec<short, 3> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Vec3s>(inst); }

template<> inline ::std::vector< cv::Vec<short, 2> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Vec2s>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Vec<short, 2> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Vec2s>(inst); }

template<> inline ::std::vector< double > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<double>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< double > const &inst ) { return convert_from_vector_of_T_to_Mat<double>(inst); }

template<> inline ::std::vector< cv::Size_<float> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Size2f>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Size_<float> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Size2f>(inst); }

template<> inline ::std::vector< cv::Scalar_<double> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Scalar>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Scalar_<double> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Scalar>(inst); }

template<> inline ::std::vector< cv::Point_<float> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Point2f>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Point_<float> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Point2f>(inst); }

template<> inline ::std::vector< std::vector< cv::Point_<float> > > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_vector_of_T<cv::Point2f>(inst); }

template<> inline ::std::vector< cv::Vec<float, 3> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Vec3f>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Vec<float, 3> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Vec3f>(inst); }

template<> inline ::std::vector< cv::Vec<double, 2> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Vec2d>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Vec<double, 2> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Vec2d>(inst); }

template<> inline ::std::vector< cv::Vec<double, 3> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Vec3d>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Vec<double, 3> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Vec3d>(inst); }

template<> inline ::std::vector< unsigned short > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<unsigned short>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< unsigned short > const &inst ) { return convert_from_vector_of_T_to_Mat<unsigned short>(inst); }

template<> inline ::std::vector< cv::Vec<unsigned char, 3> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Vec3b>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Vec<unsigned char, 3> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Vec3b>(inst); }

template<> inline ::std::vector< cv::Rect_<int> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Rect>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Rect_<int> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Rect>(inst); }

template<> inline ::std::vector< cv::Vec<unsigned char, 2> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Vec2b>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Vec<unsigned char, 2> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Vec2b>(inst); }

template<> inline ::std::vector< cv::Vec<float, 6> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Vec6f>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Vec<float, 6> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Vec6f>(inst); }

template<> inline ::std::vector< cv::Vec<int, 2> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Vec2i>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Vec<int, 2> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Vec2i>(inst); }

template<> inline ::std::vector< std::vector< cv::Vec<int, 2> > > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_vector_of_T<cv::Vec2i>(inst); }

template<> inline ::std::vector< cv::Vec<double, 6> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Vec6d>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Vec<double, 6> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Vec6d>(inst); }

template<> inline ::std::vector< float > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<float>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< float > const &inst ) { return convert_from_vector_of_T_to_Mat<float>(inst); }

template<> inline ::std::vector< std::vector< float > > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_vector_of_T<float>(inst); }

template<> inline ::std::vector< cv::Vec<int, 3> > normal_cast( ::cv::Mat const &inst ) { return convert_from_Mat_to_vector_of_T<cv::Vec3i>(inst); }

template<> inline ::cv::Mat normal_cast( ::std::vector< cv::Vec<int, 3> > const &inst ) { return convert_from_vector_of_T_to_Mat<cv::Vec3i>(inst); }

void register___dummy_struct_class(){

    { //::dummy_struct
        typedef bp::class_< dummy_struct > __dummy_struct_exposer_t;
        __dummy_struct_exposer_t __dummy_struct_exposer = __dummy_struct_exposer_t( "__dummy_struct" );
        bp::scope __dummy_struct_scope( __dummy_struct_exposer );
        __dummy_struct_exposer.add_property( "this", pyplus_conv::make_addressof_inst_getter< dummy_struct >() );
        bp::class_< dummy_struct::dummy_struct2 >( "dummy_struct2" )    
            .add_property( "this", pyplus_conv::make_addressof_inst_getter< dummy_struct::dummy_struct2 >() );
        __dummy_struct_exposer.setattr("v0", 0);
    }
    {
        
        sdcpp::register_sdobject<sdcpp::sequence>();
        bp::def("asVec2s", &::normal_cast< ::cv::Vec<unsigned char, 2>, ::cv::Vec<short, 2> >, (bp::arg("inst_Vec2b")));
        bp::def("asVec2w", &::normal_cast< ::cv::Vec<unsigned char, 2>, ::cv::Vec<unsigned short, 2> >, (bp::arg("inst_Vec2b")));
        bp::def("asVec2i", &::normal_cast< ::cv::Vec<unsigned char, 2>, ::cv::Vec<int, 2> >, (bp::arg("inst_Vec2b")));
        bp::def("asVec2f", &::normal_cast< ::cv::Vec<unsigned char, 2>, ::cv::Vec<float, 2> >, (bp::arg("inst_Vec2b")));
        bp::def("asVec2d", &::normal_cast< ::cv::Vec<unsigned char, 2>, ::cv::Vec<double, 2> >, (bp::arg("inst_Vec2b")));
        bp::def("asVec2b", &::normal_cast< ::cv::Vec<short, 2>, ::cv::Vec<unsigned char, 2> >, (bp::arg("inst_Vec2s")));
        bp::def("asVec2w", &::normal_cast< ::cv::Vec<short, 2>, ::cv::Vec<unsigned short, 2> >, (bp::arg("inst_Vec2s")));
        bp::def("asVec2i", &::normal_cast< ::cv::Vec<short, 2>, ::cv::Vec<int, 2> >, (bp::arg("inst_Vec2s")));
        bp::def("asVec2f", &::normal_cast< ::cv::Vec<short, 2>, ::cv::Vec<float, 2> >, (bp::arg("inst_Vec2s")));
        bp::def("asVec2d", &::normal_cast< ::cv::Vec<short, 2>, ::cv::Vec<double, 2> >, (bp::arg("inst_Vec2s")));
        bp::def("asVec2b", &::normal_cast< ::cv::Vec<unsigned short, 2>, ::cv::Vec<unsigned char, 2> >, (bp::arg("inst_Vec2w")));
        bp::def("asVec2s", &::normal_cast< ::cv::Vec<unsigned short, 2>, ::cv::Vec<short, 2> >, (bp::arg("inst_Vec2w")));
        bp::def("asVec2i", &::normal_cast< ::cv::Vec<unsigned short, 2>, ::cv::Vec<int, 2> >, (bp::arg("inst_Vec2w")));
        bp::def("asVec2f", &::normal_cast< ::cv::Vec<unsigned short, 2>, ::cv::Vec<float, 2> >, (bp::arg("inst_Vec2w")));
        bp::def("asVec2d", &::normal_cast< ::cv::Vec<unsigned short, 2>, ::cv::Vec<double, 2> >, (bp::arg("inst_Vec2w")));
        bp::def("asVec2b", &::normal_cast< ::cv::Vec<int, 2>, ::cv::Vec<unsigned char, 2> >, (bp::arg("inst_Vec2i")));
        bp::def("asVec2s", &::normal_cast< ::cv::Vec<int, 2>, ::cv::Vec<short, 2> >, (bp::arg("inst_Vec2i")));
        bp::def("asVec2w", &::normal_cast< ::cv::Vec<int, 2>, ::cv::Vec<unsigned short, 2> >, (bp::arg("inst_Vec2i")));
        bp::def("asVec2f", &::normal_cast< ::cv::Vec<int, 2>, ::cv::Vec<float, 2> >, (bp::arg("inst_Vec2i")));
        bp::def("asVec2d", &::normal_cast< ::cv::Vec<int, 2>, ::cv::Vec<double, 2> >, (bp::arg("inst_Vec2i")));
        bp::def("asVec2b", &::normal_cast< ::cv::Vec<float, 2>, ::cv::Vec<unsigned char, 2> >, (bp::arg("inst_Vec2f")));
        bp::def("asVec2s", &::normal_cast< ::cv::Vec<float, 2>, ::cv::Vec<short, 2> >, (bp::arg("inst_Vec2f")));
        bp::def("asVec2w", &::normal_cast< ::cv::Vec<float, 2>, ::cv::Vec<unsigned short, 2> >, (bp::arg("inst_Vec2f")));
        bp::def("asVec2i", &::normal_cast< ::cv::Vec<float, 2>, ::cv::Vec<int, 2> >, (bp::arg("inst_Vec2f")));
        bp::def("asVec2d", &::normal_cast< ::cv::Vec<float, 2>, ::cv::Vec<double, 2> >, (bp::arg("inst_Vec2f")));
        bp::def("asVec2b", &::normal_cast< ::cv::Vec<double, 2>, ::cv::Vec<unsigned char, 2> >, (bp::arg("inst_Vec2d")));
        bp::def("asVec2s", &::normal_cast< ::cv::Vec<double, 2>, ::cv::Vec<short, 2> >, (bp::arg("inst_Vec2d")));
        bp::def("asVec2w", &::normal_cast< ::cv::Vec<double, 2>, ::cv::Vec<unsigned short, 2> >, (bp::arg("inst_Vec2d")));
        bp::def("asVec2i", &::normal_cast< ::cv::Vec<double, 2>, ::cv::Vec<int, 2> >, (bp::arg("inst_Vec2d")));
        bp::def("asVec2f", &::normal_cast< ::cv::Vec<double, 2>, ::cv::Vec<float, 2> >, (bp::arg("inst_Vec2d")));
        bp::def("asVec3s", &::normal_cast< ::cv::Vec<unsigned char, 3>, ::cv::Vec<short, 3> >, (bp::arg("inst_Vec3b")));
        bp::def("asVec3w", &::normal_cast< ::cv::Vec<unsigned char, 3>, ::cv::Vec<unsigned short, 3> >, (bp::arg("inst_Vec3b")));
        bp::def("asVec3i", &::normal_cast< ::cv::Vec<unsigned char, 3>, ::cv::Vec<int, 3> >, (bp::arg("inst_Vec3b")));
        bp::def("asVec3f", &::normal_cast< ::cv::Vec<unsigned char, 3>, ::cv::Vec<float, 3> >, (bp::arg("inst_Vec3b")));
        bp::def("asVec3d", &::normal_cast< ::cv::Vec<unsigned char, 3>, ::cv::Vec<double, 3> >, (bp::arg("inst_Vec3b")));
        bp::def("asVec3b", &::normal_cast< ::cv::Vec<short, 3>, ::cv::Vec<unsigned char, 3> >, (bp::arg("inst_Vec3s")));
        bp::def("asVec3w", &::normal_cast< ::cv::Vec<short, 3>, ::cv::Vec<unsigned short, 3> >, (bp::arg("inst_Vec3s")));
        bp::def("asVec3i", &::normal_cast< ::cv::Vec<short, 3>, ::cv::Vec<int, 3> >, (bp::arg("inst_Vec3s")));
        bp::def("asVec3f", &::normal_cast< ::cv::Vec<short, 3>, ::cv::Vec<float, 3> >, (bp::arg("inst_Vec3s")));
        bp::def("asVec3d", &::normal_cast< ::cv::Vec<short, 3>, ::cv::Vec<double, 3> >, (bp::arg("inst_Vec3s")));
        bp::def("asVec3b", &::normal_cast< ::cv::Vec<unsigned short, 3>, ::cv::Vec<unsigned char, 3> >, (bp::arg("inst_Vec3w")));
        bp::def("asVec3s", &::normal_cast< ::cv::Vec<unsigned short, 3>, ::cv::Vec<short, 3> >, (bp::arg("inst_Vec3w")));
        bp::def("asVec3i", &::normal_cast< ::cv::Vec<unsigned short, 3>, ::cv::Vec<int, 3> >, (bp::arg("inst_Vec3w")));
        bp::def("asVec3f", &::normal_cast< ::cv::Vec<unsigned short, 3>, ::cv::Vec<float, 3> >, (bp::arg("inst_Vec3w")));
        bp::def("asVec3d", &::normal_cast< ::cv::Vec<unsigned short, 3>, ::cv::Vec<double, 3> >, (bp::arg("inst_Vec3w")));
        bp::def("asVec3b", &::normal_cast< ::cv::Vec<int, 3>, ::cv::Vec<unsigned char, 3> >, (bp::arg("inst_Vec3i")));
        bp::def("asVec3s", &::normal_cast< ::cv::Vec<int, 3>, ::cv::Vec<short, 3> >, (bp::arg("inst_Vec3i")));
        bp::def("asVec3w", &::normal_cast< ::cv::Vec<int, 3>, ::cv::Vec<unsigned short, 3> >, (bp::arg("inst_Vec3i")));
        bp::def("asVec3f", &::normal_cast< ::cv::Vec<int, 3>, ::cv::Vec<float, 3> >, (bp::arg("inst_Vec3i")));
        bp::def("asVec3d", &::normal_cast< ::cv::Vec<int, 3>, ::cv::Vec<double, 3> >, (bp::arg("inst_Vec3i")));
        bp::def("asVec3b", &::normal_cast< ::cv::Vec<float, 3>, ::cv::Vec<unsigned char, 3> >, (bp::arg("inst_Vec3f")));
        bp::def("asVec3s", &::normal_cast< ::cv::Vec<float, 3>, ::cv::Vec<short, 3> >, (bp::arg("inst_Vec3f")));
        bp::def("asVec3w", &::normal_cast< ::cv::Vec<float, 3>, ::cv::Vec<unsigned short, 3> >, (bp::arg("inst_Vec3f")));
        bp::def("asVec3i", &::normal_cast< ::cv::Vec<float, 3>, ::cv::Vec<int, 3> >, (bp::arg("inst_Vec3f")));
        bp::def("asVec3d", &::normal_cast< ::cv::Vec<float, 3>, ::cv::Vec<double, 3> >, (bp::arg("inst_Vec3f")));
        bp::def("asVec3b", &::normal_cast< ::cv::Vec<double, 3>, ::cv::Vec<unsigned char, 3> >, (bp::arg("inst_Vec3d")));
        bp::def("asVec3s", &::normal_cast< ::cv::Vec<double, 3>, ::cv::Vec<short, 3> >, (bp::arg("inst_Vec3d")));
        bp::def("asVec3w", &::normal_cast< ::cv::Vec<double, 3>, ::cv::Vec<unsigned short, 3> >, (bp::arg("inst_Vec3d")));
        bp::def("asVec3i", &::normal_cast< ::cv::Vec<double, 3>, ::cv::Vec<int, 3> >, (bp::arg("inst_Vec3d")));
        bp::def("asVec3f", &::normal_cast< ::cv::Vec<double, 3>, ::cv::Vec<float, 3> >, (bp::arg("inst_Vec3d")));
        bp::def("asVec4s", &::normal_cast< ::cv::Vec<unsigned char, 4>, ::cv::Vec<short, 4> >, (bp::arg("inst_Vec4b")));
        bp::def("asVec4w", &::normal_cast< ::cv::Vec<unsigned char, 4>, ::cv::Vec<unsigned short, 4> >, (bp::arg("inst_Vec4b")));
        bp::def("asVec4i", &::normal_cast< ::cv::Vec<unsigned char, 4>, ::cv::Vec<int, 4> >, (bp::arg("inst_Vec4b")));
        bp::def("asVec4f", &::normal_cast< ::cv::Vec<unsigned char, 4>, ::cv::Vec<float, 4> >, (bp::arg("inst_Vec4b")));
        bp::def("asVec4d", &::normal_cast< ::cv::Vec<unsigned char, 4>, ::cv::Vec<double, 4> >, (bp::arg("inst_Vec4b")));
        bp::def("asVec4b", &::normal_cast< ::cv::Vec<short, 4>, ::cv::Vec<unsigned char, 4> >, (bp::arg("inst_Vec4s")));
        bp::def("asVec4w", &::normal_cast< ::cv::Vec<short, 4>, ::cv::Vec<unsigned short, 4> >, (bp::arg("inst_Vec4s")));
        bp::def("asVec4i", &::normal_cast< ::cv::Vec<short, 4>, ::cv::Vec<int, 4> >, (bp::arg("inst_Vec4s")));
        bp::def("asVec4f", &::normal_cast< ::cv::Vec<short, 4>, ::cv::Vec<float, 4> >, (bp::arg("inst_Vec4s")));
        bp::def("asVec4d", &::normal_cast< ::cv::Vec<short, 4>, ::cv::Vec<double, 4> >, (bp::arg("inst_Vec4s")));
        bp::def("asVec4b", &::normal_cast< ::cv::Vec<unsigned short, 4>, ::cv::Vec<unsigned char, 4> >, (bp::arg("inst_Vec4w")));
        bp::def("asVec4s", &::normal_cast< ::cv::Vec<unsigned short, 4>, ::cv::Vec<short, 4> >, (bp::arg("inst_Vec4w")));
        bp::def("asVec4i", &::normal_cast< ::cv::Vec<unsigned short, 4>, ::cv::Vec<int, 4> >, (bp::arg("inst_Vec4w")));
        bp::def("asVec4f", &::normal_cast< ::cv::Vec<unsigned short, 4>, ::cv::Vec<float, 4> >, (bp::arg("inst_Vec4w")));
        bp::def("asVec4d", &::normal_cast< ::cv::Vec<unsigned short, 4>, ::cv::Vec<double, 4> >, (bp::arg("inst_Vec4w")));
        bp::def("asVec4b", &::normal_cast< ::cv::Vec<int, 4>, ::cv::Vec<unsigned char, 4> >, (bp::arg("inst_Vec4i")));
        bp::def("asVec4s", &::normal_cast< ::cv::Vec<int, 4>, ::cv::Vec<short, 4> >, (bp::arg("inst_Vec4i")));
        bp::def("asVec4w", &::normal_cast< ::cv::Vec<int, 4>, ::cv::Vec<unsigned short, 4> >, (bp::arg("inst_Vec4i")));
        bp::def("asVec4f", &::normal_cast< ::cv::Vec<int, 4>, ::cv::Vec<float, 4> >, (bp::arg("inst_Vec4i")));
        bp::def("asVec4d", &::normal_cast< ::cv::Vec<int, 4>, ::cv::Vec<double, 4> >, (bp::arg("inst_Vec4i")));
        bp::def("asVec4b", &::normal_cast< ::cv::Vec<float, 4>, ::cv::Vec<unsigned char, 4> >, (bp::arg("inst_Vec4f")));
        bp::def("asVec4s", &::normal_cast< ::cv::Vec<float, 4>, ::cv::Vec<short, 4> >, (bp::arg("inst_Vec4f")));
        bp::def("asVec4w", &::normal_cast< ::cv::Vec<float, 4>, ::cv::Vec<unsigned short, 4> >, (bp::arg("inst_Vec4f")));
        bp::def("asVec4i", &::normal_cast< ::cv::Vec<float, 4>, ::cv::Vec<int, 4> >, (bp::arg("inst_Vec4f")));
        bp::def("asVec4d", &::normal_cast< ::cv::Vec<float, 4>, ::cv::Vec<double, 4> >, (bp::arg("inst_Vec4f")));
        bp::def("asVec4b", &::normal_cast< ::cv::Vec<double, 4>, ::cv::Vec<unsigned char, 4> >, (bp::arg("inst_Vec4d")));
        bp::def("asVec4s", &::normal_cast< ::cv::Vec<double, 4>, ::cv::Vec<short, 4> >, (bp::arg("inst_Vec4d")));
        bp::def("asVec4w", &::normal_cast< ::cv::Vec<double, 4>, ::cv::Vec<unsigned short, 4> >, (bp::arg("inst_Vec4d")));
        bp::def("asVec4i", &::normal_cast< ::cv::Vec<double, 4>, ::cv::Vec<int, 4> >, (bp::arg("inst_Vec4d")));
        bp::def("asVec4f", &::normal_cast< ::cv::Vec<double, 4>, ::cv::Vec<float, 4> >, (bp::arg("inst_Vec4d")));
        bp::def("asVec6d", &::normal_cast< ::cv::Vec<float, 6>, ::cv::Vec<double, 6> >, (bp::arg("inst_Vec6f")));
        bp::def("asVec6f", &::normal_cast< ::cv::Vec<double, 6>, ::cv::Vec<float, 6> >, (bp::arg("inst_Vec6d")));
        bp::def("asComplexd", &::normal_cast< ::cv::Complex<float>, ::cv::Complex<double> >, (bp::arg("inst_Complexf")));
        bp::def("asComplexf", &::normal_cast< ::cv::Complex<double>, ::cv::Complex<float> >, (bp::arg("inst_Complexd")));
        bp::def("asCvPoint", &::normal_cast< ::cv::Point_< int >, ::CvPoint >, (bp::arg("inst_Point2i")));
        bp::def("asCvPoint2D32f", &::normal_cast< ::cv::Point_< int >, ::CvPoint2D32f >, (bp::arg("inst_Point2i")));
        bp::def("asVec2i", &::normal_cast< ::cv::Point_< int >, ::cv::Vec< int, 2 > >, (bp::arg("inst_Point2i")));
        bp::def("asCvPoint", &::normal_cast< ::cv::Point_< float >, ::CvPoint >, (bp::arg("inst_Point2f")));
        bp::def("asCvPoint2D32f", &::normal_cast< ::cv::Point_< float >, ::CvPoint2D32f >, (bp::arg("inst_Point2f")));
        bp::def("asVec2f", &::normal_cast< ::cv::Point_< float >, ::cv::Vec< float, 2 > >, (bp::arg("inst_Point2f")));
        bp::def("asCvPoint", &::normal_cast< ::cv::Point_< double >, ::CvPoint >, (bp::arg("inst_Point2d")));
        bp::def("asCvPoint2D32f", &::normal_cast< ::cv::Point_< double >, ::CvPoint2D32f >, (bp::arg("inst_Point2d")));
        bp::def("asVec2d", &::normal_cast< ::cv::Point_< double >, ::cv::Vec< double, 2 > >, (bp::arg("inst_Point2d")));
        bp::def("asPoint2f", &::normal_cast< ::cv::Point_<int>, ::cv::Point_<float> >, (bp::arg("inst_Point2i")));
        bp::def("asPoint2d", &::normal_cast< ::cv::Point_<int>, ::cv::Point_<double> >, (bp::arg("inst_Point2i")));
        bp::def("asPoint2i", &::normal_cast< ::cv::Point_<float>, ::cv::Point_<int> >, (bp::arg("inst_Point2f")));
        bp::def("asPoint2d", &::normal_cast< ::cv::Point_<float>, ::cv::Point_<double> >, (bp::arg("inst_Point2f")));
        bp::def("asPoint2i", &::normal_cast< ::cv::Point_<double>, ::cv::Point_<int> >, (bp::arg("inst_Point2d")));
        bp::def("asPoint2f", &::normal_cast< ::cv::Point_<double>, ::cv::Point_<float> >, (bp::arg("inst_Point2d")));
        bp::def("asCvPoint3D32f", &::normal_cast< ::cv::Point3_< int >, ::CvPoint3D32f >, (bp::arg("inst_Point3i")));
        bp::def("asVec3i", &::normal_cast< ::cv::Point3_< int >, ::cv::Vec< int, 3 > >, (bp::arg("inst_Point3i")));
        bp::def("asCvPoint3D32f", &::normal_cast< ::cv::Point3_< float >, ::CvPoint3D32f >, (bp::arg("inst_Point3f")));
        bp::def("asVec3f", &::normal_cast< ::cv::Point3_< float >, ::cv::Vec< float, 3 > >, (bp::arg("inst_Point3f")));
        bp::def("asCvPoint3D32f", &::normal_cast< ::cv::Point3_< double >, ::CvPoint3D32f >, (bp::arg("inst_Point3d")));
        bp::def("asVec3d", &::normal_cast< ::cv::Point3_< double >, ::cv::Vec< double, 3 > >, (bp::arg("inst_Point3d")));
        bp::def("asPoint3f", &::normal_cast< ::cv::Point3_<int>, ::cv::Point3_<float> >, (bp::arg("inst_Point3i")));
        bp::def("asPoint3d", &::normal_cast< ::cv::Point3_<int>, ::cv::Point3_<double> >, (bp::arg("inst_Point3i")));
        bp::def("asPoint3i", &::normal_cast< ::cv::Point3_<float>, ::cv::Point3_<int> >, (bp::arg("inst_Point3f")));
        bp::def("asPoint3d", &::normal_cast< ::cv::Point3_<float>, ::cv::Point3_<double> >, (bp::arg("inst_Point3f")));
        bp::def("asPoint3i", &::normal_cast< ::cv::Point3_<double>, ::cv::Point3_<int> >, (bp::arg("inst_Point3d")));
        bp::def("asPoint3f", &::normal_cast< ::cv::Point3_<double>, ::cv::Point3_<float> >, (bp::arg("inst_Point3d")));
        bp::def("asSize2f", &::normal_cast< ::cv::Size_<int>, ::cv::Size_<float> >, (bp::arg("inst_Size2i")));
        bp::def("asSize2i", &::normal_cast< ::cv::Size_<float>, ::cv::Size_<int> >, (bp::arg("inst_Size2f")));
        bp::def("asCvMat", &::normal_cast< ::cv::Mat, ::CvMat >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::CvMat, ::cv::Mat >, (bp::arg("inst_CvMat")));
        bp::def("asvector_Vec4f", &::normal_cast< ::cv::Mat, ::std::vector< cv::Vec<float, 4> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Vec<float, 4> >, ::cv::Mat >, (bp::arg("inst_vector_Vec4f")));
        bp::def("asvector_int16", &::normal_cast< ::cv::Mat, ::std::vector< short > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< short >, ::cv::Mat >, (bp::arg("inst_vector_int16")));
        bp::def("asvector_Vec4b", &::normal_cast< ::cv::Mat, ::std::vector< cv::Vec<unsigned char, 4> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Vec<unsigned char, 4> >, ::cv::Mat >, (bp::arg("inst_vector_Vec4b")));
        bp::def("asvector_int", &::normal_cast< ::cv::Mat, ::std::vector< int > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< int >, ::cv::Mat >, (bp::arg("inst_vector_int")));
        bp::def("asvector_vector_int", &::normal_cast< ::cv::Mat, ::std::vector< std::vector< int > > >, (bp::arg("inst_Mat")));
        bp::def("asvector_uint8", &::normal_cast< ::cv::Mat, ::std::vector< unsigned char > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< unsigned char >, ::cv::Mat >, (bp::arg("inst_vector_uint8")));
        bp::def("asvector_Vec4i", &::normal_cast< ::cv::Mat, ::std::vector< cv::Vec<int, 4> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Vec<int, 4> >, ::cv::Mat >, (bp::arg("inst_vector_Vec4i")));
        bp::def("asvector_Vec4w", &::normal_cast< ::cv::Mat, ::std::vector< cv::Vec<unsigned short, 4> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Vec<unsigned short, 4> >, ::cv::Mat >, (bp::arg("inst_vector_Vec4w")));
        bp::def("asvector_Point3i", &::normal_cast< ::cv::Mat, ::std::vector< cv::Point3_<int> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Point3_<int> >, ::cv::Mat >, (bp::arg("inst_vector_Point3i")));
        bp::def("asvector_vector_Point3i", &::normal_cast< ::cv::Mat, ::std::vector< std::vector< cv::Point3_<int> > > >, (bp::arg("inst_Mat")));
        bp::def("asvector_Point2i", &::normal_cast< ::cv::Mat, ::std::vector< cv::Point_<int> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Point_<int> >, ::cv::Mat >, (bp::arg("inst_vector_Point2i")));
        bp::def("asvector_vector_Point2i", &::normal_cast< ::cv::Mat, ::std::vector< std::vector< cv::Point_<int> > > >, (bp::arg("inst_Mat")));
        bp::def("asvector_Vec4d", &::normal_cast< ::cv::Mat, ::std::vector< cv::Vec<double, 4> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Vec<double, 4> >, ::cv::Mat >, (bp::arg("inst_vector_Vec4d")));
        bp::def("asvector_Vec4s", &::normal_cast< ::cv::Mat, ::std::vector< cv::Vec<short, 4> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Vec<short, 4> >, ::cv::Mat >, (bp::arg("inst_vector_Vec4s")));
        bp::def("asvector_Vec2f", &::normal_cast< ::cv::Mat, ::std::vector< cv::Vec<float, 2> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Vec<float, 2> >, ::cv::Mat >, (bp::arg("inst_vector_Vec2f")));
        bp::def("asvector_Range", &::normal_cast< ::cv::Mat, ::std::vector< cv::Range > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Range >, ::cv::Mat >, (bp::arg("inst_vector_Range")));
        bp::def("asvector_RotatedRect", &::normal_cast< ::cv::Mat, ::std::vector< cv::RotatedRect > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::RotatedRect >, ::cv::Mat >, (bp::arg("inst_vector_RotatedRect")));
        bp::def("asvector_Size2i", &::normal_cast< ::cv::Mat, ::std::vector< cv::Size_<int> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Size_<int> >, ::cv::Mat >, (bp::arg("inst_vector_Size2i")));
        bp::def("asvector_Point3d", &::normal_cast< ::cv::Mat, ::std::vector< cv::Point3_<double> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Point3_<double> >, ::cv::Mat >, (bp::arg("inst_vector_Point3d")));
        bp::def("asvector_vector_Point3d", &::normal_cast< ::cv::Mat, ::std::vector< std::vector< cv::Point3_<double> > > >, (bp::arg("inst_Mat")));
        bp::def("asvector_int8", &::normal_cast< ::cv::Mat, ::std::vector< char > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< char >, ::cv::Mat >, (bp::arg("inst_vector_int8")));
        bp::def("asvector_Point3f", &::normal_cast< ::cv::Mat, ::std::vector< cv::Point3_<float> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Point3_<float> >, ::cv::Mat >, (bp::arg("inst_vector_Point3f")));
        bp::def("asvector_vector_Point3f", &::normal_cast< ::cv::Mat, ::std::vector< std::vector< cv::Point3_<float> > > >, (bp::arg("inst_Mat")));
        bp::def("asvector_Point2d", &::normal_cast< ::cv::Mat, ::std::vector< cv::Point_<double> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Point_<double> >, ::cv::Mat >, (bp::arg("inst_vector_Point2d")));
        bp::def("asvector_vector_Point2d", &::normal_cast< ::cv::Mat, ::std::vector< std::vector< cv::Point_<double> > > >, (bp::arg("inst_Mat")));
        bp::def("asvector_Vec3w", &::normal_cast< ::cv::Mat, ::std::vector< cv::Vec<unsigned short, 3> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Vec<unsigned short, 3> >, ::cv::Mat >, (bp::arg("inst_vector_Vec3w")));
        bp::def("asvector_Vec2w", &::normal_cast< ::cv::Mat, ::std::vector< cv::Vec<unsigned short, 2> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Vec<unsigned short, 2> >, ::cv::Mat >, (bp::arg("inst_vector_Vec2w")));
        bp::def("asvector_Vec3s", &::normal_cast< ::cv::Mat, ::std::vector< cv::Vec<short, 3> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Vec<short, 3> >, ::cv::Mat >, (bp::arg("inst_vector_Vec3s")));
        bp::def("asvector_Vec2s", &::normal_cast< ::cv::Mat, ::std::vector< cv::Vec<short, 2> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Vec<short, 2> >, ::cv::Mat >, (bp::arg("inst_vector_Vec2s")));
        bp::def("asvector_float64", &::normal_cast< ::cv::Mat, ::std::vector< double > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< double >, ::cv::Mat >, (bp::arg("inst_vector_float64")));
        bp::def("asvector_Size2f", &::normal_cast< ::cv::Mat, ::std::vector< cv::Size_<float> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Size_<float> >, ::cv::Mat >, (bp::arg("inst_vector_Size2f")));
        bp::def("asvector_Scalar", &::normal_cast< ::cv::Mat, ::std::vector< cv::Scalar_<double> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Scalar_<double> >, ::cv::Mat >, (bp::arg("inst_vector_Scalar")));
        bp::def("asvector_Point2f", &::normal_cast< ::cv::Mat, ::std::vector< cv::Point_<float> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Point_<float> >, ::cv::Mat >, (bp::arg("inst_vector_Point2f")));
        bp::def("asvector_vector_Point2f", &::normal_cast< ::cv::Mat, ::std::vector< std::vector< cv::Point_<float> > > >, (bp::arg("inst_Mat")));
        bp::def("asvector_Vec3f", &::normal_cast< ::cv::Mat, ::std::vector< cv::Vec<float, 3> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Vec<float, 3> >, ::cv::Mat >, (bp::arg("inst_vector_Vec3f")));
        bp::def("asvector_Vec2d", &::normal_cast< ::cv::Mat, ::std::vector< cv::Vec<double, 2> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Vec<double, 2> >, ::cv::Mat >, (bp::arg("inst_vector_Vec2d")));
        bp::def("asvector_Vec3d", &::normal_cast< ::cv::Mat, ::std::vector< cv::Vec<double, 3> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Vec<double, 3> >, ::cv::Mat >, (bp::arg("inst_vector_Vec3d")));
        bp::def("asvector_uint16", &::normal_cast< ::cv::Mat, ::std::vector< unsigned short > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< unsigned short >, ::cv::Mat >, (bp::arg("inst_vector_uint16")));
        bp::def("asvector_Vec3b", &::normal_cast< ::cv::Mat, ::std::vector< cv::Vec<unsigned char, 3> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Vec<unsigned char, 3> >, ::cv::Mat >, (bp::arg("inst_vector_Vec3b")));
        bp::def("asvector_Rect", &::normal_cast< ::cv::Mat, ::std::vector< cv::Rect_<int> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Rect_<int> >, ::cv::Mat >, (bp::arg("inst_vector_Rect")));
        bp::def("asvector_Vec2b", &::normal_cast< ::cv::Mat, ::std::vector< cv::Vec<unsigned char, 2> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Vec<unsigned char, 2> >, ::cv::Mat >, (bp::arg("inst_vector_Vec2b")));
        bp::def("asvector_Vec6f", &::normal_cast< ::cv::Mat, ::std::vector< cv::Vec<float, 6> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Vec<float, 6> >, ::cv::Mat >, (bp::arg("inst_vector_Vec6f")));
        bp::def("asvector_Vec2i", &::normal_cast< ::cv::Mat, ::std::vector< cv::Vec<int, 2> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Vec<int, 2> >, ::cv::Mat >, (bp::arg("inst_vector_Vec2i")));
        bp::def("asvector_vector_Vec2i", &::normal_cast< ::cv::Mat, ::std::vector< std::vector< cv::Vec<int, 2> > > >, (bp::arg("inst_Mat")));
        bp::def("asvector_Vec6d", &::normal_cast< ::cv::Mat, ::std::vector< cv::Vec<double, 6> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Vec<double, 6> >, ::cv::Mat >, (bp::arg("inst_vector_Vec6d")));
        bp::def("asvector_float32", &::normal_cast< ::cv::Mat, ::std::vector< float > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< float >, ::cv::Mat >, (bp::arg("inst_vector_float32")));
        bp::def("asvector_vector_float32", &::normal_cast< ::cv::Mat, ::std::vector< std::vector< float > > >, (bp::arg("inst_Mat")));
        bp::def("asvector_Vec3i", &::normal_cast< ::cv::Mat, ::std::vector< cv::Vec<int, 3> > >, (bp::arg("inst_Mat")));
        bp::def("asMat", &::normal_cast< ::std::vector< cv::Vec<int, 3> >, ::cv::Mat >, (bp::arg("inst_vector_Vec3i")));
        bp::def("asMat", &::normal_cast< ::cv::MatND, ::cv::Mat >, (bp::arg("inst_MatND")));
        bp::def("asvector_CvConnectedComp", &::normal_cast< ::cv::Seq< CvConnectedComp >, ::std::vector< CvConnectedComp > >, (bp::arg("inst_Seq_CvConnectedComp")));
        bp::def("asvector_CvSURFPoint", &::normal_cast< ::cv::Seq< CvSURFPoint >, ::std::vector< CvSURFPoint > >, (bp::arg("inst_Seq_CvSURFPoint")));
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Point3_<float> >, (bp::arg("inst_vector_Point3f")) );
        bp::def("asvector_Point3f", &sdcpp::ndarray_to_vector2< cv::Point3_<float> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Point_<int> >, (bp::arg("inst_vector_Point2i")) );
        bp::def("asvector_Point2i", &sdcpp::ndarray_to_vector2< cv::Point_<int> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Point_<double> >, (bp::arg("inst_vector_Point2d")) );
        bp::def("asvector_Point2d", &sdcpp::ndarray_to_vector2< cv::Point_<double> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Range >, (bp::arg("inst_vector_Range")) );
        bp::def("asvector_Range", &sdcpp::ndarray_to_vector2< cv::Range >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Vec<unsigned char,3> >, (bp::arg("inst_vector_Vec3b")) );
        bp::def("asvector_Vec3b", &sdcpp::ndarray_to_vector2< cv::Vec<unsigned char,3> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Scalar_<double> >, (bp::arg("inst_vector_Scalar")) );
        bp::def("asvector_Scalar", &sdcpp::ndarray_to_vector2< cv::Scalar_<double> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Vec<short,2> >, (bp::arg("inst_vector_Vec2s")) );
        bp::def("asvector_Vec2s", &sdcpp::ndarray_to_vector2< cv::Vec<short,2> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Vec<short,4> >, (bp::arg("inst_vector_Vec4s")) );
        bp::def("asvector_Vec4s", &sdcpp::ndarray_to_vector2< cv::Vec<short,4> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Vec<double,6> >, (bp::arg("inst_vector_Vec6d")) );
        bp::def("asvector_Vec6d", &sdcpp::ndarray_to_vector2< cv::Vec<double,6> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Vec<int,4> >, (bp::arg("inst_vector_Vec4i")) );
        bp::def("asvector_Vec4i", &sdcpp::ndarray_to_vector2< cv::Vec<int,4> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Vec<double,4> >, (bp::arg("inst_vector_Vec4d")) );
        bp::def("asvector_Vec4d", &sdcpp::ndarray_to_vector2< cv::Vec<double,4> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Vec<float,3> >, (bp::arg("inst_vector_Vec3f")) );
        bp::def("asvector_Vec3f", &sdcpp::ndarray_to_vector2< cv::Vec<float,3> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Point3_<double> >, (bp::arg("inst_vector_Point3d")) );
        bp::def("asvector_Point3d", &sdcpp::ndarray_to_vector2< cv::Point3_<double> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Vec<unsigned short,2> >, (bp::arg("inst_vector_Vec2w")) );
        bp::def("asvector_Vec2w", &sdcpp::ndarray_to_vector2< cv::Vec<unsigned short,2> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Vec<int,2> >, (bp::arg("inst_vector_Vec2i")) );
        bp::def("asvector_Vec2i", &sdcpp::ndarray_to_vector2< cv::Vec<int,2> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Rect_<int> >, (bp::arg("inst_vector_Rect")) );
        bp::def("asvector_Rect", &sdcpp::ndarray_to_vector2< cv::Rect_<int> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< char >, (bp::arg("inst_vector_int8")) );
        bp::def("asvector_int8", &sdcpp::ndarray_to_vector2< char >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< float >, (bp::arg("inst_vector_float32")) );
        bp::def("asvector_float32", &sdcpp::ndarray_to_vector2< float >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Point3_<int> >, (bp::arg("inst_vector_Point3i")) );
        bp::def("asvector_Point3i", &sdcpp::ndarray_to_vector2< cv::Point3_<int> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Vec<float,6> >, (bp::arg("inst_vector_Vec6f")) );
        bp::def("asvector_Vec6f", &sdcpp::ndarray_to_vector2< cv::Vec<float,6> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Vec<unsigned char,2> >, (bp::arg("inst_vector_Vec2b")) );
        bp::def("asvector_Vec2b", &sdcpp::ndarray_to_vector2< cv::Vec<unsigned char,2> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< unsigned long >, (bp::arg("inst_vector_ulong")) );
        bp::def("asvector_ulong", &sdcpp::ndarray_to_vector2< unsigned long >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< short >, (bp::arg("inst_vector_int16")) );
        bp::def("asvector_int16", &sdcpp::ndarray_to_vector2< short >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Vec<short,3> >, (bp::arg("inst_vector_Vec3s")) );
        bp::def("asvector_Vec3s", &sdcpp::ndarray_to_vector2< cv::Vec<short,3> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Point_<float> >, (bp::arg("inst_vector_Point2f")) );
        bp::def("asvector_Point2f", &sdcpp::ndarray_to_vector2< cv::Point_<float> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::RotatedRect >, (bp::arg("inst_vector_RotatedRect")) );
        bp::def("asvector_RotatedRect", &sdcpp::ndarray_to_vector2< cv::RotatedRect >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< unsigned char >, (bp::arg("inst_vector_uint8")) );
        bp::def("asvector_uint8", &sdcpp::ndarray_to_vector2< unsigned char >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< int >, (bp::arg("inst_vector_int")) );
        bp::def("asvector_int", &sdcpp::ndarray_to_vector2< int >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< unsigned int >, (bp::arg("inst_vector_uint")) );
        bp::def("asvector_uint", &sdcpp::ndarray_to_vector2< unsigned int >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Vec<double,3> >, (bp::arg("inst_vector_Vec3d")) );
        bp::def("asvector_Vec3d", &sdcpp::ndarray_to_vector2< cv::Vec<double,3> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Vec<unsigned short,4> >, (bp::arg("inst_vector_Vec4w")) );
        bp::def("asvector_Vec4w", &sdcpp::ndarray_to_vector2< cv::Vec<unsigned short,4> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Vec<float,4> >, (bp::arg("inst_vector_Vec4f")) );
        bp::def("asvector_Vec4f", &sdcpp::ndarray_to_vector2< cv::Vec<float,4> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< unsigned short >, (bp::arg("inst_vector_uint16")) );
        bp::def("asvector_uint16", &sdcpp::ndarray_to_vector2< unsigned short >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Vec<double,2> >, (bp::arg("inst_vector_Vec2d")) );
        bp::def("asvector_Vec2d", &sdcpp::ndarray_to_vector2< cv::Vec<double,2> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< double >, (bp::arg("inst_vector_float64")) );
        bp::def("asvector_float64", &sdcpp::ndarray_to_vector2< double >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Vec<unsigned short,3> >, (bp::arg("inst_vector_Vec3w")) );
        bp::def("asvector_Vec3w", &sdcpp::ndarray_to_vector2< cv::Vec<unsigned short,3> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Vec<unsigned char,4> >, (bp::arg("inst_vector_Vec4b")) );
        bp::def("asvector_Vec4b", &sdcpp::ndarray_to_vector2< cv::Vec<unsigned char,4> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Vec<float,2> >, (bp::arg("inst_vector_Vec2f")) );
        bp::def("asvector_Vec2f", &sdcpp::ndarray_to_vector2< cv::Vec<float,2> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< cv::Vec<int,3> >, (bp::arg("inst_vector_Vec3i")) );
        bp::def("asvector_Vec3i", &sdcpp::ndarray_to_vector2< cv::Vec<int,3> >, (bp::arg("inst_ndarray")) );
        bp::def("asndarray", &sdcpp::vector_to_ndarray2< long >, (bp::arg("inst_vector_long")) );
        bp::def("asvector_long", &sdcpp::ndarray_to_vector2< long >, (bp::arg("inst_ndarray")) );;
    }

}

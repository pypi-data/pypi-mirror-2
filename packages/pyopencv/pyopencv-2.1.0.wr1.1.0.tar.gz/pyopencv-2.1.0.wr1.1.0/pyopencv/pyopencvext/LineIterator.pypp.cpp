// This file has been generated by Py++.

#include "boost/python.hpp"
#include "__ctypes_integration.pypp.hpp"
#include "opencv_headers.hpp"
#include "LineIterator.pypp.hpp"

namespace bp = boost::python;

void register_LineIterator_class(){

    bp::class_< sdopencv::LineIterator >( "LineIterator", "\nClass for iterating pixels on a raster line."
    "\n"
    "\nIn PyOpenCV, LineIterator is a Python iterator which returns Point "
    "\n(instead of pixel address as in OpenCV) at every iteration."
    "\nReference:"
    "\n    http://opencv.willowgarage.com/documentation/cpp/drawing_functions.html#lineiterator", bp::init< cv::Mat const &, cv::Point const &, cv::Point const &, bp::optional< int, bool > >(( bp::arg("img"), bp::arg("pt1"), bp::arg("pt2"), bp::arg("connectivity")=(int)(8), bp::arg("leftToRight")=(bool)(false) )) )    
        .add_property( "this", pyplus_conv::make_addressof_inst_getter< sdopencv::LineIterator >(), "\nClass for iterating pixels on a raster line."
    "\n"
    "\nIn PyOpenCV, LineIterator is a Python iterator which returns Point "
    "\n(instead of pixel address as in OpenCV) at every iteration."
    "\nReference:"
    "\n    http://opencv.willowgarage.com/documentation/cpp/drawing_functions.html#lineiterator" )    
        .def( 
            "__iter__"
            , (::sdopencv::LineIterator const & ( sdopencv::LineIterator::* )(  ) )( &::sdopencv::LineIterator::iter )
            , bp::return_value_policy< bp::copy_const_reference >()
            , "\nWrapped function:"
    "\n    iter" )    
        .def( 
            "next"
            , (::cv::Point ( sdopencv::LineIterator::* )(  ) )( &::sdopencv::LineIterator::next ) );

}

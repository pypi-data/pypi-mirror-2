// This file has been generated by Py++.

#include "boost/python.hpp"
#include "opencv_headers.hpp"
#include "pyopencvext_free_functions_gett.pypp.hpp"

namespace bp = boost::python;

void register_free_functions_gett(){

    { //::cvGetThreadNum
    
        typedef int ( *getThreadNum_function_type )(  );
        
        bp::def( 
            "getThreadNum"
            , getThreadNum_function_type( &::cvGetThreadNum )
            , "\nWrapped function:"
    "\n    cvGetThreadNum" );
    
    }

    { //::cvGetTickCount
    
        typedef ::int64 ( *getTickCount_function_type )(  );
        
        bp::def( 
            "getTickCount"
            , getTickCount_function_type( &::cvGetTickCount )
            , "\nWrapped function:"
    "\n    cvGetTickCount" );
    
    }

    { //::cvGetTickFrequency
    
        typedef double ( *getTickFrequency_function_type )(  );
        
        bp::def( 
            "getTickFrequency"
            , getTickFrequency_function_type( &::cvGetTickFrequency )
            , "\nWrapped function:"
    "\n    cvGetTickFrequency" );
    
    }

    { //::cv::getThreadNum
    
        typedef int ( *getThreadNum_function_type )(  );
        
        bp::def( 
            "getThreadNum"
            , getThreadNum_function_type( &::cv::getThreadNum ) );
    
    }

    { //::cv::getTickCount
    
        typedef ::int64 ( *getTickCount_function_type )(  );
        
        bp::def( 
            "getTickCount"
            , getTickCount_function_type( &::cv::getTickCount ) );
    
    }

    { //::cv::getTickFrequency
    
        typedef double ( *getTickFrequency_function_type )(  );
        
        bp::def( 
            "getTickFrequency"
            , getTickFrequency_function_type( &::cv::getTickFrequency ) );
    
    }

    { //::cv::getTrackbarPos
    
        typedef int ( *getTrackbarPos_function_type )( ::std::string const &,::std::string const & );
        
        bp::def( 
            "getTrackbarPos"
            , getTrackbarPos_function_type( &::cv::getTrackbarPos )
            , ( bp::arg("trackbarname"), bp::arg("winname") )
            , "\nReturns the trackbar position."
    "\nReference:"
    "\n    http://opencv.willowgarage.com/documentation/cpp/user_interface.html#cv-gettrackbarpos" );
    
    }

}

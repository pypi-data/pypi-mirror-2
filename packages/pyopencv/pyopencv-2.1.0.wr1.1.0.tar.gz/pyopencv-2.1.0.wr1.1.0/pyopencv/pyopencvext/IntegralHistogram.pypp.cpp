// This file has been generated by Py++.

#include "boost/python.hpp"
#include "__ctypes_integration.pypp.hpp"
#include "opencv_headers.hpp"
#include "IntegralHistogram.pypp.hpp"

namespace bp = boost::python;

void register_IntegralHistogram_class(){

    bp::class_< sdopencv::IntegralHistogram >( "IntegralHistogram", bp::init< int, std::vector< float > const &, bp::optional< bool > >(( bp::arg("histSize"), bp::arg("ranges"), bp::arg("uniform")=(bool)(true) )) )    
        .add_property( "this", pyplus_conv::make_addressof_inst_getter< sdopencv::IntegralHistogram >() )    
        .def( 
            "calcHist"
            , (void ( sdopencv::IntegralHistogram::* )( ::cv::Rect,::std::vector< int > & ) )( &::sdopencv::IntegralHistogram::calcHist )
            , ( bp::arg("rect"), bp::arg("out_hist") ) )    
        .def( 
            "get_index"
            , (int ( sdopencv::IntegralHistogram::* )( float ) )( &::sdopencv::IntegralHistogram::get_index )
            , ( bp::arg("value") ) )    
        .def( 
            "__call__"
            , (void ( sdopencv::IntegralHistogram::* )( ::cv::Mat const & ) )( &::sdopencv::IntegralHistogram::operator() )
            , ( bp::arg("image") )
            , "\nWrapped function:"
    "\n    operator()" );

}

// This file has been generated by Py++.

#include "boost/python.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
#include "opencv_headers.hpp"
#include "vector_uint16.pypp.hpp"

namespace bp = boost::python;

static inline void resize(::std::vector< unsigned short > &inst, size_t num) { inst.resize(num); }

void register_vector_uint16_class(){

    { //::std::vector< unsigned short >
        typedef bp::class_< std::vector< unsigned short > > vector_uint16_exposer_t;
        vector_uint16_exposer_t vector_uint16_exposer = vector_uint16_exposer_t( "vector_uint16" );
        bp::scope vector_uint16_scope( vector_uint16_exposer );
        vector_uint16_exposer.def( bp::vector_indexing_suite< ::std::vector< unsigned short >, true >() );
        vector_uint16_exposer.def("resize", &::resize, ( bp::arg("num") ));
    }

}

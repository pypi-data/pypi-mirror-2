// This file has been generated by Py++.

#include "boost/python.hpp"
#include "__ctypes_integration.pypp.hpp"
#include "opencv_headers.hpp"
#include "boost/python/object.hpp"
#include "boost/python/str.hpp"
#include "CvSeqBlock.pypp.hpp"

namespace bp = boost::python;

static ::CvSeqBlock * get_prev( ::CvSeqBlock const & inst ) { return inst.prev; }

static ::CvSeqBlock * get_next( ::CvSeqBlock const & inst ) { return inst.next; }

static bp::object get_data( ::CvSeqBlock const & inst ){        
    return inst.data? bp::str(inst.data): bp::object();
}

void register_CvSeqBlock_class(){

    bp::class_< CvSeqBlock >( "CvSeqBlock" )    
        .add_property( "this", pyplus_conv::make_addressof_inst_getter< CvSeqBlock >() )    
        .def_readwrite( "count", &CvSeqBlock::count )    
        .def_readwrite( "start_index", &CvSeqBlock::start_index )    
        .add_property( "prev", bp::make_function(&::get_prev, bp::return_internal_reference<>()) )    
        .add_property( "next", bp::make_function(&::get_next, bp::return_internal_reference<>()) )    
        .add_property( "data", &::get_data );

}

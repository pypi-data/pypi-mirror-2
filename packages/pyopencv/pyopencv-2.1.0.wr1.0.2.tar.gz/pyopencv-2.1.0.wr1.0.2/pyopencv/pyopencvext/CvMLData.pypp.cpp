// This file has been generated by Py++.

#include "boost/python.hpp"
#include "__ctypes_integration.pypp.hpp"
#include "opencv_headers.hpp"
#include "CvMLData.pypp.hpp"

namespace bp = boost::python;

void register_CvMLData_class(){

    bp::class_< CvMLData >( "CvMLData", bp::init< >() )    
        .add_property( "this", pyplus_conv::make_addressof_inst_getter< CvMLData >() )    
        .def( 
            "chahge_var_idx"
            , (void ( ::CvMLData::* )( int,bool ) )( &::CvMLData::chahge_var_idx )
            , ( bp::arg("vi"), bp::arg("state") ) )    
        .def( 
            "change_var_type"
            , (void ( ::CvMLData::* )( int,int ) )( &::CvMLData::change_var_type )
            , ( bp::arg("var_idx"), bp::arg("type") ) )    
        .def( 
            "get_delimiter"
            , (char ( ::CvMLData::* )(  ) )( &::CvMLData::get_delimiter ) )    
        .def( 
            "get_miss_ch"
            , (char ( ::CvMLData::* )(  ) )( &::CvMLData::get_miss_ch ) )    
        .def( 
            "get_missing"
            , (::CvMat const * ( ::CvMLData::* )(  ) )( &::CvMLData::get_missing )
            , bp::return_internal_reference< >() )    
        .def( 
            "get_response_idx"
            , (int ( ::CvMLData::* )(  ) )( &::CvMLData::get_response_idx ) )    
        .def( 
            "get_responses"
            , (::CvMat const * ( ::CvMLData::* )(  ) )( &::CvMLData::get_responses )
            , bp::return_internal_reference< >() )    
        .def( 
            "get_test_sample_idx"
            , (::CvMat const * ( ::CvMLData::* )(  ) )( &::CvMLData::get_test_sample_idx )
            , bp::return_internal_reference< >() )    
        .def( 
            "get_train_sample_idx"
            , (::CvMat const * ( ::CvMLData::* )(  ) )( &::CvMLData::get_train_sample_idx )
            , bp::return_internal_reference< >() )    
        .def( 
            "get_values"
            , (::CvMat const * ( ::CvMLData::* )(  ) )( &::CvMLData::get_values )
            , bp::return_internal_reference< >() )    
        .def( 
            "get_var_idx"
            , (::CvMat const * ( ::CvMLData::* )(  ) )( &::CvMLData::get_var_idx )
            , bp::return_internal_reference< >() )    
        .def( 
            "get_var_type"
            , (int ( ::CvMLData::* )( int ) )( &::CvMLData::get_var_type )
            , ( bp::arg("var_idx") ) )    
        .def( 
            "get_var_types"
            , (::CvMat const * ( ::CvMLData::* )(  ) )( &::CvMLData::get_var_types )
            , bp::return_internal_reference< >() )    
        .def( 
            "mix_train_and_test_idx"
            , (void ( ::CvMLData::* )(  ) )( &::CvMLData::mix_train_and_test_idx ) )    
        .def( 
            "read_csv"
            , (int ( ::CvMLData::* )( char const * ) )( &::CvMLData::read_csv )
            , ( bp::arg("filename") ) )    
        .def( 
            "set_delimiter"
            , (void ( ::CvMLData::* )( char ) )( &::CvMLData::set_delimiter )
            , ( bp::arg("ch") ) )    
        .def( 
            "set_miss_ch"
            , (void ( ::CvMLData::* )( char ) )( &::CvMLData::set_miss_ch )
            , ( bp::arg("ch") ) )    
        .def( 
            "set_response_idx"
            , (void ( ::CvMLData::* )( int ) )( &::CvMLData::set_response_idx )
            , ( bp::arg("idx") ) )    
        .def( 
            "set_train_test_split"
            , (void ( ::CvMLData::* )( ::CvTrainTestSplit const * ) )( &::CvMLData::set_train_test_split )
            , ( bp::arg("spl") ) )    
        .def( 
            "set_var_types"
            , (void ( ::CvMLData::* )( char const * ) )( &::CvMLData::set_var_types )
            , ( bp::arg("str") ) );

}

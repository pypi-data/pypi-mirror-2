// This file has been generated by Py++.

#include "boost/python.hpp"
#include "opencv_headers.hpp"
#include "pyopencvext_free_functions_sc.pypp.hpp"

namespace bp = boost::python;

void register_free_functions_sc(){

    { //::cv::Scharr
    
        typedef void ( *Scharr_function_type )( ::cv::Mat const &,::cv::Mat &,int,int,int,double,double,int );
        
        bp::def( 
            "Scharr"
            , Scharr_function_type( &::cv::Scharr )
            , ( bp::arg("src"), bp::arg("dst"), bp::arg("ddepth"), bp::arg("dx"), bp::arg("dy"), bp::arg("scale")=1, bp::arg("delta")=0, bp::arg("borderType")=int(::cv::BORDER_REFLECT_101) ) );
    
    }

    { //::cv::scaleAdd
    
        typedef void ( *scaleAdd_function_type )( ::cv::MatND const &,double,::cv::MatND const &,::cv::MatND & );
        
        bp::def( 
            "scaleAdd"
            , scaleAdd_function_type( &::cv::scaleAdd )
            , ( bp::arg("a"), bp::arg("alpha"), bp::arg("b"), bp::arg("c") )
            , "\nCalculates the sum of a scaled array and another array."
    "\nReference:"
    "\n    http://opencv.willowgarage.com/documentation/cpp/operations_on_arrays.html#cv-scaleadd" );
    
    }

    { //::cv::scaleAdd
    
        typedef void ( *scaleAdd_function_type )( ::cv::Mat const &,double,::cv::Mat const &,::cv::Mat & );
        
        bp::def( 
            "scaleAdd"
            , scaleAdd_function_type( &::cv::scaleAdd )
            , ( bp::arg("a"), bp::arg("alpha"), bp::arg("b"), bp::arg("c") )
            , "\nCalculates the sum of a scaled array and another array."
    "\nReference:"
    "\n    http://opencv.willowgarage.com/documentation/cpp/operations_on_arrays.html#cv-scaleadd" );
    
    }

}

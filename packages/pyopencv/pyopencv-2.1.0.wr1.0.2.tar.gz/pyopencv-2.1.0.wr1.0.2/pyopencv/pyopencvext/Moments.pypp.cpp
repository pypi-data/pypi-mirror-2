// This file has been generated by Py++.

#include "boost/python.hpp"
#include "__ctypes_integration.pypp.hpp"
#include "opencv_headers.hpp"
#include "Moments.pypp.hpp"

namespace bp = boost::python;

void register_Moments_class(){

    bp::class_< cv::Moments >( "Moments", bp::init< >() )    
        .add_property( "this", pyplus_conv::make_addressof_inst_getter< cv::Moments >() )    
        .def( bp::init< double, double, double, double, double, double, double, double, double, double >(( bp::arg("m00"), bp::arg("m10"), bp::arg("m01"), bp::arg("m20"), bp::arg("m11"), bp::arg("m02"), bp::arg("m30"), bp::arg("m21"), bp::arg("m12"), bp::arg("m03") )) )    
        .def_readwrite( "m00", &cv::Moments::m00 )    
        .def_readwrite( "m01", &cv::Moments::m01 )    
        .def_readwrite( "m02", &cv::Moments::m02 )    
        .def_readwrite( "m03", &cv::Moments::m03 )    
        .def_readwrite( "m10", &cv::Moments::m10 )    
        .def_readwrite( "m11", &cv::Moments::m11 )    
        .def_readwrite( "m12", &cv::Moments::m12 )    
        .def_readwrite( "m20", &cv::Moments::m20 )    
        .def_readwrite( "m21", &cv::Moments::m21 )    
        .def_readwrite( "m30", &cv::Moments::m30 )    
        .def_readwrite( "mu02", &cv::Moments::mu02 )    
        .def_readwrite( "mu03", &cv::Moments::mu03 )    
        .def_readwrite( "mu11", &cv::Moments::mu11 )    
        .def_readwrite( "mu12", &cv::Moments::mu12 )    
        .def_readwrite( "mu20", &cv::Moments::mu20 )    
        .def_readwrite( "mu21", &cv::Moments::mu21 )    
        .def_readwrite( "mu30", &cv::Moments::mu30 )    
        .def_readwrite( "nu02", &cv::Moments::nu02 )    
        .def_readwrite( "nu03", &cv::Moments::nu03 )    
        .def_readwrite( "nu11", &cv::Moments::nu11 )    
        .def_readwrite( "nu12", &cv::Moments::nu12 )    
        .def_readwrite( "nu20", &cv::Moments::nu20 )    
        .def_readwrite( "nu21", &cv::Moments::nu21 )    
        .def_readwrite( "nu30", &cv::Moments::nu30 );

}

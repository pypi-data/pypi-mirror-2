// This file has been generated by Py++.

#include "boost/python.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
#include "opencv_headers.hpp"
#include "vector_long.pypp.hpp"

namespace bp = boost::python;

static inline void resize(::std::vector< long > &inst, size_t num) { inst.resize(num); }

void register_vector_long_class(){

    { //::std::vector< long >
        typedef bp::class_< std::vector< long > > vector_long_exposer_t;
        vector_long_exposer_t vector_long_exposer = vector_long_exposer_t( "vector_long" );
        bp::scope vector_long_scope( vector_long_exposer );
        vector_long_exposer.def( bp::vector_indexing_suite< ::std::vector< long >, true >() );
        vector_long_exposer.def("resize", &::resize, ( bp::arg("num") ));
    }

}

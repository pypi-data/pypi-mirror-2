// This file has been generated by Py++.

#include "boost/python.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
#include "cxcore_hpp_point_wrapper.hpp"
#include "opencv_headers.hpp"
#include "cxcore_hpp_point_ext_classes_1.pypp.hpp"

namespace bp = boost::python;

static inline void vector_vector_Point2i_resize(::std::vector< std::vector< cv::Point_<int> > > &inst, size_t num) { inst.resize(num); }

static inline void vector_vector_Point2f_resize(::std::vector< std::vector< cv::Point_<float> > > &inst, size_t num) { inst.resize(num); }

static inline void vector_vector_Point2d_resize(::std::vector< std::vector< cv::Point_<double> > > &inst, size_t num) { inst.resize(num); }

static inline void vector_vector_Point3i_resize(::std::vector< std::vector< cv::Point3_<int> > > &inst, size_t num) { inst.resize(num); }

static inline void vector_vector_Point3f_resize(::std::vector< std::vector< cv::Point3_<float> > > &inst, size_t num) { inst.resize(num); }

static inline void vector_vector_Point3d_resize(::std::vector< std::vector< cv::Point3_<double> > > &inst, size_t num) { inst.resize(num); }

static inline void vector_Ptr_Mat_resize(::std::vector< cv::Ptr<cv::Mat> > &inst, size_t num) { inst.resize(num); }

static inline void vector_Point2i_resize(::std::vector< cv::Point_<int> > &inst, size_t num) { inst.resize(num); }

void register_classes_1(){

    { //::std::vector< std::vector< cv::Point_<int> > >
        typedef bp::class_< std::vector< std::vector< cv::Point_<int> > > > vector_vector_Point2i_exposer_t;
        vector_vector_Point2i_exposer_t vector_vector_Point2i_exposer = vector_vector_Point2i_exposer_t( "vector_vector_Point2i" );
        bp::scope vector_vector_Point2i_scope( vector_vector_Point2i_exposer );
        //WARNING: the next line of code will not compile, because "std::vector<cv::Point_<int> >" does not have operator== !
        vector_vector_Point2i_exposer.def( bp::vector_indexing_suite< ::std::vector< std::vector< cv::Point_<int> > > >() );
        vector_vector_Point2i_exposer.def("resize", &::vector_vector_Point2i_resize, ( bp::arg("num") ));
    }

    { //::std::vector< std::vector< cv::Point_<float> > >
        typedef bp::class_< std::vector< std::vector< cv::Point_<float> > > > vector_vector_Point2f_exposer_t;
        vector_vector_Point2f_exposer_t vector_vector_Point2f_exposer = vector_vector_Point2f_exposer_t( "vector_vector_Point2f" );
        bp::scope vector_vector_Point2f_scope( vector_vector_Point2f_exposer );
        //WARNING: the next line of code will not compile, because "std::vector<cv::Point_<float> >" does not have operator== !
        vector_vector_Point2f_exposer.def( bp::vector_indexing_suite< ::std::vector< std::vector< cv::Point_<float> > > >() );
        vector_vector_Point2f_exposer.def("resize", &::vector_vector_Point2f_resize, ( bp::arg("num") ));
    }

    { //::std::vector< std::vector< cv::Point_<double> > >
        typedef bp::class_< std::vector< std::vector< cv::Point_<double> > > > vector_vector_Point2d_exposer_t;
        vector_vector_Point2d_exposer_t vector_vector_Point2d_exposer = vector_vector_Point2d_exposer_t( "vector_vector_Point2d" );
        bp::scope vector_vector_Point2d_scope( vector_vector_Point2d_exposer );
        //WARNING: the next line of code will not compile, because "std::vector<cv::Point_<double> >" does not have operator== !
        vector_vector_Point2d_exposer.def( bp::vector_indexing_suite< ::std::vector< std::vector< cv::Point_<double> > > >() );
        vector_vector_Point2d_exposer.def("resize", &::vector_vector_Point2d_resize, ( bp::arg("num") ));
    }

    { //::std::vector< std::vector< cv::Point3_<int> > >
        typedef bp::class_< std::vector< std::vector< cv::Point3_<int> > > > vector_vector_Point3i_exposer_t;
        vector_vector_Point3i_exposer_t vector_vector_Point3i_exposer = vector_vector_Point3i_exposer_t( "vector_vector_Point3i" );
        bp::scope vector_vector_Point3i_scope( vector_vector_Point3i_exposer );
        //WARNING: the next line of code will not compile, because "std::vector<cv::Point3_<int> >" does not have operator== !
        vector_vector_Point3i_exposer.def( bp::vector_indexing_suite< ::std::vector< std::vector< cv::Point3_<int> > > >() );
        vector_vector_Point3i_exposer.def("resize", &::vector_vector_Point3i_resize, ( bp::arg("num") ));
    }

    { //::std::vector< std::vector< cv::Point3_<float> > >
        typedef bp::class_< std::vector< std::vector< cv::Point3_<float> > > > vector_vector_Point3f_exposer_t;
        vector_vector_Point3f_exposer_t vector_vector_Point3f_exposer = vector_vector_Point3f_exposer_t( "vector_vector_Point3f" );
        bp::scope vector_vector_Point3f_scope( vector_vector_Point3f_exposer );
        //WARNING: the next line of code will not compile, because "std::vector<cv::Point3_<float> >" does not have operator== !
        vector_vector_Point3f_exposer.def( bp::vector_indexing_suite< ::std::vector< std::vector< cv::Point3_<float> > > >() );
        vector_vector_Point3f_exposer.def("resize", &::vector_vector_Point3f_resize, ( bp::arg("num") ));
    }

    { //::std::vector< std::vector< cv::Point3_<double> > >
        typedef bp::class_< std::vector< std::vector< cv::Point3_<double> > > > vector_vector_Point3d_exposer_t;
        vector_vector_Point3d_exposer_t vector_vector_Point3d_exposer = vector_vector_Point3d_exposer_t( "vector_vector_Point3d" );
        bp::scope vector_vector_Point3d_scope( vector_vector_Point3d_exposer );
        //WARNING: the next line of code will not compile, because "std::vector<cv::Point3_<double> >" does not have operator== !
        vector_vector_Point3d_exposer.def( bp::vector_indexing_suite< ::std::vector< std::vector< cv::Point3_<double> > > >() );
        vector_vector_Point3d_exposer.def("resize", &::vector_vector_Point3d_resize, ( bp::arg("num") ));
    }

    { //::std::vector< cv::Ptr<cv::Mat> >
        typedef bp::class_< std::vector< cv::Ptr<cv::Mat> > > vector_Ptr_Mat_exposer_t;
        vector_Ptr_Mat_exposer_t vector_Ptr_Mat_exposer = vector_Ptr_Mat_exposer_t( "vector_Ptr_Mat" );
        bp::scope vector_Ptr_Mat_scope( vector_Ptr_Mat_exposer );
        //WARNING: the next line of code will not compile, because "cv::Ptr<cv::Mat>" does not have operator== !
        vector_Ptr_Mat_exposer.def( bp::vector_indexing_suite< ::std::vector< cv::Ptr<cv::Mat> > >() );
        vector_Ptr_Mat_exposer.def("resize", &::vector_Ptr_Mat_resize, ( bp::arg("num") ));
    }

    { //::std::vector< cv::Point_<int> >
        typedef bp::class_< std::vector< cv::Point_<int> > > vector_Point2i_exposer_t;
        vector_Point2i_exposer_t vector_Point2i_exposer = vector_Point2i_exposer_t( "vector_Point2i" );
        bp::scope vector_Point2i_scope( vector_Point2i_exposer );
        //WARNING: the next line of code will not compile, because "cv::Point_<int>" does not have operator== !
        vector_Point2i_exposer.def( bp::vector_indexing_suite< ::std::vector< cv::Point_<int> > >() );
        vector_Point2i_exposer.def("resize", &::vector_Point2i_resize, ( bp::arg("num") ));
    }

}

// This file has been generated by Py++.

#include "boost/python.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
#include "cxcore_hpp_wrapper.hpp"
#include "opencv_headers.hpp"
#include "cxcore_hpp_ext_classes_1.pypp.hpp"

namespace bp = boost::python;

static inline void vector_Size2i_resize(::std::vector< cv::Size_<int> > &inst, size_t num) { inst.resize(num); }

static inline void vector_Size2f_resize(::std::vector< cv::Size_<float> > &inst, size_t num) { inst.resize(num); }

static inline void vector_RotatedRect_resize(::std::vector< cv::RotatedRect > &inst, size_t num) { inst.resize(num); }

static inline void vector_Rect_resize(::std::vector< cv::Rect_<int> > &inst, size_t num) { inst.resize(num); }

static inline void vector_KDTree_Node_resize(::std::vector< cv::KDTree::Node > &inst, size_t num) { inst.resize(num); }

void register_classes_1(){

    { //::std::vector< cv::Size_<int> >
        typedef bp::class_< std::vector< cv::Size_<int> > > vector_Size2i_exposer_t;
        vector_Size2i_exposer_t vector_Size2i_exposer = vector_Size2i_exposer_t( "vector_Size2i" );
        bp::scope vector_Size2i_scope( vector_Size2i_exposer );
        //WARNING: the next line of code will not compile, because "cv::Size_<int>" does not have operator== !
        vector_Size2i_exposer.def( bp::vector_indexing_suite< ::std::vector< cv::Size_<int> > >() );
        vector_Size2i_exposer.def("resize", &::vector_Size2i_resize, ( bp::arg("num") ));
    }

    { //::std::vector< cv::Size_<float> >
        typedef bp::class_< std::vector< cv::Size_<float> > > vector_Size2f_exposer_t;
        vector_Size2f_exposer_t vector_Size2f_exposer = vector_Size2f_exposer_t( "vector_Size2f" );
        bp::scope vector_Size2f_scope( vector_Size2f_exposer );
        //WARNING: the next line of code will not compile, because "cv::Size_<float>" does not have operator== !
        vector_Size2f_exposer.def( bp::vector_indexing_suite< ::std::vector< cv::Size_<float> > >() );
        vector_Size2f_exposer.def("resize", &::vector_Size2f_resize, ( bp::arg("num") ));
    }

    { //::std::vector< cv::RotatedRect >
        typedef bp::class_< std::vector< cv::RotatedRect > > vector_RotatedRect_exposer_t;
        vector_RotatedRect_exposer_t vector_RotatedRect_exposer = vector_RotatedRect_exposer_t( "vector_RotatedRect" );
        bp::scope vector_RotatedRect_scope( vector_RotatedRect_exposer );
        //WARNING: the next line of code will not compile, because "cv::RotatedRect" does not have operator== !
        vector_RotatedRect_exposer.def( bp::vector_indexing_suite< ::std::vector< cv::RotatedRect > >() );
        vector_RotatedRect_exposer.def("resize", &::vector_RotatedRect_resize, ( bp::arg("num") ));
    }

    { //::std::vector< cv::Rect_<int> >
        typedef bp::class_< std::vector< cv::Rect_<int> > > vector_Rect_exposer_t;
        vector_Rect_exposer_t vector_Rect_exposer = vector_Rect_exposer_t( "vector_Rect" );
        bp::scope vector_Rect_scope( vector_Rect_exposer );
        //WARNING: the next line of code will not compile, because "cv::Rect_<int>" does not have operator== !
        vector_Rect_exposer.def( bp::vector_indexing_suite< ::std::vector< cv::Rect_<int> > >() );
        vector_Rect_exposer.def("resize", &::vector_Rect_resize, ( bp::arg("num") ));
    }

    { //::std::vector< cv::KDTree::Node >
        typedef bp::class_< std::vector< cv::KDTree::Node > > vector_KDTree_Node_exposer_t;
        vector_KDTree_Node_exposer_t vector_KDTree_Node_exposer = vector_KDTree_Node_exposer_t( "vector_KDTree_Node" );
        bp::scope vector_KDTree_Node_scope( vector_KDTree_Node_exposer );
        //WARNING: the next line of code will not compile, because "cv::KDTree::Node" does not have operator== !
        vector_KDTree_Node_exposer.def( bp::vector_indexing_suite< ::std::vector< cv::KDTree::Node > >() );
        vector_KDTree_Node_exposer.def("resize", &::vector_KDTree_Node_resize, ( bp::arg("num") ));
    }

}

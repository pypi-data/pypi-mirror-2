// This file has been generated by Py++.

#include "boost/python.hpp"
#include "cxtypes_h_wrapper.hpp"
#include "cxtypes_h_ext_global_variables.pypp.hpp"

namespace bp = boost::python;

void register_global_variables(){

    bp::scope().attr("DECOMP_LU") = (int)cv::DECOMP_LU;
    bp::scope().attr("DECOMP_SVD") = (int)cv::DECOMP_SVD;
    bp::scope().attr("DECOMP_EIG") = (int)cv::DECOMP_EIG;
    bp::scope().attr("DECOMP_CHOLESKY") = (int)cv::DECOMP_CHOLESKY;
    bp::scope().attr("DECOMP_QR") = (int)cv::DECOMP_QR;
    bp::scope().attr("DECOMP_NORMAL") = (int)cv::DECOMP_NORMAL;

    bp::scope().attr("GEMM_1_T") = (int)cv::GEMM_1_T;
    bp::scope().attr("GEMM_2_T") = (int)cv::GEMM_2_T;
    bp::scope().attr("GEMM_3_T") = (int)cv::GEMM_3_T;

    bp::scope().attr("DFT_INVERSE") = (int)cv::DFT_INVERSE;
    bp::scope().attr("DFT_SCALE") = (int)cv::DFT_SCALE;
    bp::scope().attr("DFT_ROWS") = (int)cv::DFT_ROWS;
    bp::scope().attr("DFT_COMPLEX_OUTPUT") = (int)cv::DFT_COMPLEX_OUTPUT;
    bp::scope().attr("DFT_REAL_OUTPUT") = (int)cv::DFT_REAL_OUTPUT;
    bp::scope().attr("DCT_INVERSE") = (int)cv::DCT_INVERSE;
    bp::scope().attr("DCT_ROWS") = (int)cv::DCT_ROWS;

    bp::scope().attr("KMEANS_RANDOM_CENTERS") = (int)cv::KMEANS_RANDOM_CENTERS;
    bp::scope().attr("KMEANS_PP_CENTERS") = (int)cv::KMEANS_PP_CENTERS;
    bp::scope().attr("KMEANS_USE_INITIAL_LABELS") = (int)cv::KMEANS_USE_INITIAL_LABELS;

    bp::scope().attr("MAGIC_MASK") = (int)cv::MAGIC_MASK;
    bp::scope().attr("TYPE_MASK") = (int)cv::TYPE_MASK;
    bp::scope().attr("DEPTH_MASK") = (int)cv::DEPTH_MASK;

    bp::scope().attr("NORM_INF") = (int)cv::NORM_INF;
    bp::scope().attr("NORM_L1") = (int)cv::NORM_L1;
    bp::scope().attr("NORM_L2") = (int)cv::NORM_L2;
    bp::scope().attr("NORM_TYPE_MASK") = (int)cv::NORM_TYPE_MASK;
    bp::scope().attr("NORM_RELATIVE") = (int)cv::NORM_RELATIVE;
    bp::scope().attr("NORM_MINMAX") = (int)cv::NORM_MINMAX;

    bp::scope().attr("CMP_EQ") = (int)cv::CMP_EQ;
    bp::scope().attr("CMP_GT") = (int)cv::CMP_GT;
    bp::scope().attr("CMP_GE") = (int)cv::CMP_GE;
    bp::scope().attr("CMP_LT") = (int)cv::CMP_LT;
    bp::scope().attr("CMP_LE") = (int)cv::CMP_LE;
    bp::scope().attr("CMP_NE") = (int)cv::CMP_NE;

    bp::scope().attr("FONT_HERSHEY_SIMPLEX") = (int)cv::FONT_HERSHEY_SIMPLEX;
    bp::scope().attr("FONT_HERSHEY_PLAIN") = (int)cv::FONT_HERSHEY_PLAIN;
    bp::scope().attr("FONT_HERSHEY_DUPLEX") = (int)cv::FONT_HERSHEY_DUPLEX;
    bp::scope().attr("FONT_HERSHEY_COMPLEX") = (int)cv::FONT_HERSHEY_COMPLEX;
    bp::scope().attr("FONT_HERSHEY_TRIPLEX") = (int)cv::FONT_HERSHEY_TRIPLEX;
    bp::scope().attr("FONT_HERSHEY_COMPLEX_SMALL") = (int)cv::FONT_HERSHEY_COMPLEX_SMALL;
    bp::scope().attr("FONT_HERSHEY_SCRIPT_SIMPLEX") = (int)cv::FONT_HERSHEY_SCRIPT_SIMPLEX;
    bp::scope().attr("FONT_HERSHEY_SCRIPT_COMPLEX") = (int)cv::FONT_HERSHEY_SCRIPT_COMPLEX;
    bp::scope().attr("FONT_ITALIC") = (int)cv::FONT_ITALIC;

}

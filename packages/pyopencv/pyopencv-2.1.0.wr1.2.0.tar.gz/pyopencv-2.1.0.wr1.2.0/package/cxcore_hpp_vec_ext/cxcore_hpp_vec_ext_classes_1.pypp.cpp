// This file has been generated by Py++.

#include "boost/python.hpp"
#include "boost/python/suite/indexing/vector_indexing_suite.hpp"
#include "cxcore_hpp_vec_wrapper.hpp"
#include "opencv_headers.hpp"
#include "cxcore_hpp_vec_ext_classes_1.pypp.hpp"

namespace bp = boost::python;

static inline void vector_vector_Vec2i_resize(::std::vector< std::vector< cv::Vec<int, 2> > > &inst, size_t num) { inst.resize(num); }

static inline void vector_Vec4w_resize(::std::vector< cv::Vec<unsigned short, 4> > &inst, size_t num) { inst.resize(num); }

static inline void vector_Vec3w_resize(::std::vector< cv::Vec<unsigned short, 3> > &inst, size_t num) { inst.resize(num); }

static inline void vector_Vec2w_resize(::std::vector< cv::Vec<unsigned short, 2> > &inst, size_t num) { inst.resize(num); }

static inline void vector_Vec4b_resize(::std::vector< cv::Vec<unsigned char, 4> > &inst, size_t num) { inst.resize(num); }

void register_classes_1(){

    { //::std::vector< std::vector< cv::Vec<int, 2> > >
        typedef bp::class_< std::vector< std::vector< cv::Vec<int, 2> > > > vector_vector_Vec2i_exposer_t;
        vector_vector_Vec2i_exposer_t vector_vector_Vec2i_exposer = vector_vector_Vec2i_exposer_t( "vector_vector_Vec2i" );
        bp::scope vector_vector_Vec2i_scope( vector_vector_Vec2i_exposer );
        //WARNING: the next line of code will not compile, because "std::vector<cv::Vec<int,2> >" does not have operator== !
        vector_vector_Vec2i_exposer.def( bp::vector_indexing_suite< ::std::vector< std::vector< cv::Vec<int, 2> > > >() );
        vector_vector_Vec2i_exposer.def("resize", &::vector_vector_Vec2i_resize, ( bp::arg("num") ));
    }

    { //::std::vector< cv::Vec<unsigned short, 4> >
        typedef bp::class_< std::vector< cv::Vec<unsigned short, 4> > > vector_Vec4w_exposer_t;
        vector_Vec4w_exposer_t vector_Vec4w_exposer = vector_Vec4w_exposer_t( "vector_Vec4w" );
        bp::scope vector_Vec4w_scope( vector_Vec4w_exposer );
        //WARNING: the next line of code will not compile, because "cv::Vec<unsigned short,4>" does not have operator== !
        vector_Vec4w_exposer.def( bp::vector_indexing_suite< ::std::vector< cv::Vec<unsigned short, 4> > >() );
        vector_Vec4w_exposer.def("resize", &::vector_Vec4w_resize, ( bp::arg("num") ));
    }

    { //::std::vector< cv::Vec<unsigned short, 3> >
        typedef bp::class_< std::vector< cv::Vec<unsigned short, 3> > > vector_Vec3w_exposer_t;
        vector_Vec3w_exposer_t vector_Vec3w_exposer = vector_Vec3w_exposer_t( "vector_Vec3w" );
        bp::scope vector_Vec3w_scope( vector_Vec3w_exposer );
        //WARNING: the next line of code will not compile, because "cv::Vec<unsigned short,3>" does not have operator== !
        vector_Vec3w_exposer.def( bp::vector_indexing_suite< ::std::vector< cv::Vec<unsigned short, 3> > >() );
        vector_Vec3w_exposer.def("resize", &::vector_Vec3w_resize, ( bp::arg("num") ));
    }

    { //::std::vector< cv::Vec<unsigned short, 2> >
        typedef bp::class_< std::vector< cv::Vec<unsigned short, 2> > > vector_Vec2w_exposer_t;
        vector_Vec2w_exposer_t vector_Vec2w_exposer = vector_Vec2w_exposer_t( "vector_Vec2w" );
        bp::scope vector_Vec2w_scope( vector_Vec2w_exposer );
        //WARNING: the next line of code will not compile, because "cv::Vec<unsigned short,2>" does not have operator== !
        vector_Vec2w_exposer.def( bp::vector_indexing_suite< ::std::vector< cv::Vec<unsigned short, 2> > >() );
        vector_Vec2w_exposer.def("resize", &::vector_Vec2w_resize, ( bp::arg("num") ));
    }

    { //::std::vector< cv::Vec<unsigned char, 4> >
        typedef bp::class_< std::vector< cv::Vec<unsigned char, 4> > > vector_Vec4b_exposer_t;
        vector_Vec4b_exposer_t vector_Vec4b_exposer = vector_Vec4b_exposer_t( "vector_Vec4b" );
        bp::scope vector_Vec4b_scope( vector_Vec4b_exposer );
        //WARNING: the next line of code will not compile, because "cv::Vec<unsigned char,4>" does not have operator== !
        vector_Vec4b_exposer.def( bp::vector_indexing_suite< ::std::vector< cv::Vec<unsigned char, 4> > >() );
        vector_Vec4b_exposer.def("resize", &::vector_Vec4b_resize, ( bp::arg("num") ));
    }

}

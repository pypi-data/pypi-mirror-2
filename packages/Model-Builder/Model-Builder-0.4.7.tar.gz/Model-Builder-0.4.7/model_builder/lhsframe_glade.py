Obrigado #!/usr/bin/env python
# -*- coding: ISO-8859-1 -*-
# generated by wxGlade 0.3.5.1 on Thu Aug 31 11:12:37 2006
#import wxversion

import wx
import wx.grid

class wxFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: wxFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)

        # Menu Bar
        self.frame_1_menubar = wx.MenuBar()
        self.SetMenuBar(self.frame_1_menubar)
        wxglade_tmp_menu = wx.Menu()
        self.frame_1_menubar.Append(wxglade_tmp_menu, "File")
        # Menu Bar end
        self.frame_1_statusbar = self.CreateStatusBar(1, wx.ST_SIZEGRIP)
        self.radio_box_1 = wx.RadioBox(self, -1, "Sampling Type", choices=["LHS", "Random"], majorDimension=0, style=wx.RA_SPECIFY_ROWS)
        self.label_1 = wx.StaticText(self, -1, "Analisys type:")
        self.anaChoice = wx.Choice(self, -1, choices=["Sensitivity", "Uncertainty"])
        self.label_8 = wx.StaticText(self, -1, "Data FIle:")
        self.likTC = wx.TextCtrl(self, -1, "")
        self.alphalabel = wx.StaticText(self, -1, "Alpha:")
        self.alphaSlider = wx.Slider(self, -1, 50, 0, 100, style=wx.SL_HORIZONTAL|wx.SL_AUTOTICKS|wx.SL_LABELS|wx.SL_RIGHT)
        self.static_line_1 = wx.StaticLine(self, -1)
        self.sampleLB = wx.StaticText(self, -1, "Samples:")
        self.label_2 = wx.StaticText(self, -1, "Model Parameters")
        self.label_3 = wx.StaticText(self, -1, "Distributions")
        self.label_4 = wx.StaticText(self, -1, "Distributions Parameters")
        self.lixo = wx.StaticText(self, -1, "lixo")
        self.sampleSpin = wx.SpinCtrl(self, -1, "100", min=0, max=10000)
        self.parsCB = wx.ComboBox(self, -1, choices=[], style=wx.CB_DROPDOWN)
        self.distCB = wx.ComboBox(self, -1, choices=[], style=wx.CB_DROPDOWN)
        self.distParsTC = wx.TextCtrl(self, -1, "")
        self.setBtn = wx.Button(self, -1, "Set")
        self.label_6 = wx.StaticText(self, -1, "Log:", style=wx.ALIGN_RIGHT)
        self.logTC = wx.TextCtrl(self, -1, "", style=wx.TE_MULTILINE|wx.HSCROLL)
        self.radio_box_2 = wx.RadioBox(self, -1, "Correlation Control", choices=["Random", "No Correlation", "User-specified"], majorDimension=0, style=wx.RA_SPECIFY_ROWS)
        self.grid_1 = wx.grid.Grid(self, -1, size=(1, 1))
        self.button_2 = wx.Button(self, -1, "OK", style=wx.BU_BOTTOM)
        self.label_7 = wx.StaticText(self, -1, "'     '")
        self.button_3 = wx.Button(self, -1, "Cancel", style=wx.BU_BOTTOM)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: wxFrame.__set_properties
        self.SetTitle("Sensitivity and Uncertainty Analysis")
        self.SetBackgroundColour(wx.Colour(192, 192, 192))
        self.SetForegroundColour(wx.Colour(50, 50, 204))
        self.frame_1_statusbar.SetStatusWidths([-1])
        # statusbar fields
        frame_1_statusbar_fields = ["frame_1_statusbar"]
        for i in range(len(frame_1_statusbar_fields)):
            self.frame_1_statusbar.SetStatusText(frame_1_statusbar_fields[i], i)
        self.radio_box_1.SetSelection(0)
        self.anaChoice.SetToolTipString("Select the type of analysis")
        self.anaChoice.SetSelection(0)
        self.label_8.Enable(False)
        self.likTC.SetToolTipString("Enter the path for your data file")
        self.likTC.Enable(False)
        self.alphalabel.Enable(False)
        self.alphaSlider.SetMinSize((100, 40))
        self.alphaSlider.SetToolTipString("Adjust the value of alpha for the Bayesian Melding analysis.")
        self.alphaSlider.Enable(False)
        self.lixo.Hide()
        self.sampleSpin.SetToolTipString("Enter the number of samples for this analysis")
        self.parsCB.SetToolTipString("Select a parameter to specify.")
        self.parsCB.SetSelection(-1)
        self.distCB.SetToolTipString("Select a distribution for the parameter selected on the left.")
        self.distCB.SetSelection(-1)
        self.distParsTC.SetToolTipString("Select the parameters for the distribution selected on the left.")
        self.setBtn.SetToolTipString("Press to record the specifications selected on the left.")
        self.logTC.SetToolTipString("parameters specifications recorded are listed here")
        self.radio_box_2.SetSelection(0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: wxFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1 = wx.FlexGridSizer(3, 5, 3, 5)
        sizer_4 = wx.GridSizer(1, 7, 0, 0)
        sizer_4.Add(self.radio_box_1, 0, wx.ADJUST_MINSIZE, 0)
        sizer_4.Add(self.label_1, 0, wx.ALIGN_RIGHT|wx.FIXED_MINSIZE, 0)
        sizer_4.Add(self.anaChoice, 0, wx.FIXED_MINSIZE, 0)
        sizer_4.Add(self.label_8, 0, wx.ALIGN_RIGHT|wx.FIXED_MINSIZE, 0)
        sizer_4.Add(self.likTC, 0, wx.FIXED_MINSIZE, 0)
        sizer_4.Add(self.alphalabel, 0, wx.ALIGN_RIGHT|wx.FIXED_MINSIZE, 0)
        sizer_4.Add(self.alphaSlider, 0, wx.FIXED_MINSIZE, 0)
        sizer_1.Add(sizer_4, 0, 0, 0)
        sizer_1.Add(self.static_line_1, 0, wx.EXPAND, 2)
        grid_sizer_1.Add(self.sampleLB, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_2, 0, wx.EXPAND|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_3, 0, wx.EXPAND|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_4, 0, wx.EXPAND|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.lixo, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.sampleSpin, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.parsCB, 0, wx.EXPAND|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.distCB, 0, wx.EXPAND|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.distParsTC, 0, wx.EXPAND|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.setBtn, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_6, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.logTC, 1, wx.EXPAND|wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.AddGrowableRow(2)
        grid_sizer_1.AddGrowableCol(1)
        grid_sizer_1.AddGrowableCol(2)
        grid_sizer_1.AddGrowableCol(3)
        sizer_1.Add(grid_sizer_1, 0, wx.EXPAND, 0)
        sizer_2.Add(self.radio_box_2, 0, wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 0)
        sizer_2.Add(self.grid_1, 1, wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL|wx.FIXED_MINSIZE, 0)
        sizer_1.Add(sizer_2, 1, wx.EXPAND, 1)
        sizer_3.Add(self.button_2, 0, wx.ADJUST_MINSIZE, 0)
        sizer_3.Add(self.label_7, 0, wx.ADJUST_MINSIZE, 0)
        sizer_3.Add(self.button_3, 0, wx.ADJUST_MINSIZE, 0)
        sizer_1.Add(sizer_3, 0, wx.ALIGN_BOTTOM|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        self.SetAutoLayout(True)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        sizer_1.SetSizeHints(self)
        self.Layout()
        # end wxGlade

# end of class wxFrame




if __name__ == '__main__':
    app = wx.PySimpleApp()
    wxFrame(None).Show()
    app.MainLoop()

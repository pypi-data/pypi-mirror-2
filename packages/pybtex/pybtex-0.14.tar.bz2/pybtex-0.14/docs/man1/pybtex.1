.\"Man page for Pybtex (pybtex)
.\"
.\" Generation time: 2010-09-20 10:22:49 +0000
.\" Large parts of this file are autogenerated from the output of
.\"     "pybtex --help"
.\"
.TH pybtex 1 "2010-09-20" "0.14" "Pybtex"

.SH "NAME"
pybtex - BibTeX-compatible bibliography processor in Python
.SH "SYNOPSIS"
.B "pybtex"
[
.I "options"
]
.I "auxfile.aux"
.SH "DESCRIPTION"
Pybtex reads citation information from a LaTeX .aux file and produces a
formatted bibliography. Pybtex understands BibTeX .bib and .bst style files and
can be used as a drop\-in replacement for BibTeX.

Besides BibTeX .bib files, BibTeXML and YAML bibliography files are
supported.

It is also possible to define bibliography formatting styles in Python.
.SH "GENERAL OPTONS"
.TP
.B "\-\-version"
show program's version number and exit
.TP
.B "\-h, \-\-help"
show this help message and exit
.TP
.B "\-f FORMAT, \-\-bibliography\-format=FORMAT"
bibliograpy format (bibtex, bibtexml, bibyaml)
.TP
.B "\-b BACKEND, \-\-output\-backend=BACKEND"
output backend (latex, html, plaintext)
.TP
.B "\-l LANGUAGE, \-\-style\-language=LANGUAGE"
style definition language to use (bibtex or python)
.TP
.B "\-\-label\-style=STYLE"
label formatting style
.TP
.B "\-\-name\-style=STYLE"
name formatting style
.TP
.B "\-\-abbreviate\-names"
use abbreviated name formatting style
.TP
.B "\-\-min\-crossrefs=NUMBER"
include item after NUMBER crossrefs; default 2
.TP
.B "\-\-terse"
ignored for compatibility with BibTeX
.SH "ENCODING OPTIONS"
.TP
.B "\-e ENCODING, \-\-encoding=ENCODING"
default encoding
.TP
.B "\-\-bibtex\-encoding=ENCODING"
.TP
.B "\-\-bst\-encoding=ENCODING"
.TP
.B "\-\-output\-encoding=ENCODING"
.SH "SEE ALSO"
.UR http://pybtex.sourceforge.net/
.BR http://pybtex.sourceforge.net/

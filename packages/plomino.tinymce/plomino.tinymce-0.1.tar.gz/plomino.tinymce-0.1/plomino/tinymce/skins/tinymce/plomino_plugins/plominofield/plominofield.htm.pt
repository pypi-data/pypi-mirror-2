<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:tal="http://xml.zope.org/namespaces/tal" id="region-content" xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" i18n:domain="tinymce">
<head>
	<meta http-equiv="Content-type" content="text/html;charset=UTF-8" /> 
	<title>Add/edit a Plomino Field</title>
	<script type="text/javascript" src="../../tiny_mce_popup.js"></script>
	<script type="text/javascript" src="../../utils/mctabs.js"></script>
	<script type="text/javascript" src="../../utils/form_utils.js"></script>
	<script type="text/javascript" src="js/plominofield.js"></script>
	<link rel="stylesheet" type="text/css" href="css/plominofield.css" />
</head>
<body tal:define="parentpath here/REQUEST/parent|nothing;
                  form python:here.restrictedTraverse('/'.join(parentpath.split('/')[0:-1]));
                  fieldidparam here/REQUEST/fieldid|nothing;
                  fieldid python:fieldidparam or (len(form.getFields()) > 0 and form.getFields()[0].id) or '';
                  isexistingfield python:(fieldid in (field.id for field in form.getFields()));
                  field python:isexistingfield and getattr(form, fieldid);
                  fieldtype python:isexistingfield and field.FieldType or 'TEXT';
                  fieldmode python:isexistingfield and field.FieldMode or 'EDITABLE';
                  fieldformula python:isexistingfield and field.getFormula() or '';
                  adapted form/tinyform|nothing;">
                  
	<div class="dialog-wrapper">
		<!-- Form which selects an existing field -->
		<fieldset tal:condition="isexistingfield">
			<legend>Select a Plomino Field</legend>
			
			<label for="plominoFieldId">Field ID</label>
			<form id="fieldSelection" method="get">
				<select id="plominoFieldId" name="fieldid" onchange="this.form.submit();">
					<option
						tal:repeat="item python:form.getFields()"
						tal:content="item/id"
						tal:attributes="value item/id; selected python:item.id==fieldid">a</option>
				</select>
				<input name="parent" type="hidden" tal:attributes="value parentpath" />
			</form>
		</fieldset>
		
		<fieldset tal:condition="isexistingfield">
			<legend>Advanced edition</legend>
			<a tal:attributes="href python:field.absolute_url() + '/edit'" target="_blank">Edit the field</a>
		</fieldset>
		
		<!-- Form which edits the selected field -->
		<form onsubmit="PlominoFieldDialog.submit();" method="post"
				tal:attributes="action python:isexistingfield and field.absolute_url() + '/tinyfield/setFieldProperties' or form.absolute_url() + '/tinyform/addField'">
				
			<fieldset tal:condition="python:not isexistingfield">
				<legend>Create a Plomino Field</legend>
				
				<label for="plominoFieldId">Field ID</label>
				<input type="text" name="fieldid" id="plominoFieldId" tal:attributes="value fieldid" />
			</fieldset>
			
			<fieldset>
				<legend>Edit field preferences</legend>
				
				<input tal:condition="isexistingfield" name="fieldid" type="hidden" tal:attributes="value fieldid" />
				
				<p>
					<label for="fieldTypesList">Field type</label>
					<select id="fieldTypesList" name="fieldtype">
						<option tal:repeat="type adapted/getFieldTypes"
								tal:content="python:type[1]"
								tal:attributes="value python:type[0]; selected python:fieldtype==type[0]"></option>
					</select>
				</p>
				
				<p>
					<label for="fieldModesList">Field mode</label>
					<select id="fieldModesList" name="fieldmode">
						<option tal:repeat="mode adapted/getFieldModes"
								tal:content="python:mode[1]"
								tal:attributes="value python:mode[0]; selected python:fieldmode==mode[0]"></option>
					</select>
				</p>
				
				<p>
					<label for="fieldFormula">Formula</label><br />
					<textarea id="fieldFormula" name="fieldformula" tal:content="fieldformula"></textarea>
				</p>
			</fieldset>
			<div class="mceActionPanel formControls">
					<span class="actionButtons">
						<input type="submit" id="insert" class="context" name="insert" i18n:attributes="value common_insert" />
						<input type="button" id="cancel" class="standalone" name="cancel" i18n:attributes="value common_cancel" onclick="tinyMCEPopup.close();" />
					</span>
			</div>
		</form>
	</div>
	
</body>
</html>
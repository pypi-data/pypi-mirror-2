[buildout]
develop = . benchmark
parts = test test-no-z3cpt checker coverage-test coverage-report docs i18n
        benchmark python omelette pocompile
versions = versions

[versions]
z3c.pt = 1.2.1
Chameleon = 1.2.13
python-gettext = 1.0

[lxml]
recipe = z3c.recipe.staticlxml
egg = lxml
static = true
libxml2-url = http://xmlsoft.org/sources/libxml2-2.7.7.tar.gz
libxslt-url = http://xmlsoft.org/sources/libxslt-1.1.26.tar.gz

[test-environment]
CHAMELEON_DEBUG = False
CHAMELEON_CACHE = False

[test]
recipe = zc.recipe.testrunner
eggs = z3c.form [test,extra,latest]
environment = test-environment

[test-no-z3cpt]
recipe = zc.recipe.testrunner
eggs = z3c.form [test,latest]

[checker]
recipe = lovely.recipe:importchecker
path = src/z3c/form

[coverage-test]
recipe = zc.recipe.testrunner
eggs = z3c.form [test,latest,extra]
defaults = ['--coverage', '../../coverage']
environment = test-environment

[coverage-report]
recipe = zc.recipe.egg
eggs =
    z3c.coverage
scripts = coverage=coverage-report
arguments = ('coverage', 'coverage/report')

[pocompile]
recipe = zc.recipe.egg
eggs = zest.pocompile


[docs]
recipe = z3c.recipe.sphinxdoc
eggs = z3c.form [docs]
build-dir = ${buildout:directory}/docs
default.css =
layout.html =

[i18n]
recipe = lovely.recipe:i18n
eggs =
  zope.app.appsetup # this is needed for zcml support in the extracter
  zope.component
  zope.security
  zope.i18n
  zope.contenttype
  zope.app.pagetemplate
  zope.app.applicationcontrol
  z3c.form
package = z3c.form
domain = z3c.form
location = src/z3c/form
output = locales
zcml =
  <include package="zope.component" file="meta.zcml" />
  <include package="zope.security" file="meta.zcml" />
  <include package="zope.i18n" file="meta.zcml" />
  <include package="z3c.form" file="meta.zcml" />
  <include package="z3c.form" />

[benchmark]
recipe = zc.recipe.testrunner
environment = benchmark-environment
eggs =
   z3c.form [test,extra,latest]
   benchmark
defaults = ['-m', 'benchmark']

[benchmark-environment]
CHAMELEON_DEBUG = False
CHAMELEON_CACHE = True

[python]
recipe = zc.recipe.egg
eggs = z3c.form
interpreter = python

[omelette]
recipe = collective.recipe.omelette
eggs = ${test:eggs}

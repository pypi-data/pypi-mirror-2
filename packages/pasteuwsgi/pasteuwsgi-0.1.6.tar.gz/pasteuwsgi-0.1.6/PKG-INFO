Metadata-Version: 1.0
Name: pasteuwsgi
Version: 0.1.6
Summary: Paster command to use uwsgi as server for local development
Home-page: http://pypi.python.org/pypi/pasteuwsgi/
Author: Giacomo Bagnoli
Author-email: g.bagnoli@asidev.com
License: This is the MIT license: http://www.opensource.org/licenses/mit-license.php

Copyright (c) 2010-2011 Giacomo Bagnoli <g.bagnoli@asidev.com>

Permission is hereby granted, free of charge, to any person obtaining a copy of this
software and associated documentation files (the "Software"), to deal in the Software
without restriction, including without limitation the rights to use, copy, modify, merge,
publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons
to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or
substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.

Description: .. -*- restructuredtext -*-
        
        pasteuwsgi
        ===========
        
        *pasteuwsgi* is a simple python paste (http://pythonpaste.org/) plugin
        which adds a command that serve the application for using uWSGI
        (http://projects.unbit.it/uwsgi/) integrated HTTP server. It can monitor python
        files and automatically reload uWSGI on file change. It's focused for local
        development to easily test uWSGI specific features.
        
        install
        =======
        
        First, to use *pasteuwsgi* you need uWSGI installed, both sistem wide or
        in the virtualenv. Check the uWSGI documentation on how to install uWSGI
        (http://projects.unbit.it/uwsgi/wiki/Install). The simplest way is to install
        uwsgi in the virtualenv, using pip::
        
         # pip install uwsgi
        
        Then, you can install *pasteuwsgi* via pypi::
        
         # pip install pasteuwsgi
        
        Or, if you want the last unstable version, directly from bitbucket (again, using pip)::
          
          # pip install -e hg+https://bitbucket.org/gbagnoli/pasteuwsgi#egg=pasteuwsgi
        
        Or you can clone the hg repo and then install::
        
          # hg clone https://gbagnoli@bitbucket.org/gbagnoli/pasteuwsgi
          # pip install -e ./
        
        usage
        =====
        
        Once installed, simply add this line to setup.py of your paste app::
        
          uwsgi = pasteuwsgi.serve:ServeCommand
        
        in the "[paste.paster_command]" section of the entry_point
        argument.
        
        i.e. for a pylons-1.0 application::
        
           entry_points="""
           [paste.app_factory]
           main = aybu.cms.config.middleware:make_app
        
           [paste.app_install]
           main = pylons.util:PylonsInstaller
        
           [paste.paster_command]
           uwsgi = pasteuwsgi.serve:ServeCommand
           """,
        
        You may need to re-run setuptools egg_info after adding the new entry_point::
          
          # cd my-project
          # python setup.py egg_info
        
        options
        =======
        
        --address
          Override the http server listening address.
        --port
          Override the http server listening port.
        --reload
          Setup a monitor (using pyinotify) to watch application code to reload on changes. It also monitors code installed in the virtualenv.
        --uwsgi
          Pass additional options to uWSGI directly. Remember that you neeed to wrap uWSGI options with quotes.
        --plugins
          Load uWSGI plugins (for uWSGI >= 0.9.7)
        
        
        examples
        ========
        
        To simply run it as you did with paster serve::
        
          paster uwsgi development.ini --reload
        
        You can add uwsgi options using the -w switch ::
        
          # run with 2 workers with two threads each
          paster uwsgi development.ini --reload -w "-workers 2 --threads 2"
        
        You can even add common options (such the threads or the process one, or
        others) to a [uwsgi] section inside the paste ini (development.ini in the above
        example)::
          
          [...]
          [uwsgi]
          threads = 2
          workers = 2
        
        This works as *pasteuwsgi* passes --ini option to uwsgi with the same ini it
        uses.
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Terminals
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Internet :: WWW/HTTP :: WSGI
Classifier: Topic :: Internet :: WWW/HTTP :: WSGI :: Server
Classifier: Framework :: Paste

Metadata-Version: 1.0
Name: pyxnat
Version: 0.5.0.dev
Summary: Xnat in Python
Home-page: https://launchpad.net/pyxnat
Author: Yannick Schwartz
Author-email: yannick.schwartz@cea.fr
License: BSD
Description: Pyxnat is a simple python library that relies on the REST API provided
        by the XNAT platform since its 1.4 version. XNAT is an extensible database for neuroimaging data. The main objective is to ease communications with an XNAT
        server to plug-in external tools or python scripts to process the data. It
        features:
        
        #. resources browsing capabilities
        #. read and write access to resources
        #. complex searches
        #. disk-caching of requested files and resources
        
        .. [#] http://www.xnat.org/
        .. [#] http://packages.python.org/pyxnat/
        
        ____
        
        **A short overview**
        
        *Setup the connection*
        >>> from pyxnat import Interface
        >>> interface = Interface(server='http://central.xnat.org:8080',
        user='login',
        password='pass',
        datastore=os.path.join( os.path.expanduser('~'),
        'XnatStore'
        )
        )
        
        *Browse the resources*
        >>> interface.projects()
        [u'CENTRAL_OASIS_CS', u'CENTRAL_OASIS_LONG', ...]
        
        *Create new resources*
        >>> interface.project('my_project').create()
        >>> interface.project('my_project').file('image.nii').put('/tmp/image.nii')
        
        *Metadata support*
        >>> proj = interface.project('my_project')
        >>> proj.attrib.keys()
        ['note','alias','secondary_ID','name','pi_lastname',
        'label','keywords','pi_firstname','ID','description']
        >>> proj.attrib.set('note', 'a note')
        >>> proj.attrib.get('note')
        'a note'
        
        *Make complex searches*
        >>> search = interface.search( 'my_search',
        [ ('xnat:subjectData/SUBJECT_ID','LIKE','%'),
        ('xnat:subjectData/PROJECT', '=', 'my_project'),
        'AND'
        ]
        )
        >>> search.get_subjects()
        
Platform: any
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Education
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Utilities

# -*- coding: utf-8 -*-
"""Test installation of PLR into Plone."""

import unittest

from Products.CMFCore.utils import getToolByName

from ${namespace_package}.${package}.tests import IntegrationTestCase

class TestInstall(IntegrationTestCase):
    """Test installation of ${namespace_package}.${package} into Plone."""
        
    def test_portal_title(self):
        """Test if portal title was correctly updated."""
        self.assertEquals("${namespace_package}.${package}", self.portal.getProperty('title'))
        
    def test_portal_description(self):
        """Test if portal description was correctly updated."""
        self.assertEquals("${description}", self.portal.getProperty('description'))

    def test_portal_email(self):
        """Test if mailhost was correctly configured."""
        self.assertEquals("${author_email}", self.portal.getProperty('email_from_address'))
        self.assertEquals("${author}", self.portal.getProperty('email_from_name'))

    def test_css_registered(self):
        """Test if CSS files are registered with portal_css."""
        resources = self.portal.portal_css.getResources()
        ids = [r.getId() for r in resources]
        
        self.failUnless('${package}.css' in ids, '${package}.css not found in portal_css')

    def test_js_registered(self):
        """Test if JavaScript files are registered with portal_javascript."""
        resources = self.portal.portal_javascripts.getResources()
        ids = [r.getId() for r in resources]
        
        self.failUnless('${package}.js' in ids, '${package}.js not found in portal_javascripts')

    def test_skins_folders_registered(self):
        """Test if all ./skins folders are registered."""
        skins = getToolByName(self.portal, 'portal_skins')
        layer = skins.getSkinPath(${package})
        self.failUnless('${package}_css' in layer)
        self.failUnless('${package}_images' in layer)
        self.failUnless('${package}_js' in layer)
        self.failUnless('${package}_scripts' in layer)
        self.failUnless('${package}_templates' in layer)
        
def test_suite():
    suite = unittest.TestSuite()
    suite.addTest(unittest.makeSuite(TestSetup))
    return suite

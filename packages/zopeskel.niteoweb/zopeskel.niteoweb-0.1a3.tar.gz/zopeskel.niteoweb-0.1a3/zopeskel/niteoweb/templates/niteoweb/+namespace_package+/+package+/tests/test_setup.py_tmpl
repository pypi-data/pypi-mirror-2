# -*- coding: utf-8 -*-
"""Test installation of PLR into Plone."""

import unittest

from Products.CMFCore.utils import getToolByName

from niteoweb.plr.tests import PLRIntegrationTestCase

class TestSetup(PLRIntegrationTestCase):
    """Test installation of PLR."""
        
    def test_portal_title(self):
        """Test if portal title was correctly updated."""
        self.assertEquals("BigContentSearch.com", self.portal.getProperty('title'))
        
    def test_portal_description(self):
        """Test if portal description was correctly updated."""
        self.assertEquals("Search for all the content you need.", self.portal.getProperty('description'))

    def test_portal_email(self):
        """Test if mailhost was correctly configured."""
        self.assertEquals("info@bigcontentsearch.com", self.portal.getProperty('email_from_address'))
        self.assertEquals("BigContentSearch.com", self.portal.getProperty('email_from_name'))

    def test_css_registered(self):
        """Test if PLR's css files are registered with portal_css."""
        resources = self.portal.portal_css.getResources()
        ids = [r.getId() for r in resources]
        self.assertEquals(len(ids), 19)
        
        self.failUnless('plr.css' in ids, 'plr.css not found in portal_css')

    def test_js_registered(self):
        """Test if PLR's JavaScript files are registered with portal_javascript."""
        resources = self.portal.portal_javascripts.getResources()
        ids = [r.getId() for r in resources]
        self.assertEquals(len(ids), 46)
        
        self.failUnless('google_analytics.js' in ids, 'google_analytics.js not found in portal_css')
        self.failUnless('cart.js' in ids, 'cart.js not found in portal_css')

    def test_skins_folders_registered(self):
        """Test if all ./skins folders are registered."""
        skins = getToolByName(self.portal, 'portal_skins')
        layer = skins.getSkinPath('Sunburst Theme')
        self.failUnless('plr_templates' in layer)
        self.failUnless('plr_styles' in layer)
        self.failUnless('plr_scripts' in layer)
        self.failUnless('plr_images' in layer)
        
        
def test_suite():
    suite = unittest.TestSuite()
    suite.addTest(unittest.makeSuite(TestSetup))
    return suite

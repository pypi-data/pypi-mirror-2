from pyramid.config import Configurator
from pyramid.authentication import AuthTktAuthenticationPolicy
from pyramid.authorization import ACLAuthorizationPolicy
from repoze.zodbconn.finder import PersistentApplicationFinder
from pyramid_beaker import session_factory_from_settings
from pyramid_mailer.mailer import Mailer
from {{package}}.models import appmaker
from {{package}}.utility import pyramidGroupFinder

def main(global_config, **settings):
    """ This function returns a Pyramid WSGI application.
    """
    
    authn_policy = AuthTktAuthenticationPolicy(secret = 'AuthTktSecretKey', callback = pyramidGroupFinder, timeout=1800)
    authz_policy = ACLAuthorizationPolicy()     
    
    zodb_uri = settings.get('zodb_uri')
    if zodb_uri is None:
        raise ValueError("No 'zodb_uri' in application configuration.")

    finder = PersistentApplicationFinder(zodb_uri, appmaker)
    def get_root(request):
        return finder(request.environ)
        
    session_factory = session_factory_from_settings(settings)
    
    settings['jinja2.directories'] = ['{{package}}:templates']
    
    config = Configurator(root_factory=get_root, 
                          settings=settings,
                          authentication_policy=authn_policy,
                          authorization_policy=authz_policy)
    
    config.set_session_factory(session_factory)
    
    config.registry['mailer'] = Mailer.from_settings(settings)
    
    config.add_static_view('static', '{{package}}:static')

    config.include('pyramid_mailer')
    config.include('pyramid_jinja2')
    
    config.scan('{{package}}')
    
    return config.make_wsgi_app()

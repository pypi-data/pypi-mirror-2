Metadata-Version: 1.0
Name: circuits
Version: 1.4
Summary: Asynchronous Component based Event Application Framework
Home-page: http://bitbucket.org/prologic/circuits/
Author: James Mills
Author-email: James Mills, prologic at shortcircuit dot net dot au
License: MIT
Download-URL: http://bitbucket.org/prologic/circuits/downloads/
Description: .. _Python Programming Language: http://www.python.org/
        .. _circuits IRC Channel: irc://irc.freenode.net/#circuits
        .. _Python Standard Library: http://docs.python.org/library/
        .. _circuits Website: https://bitbucket.org/prologic/circuits/
        .. _circuits Page on PyPI: http://pypi.python.org/pypi/circuits
        .. _MIT License: http://www.opensource.org/licenses/mit-license.php
        .. _Create an Issue: https://bitbucket.org/prologic/circuits/issue/new
        .. _circuits Mailing List: http://groups.google.com/group/circuits-users
        .. _circuits Downloads page: https://bitbucket.org/prologic/circuits/downloads
        
        
        Overview
        --------
        
        circuits is a **Lightweight** **Event** driven and **Asynchronous**
        **Application Framework** for the `Python Programming Language`_
        with a strong **Component** Architecture.
        
        circuits also includes a lightweight, high performance and scalable
        HTTP/WSGI web server as well as various I/O and Networking components.
        
        To take full advantage of circuits and it's architecture, circuits
        requires that your application be designed in terms of components
        and their interactions (*events*) with each other. An application
        written using the circuits application framework is maintainable,
        scalable and easy to develop.
        
        The circuits framework has a certain elegance making it a rather
        attracting feature. New features are built into the framework with
        this in mind and circuits "eats it's own dog food" by having a
        feature-rich library of components built atop the core components.
        
        **Documentation**: http://packages.python.org/circuits
        
        **Project website**: https://bitbucket.org/prologic/circuits/
        
        **PyPI page**: http://pypi.python.org/pypi/circuits
        
        
        Features
        --------
        
        - event driven
        - concurrency support
        - compnoent archiecture
        - asynchronous I/O components
        - no required external dependencies
        - full featured web framework (circuits.web)
        
        
        Requirements
        ------------
        
        circuits has no dependencies beyond the `Python Standard Library`_.
        
        Some dependencies should be optionally installed if deployed on a Python-2.5
        environment such as `processing <http://pypi.python.org/pypi/processing/>`_
        for multiprocessing concurrency support and for JSON support the
        `simplejson <http://pypi.python.org/pypi/simplejson/>`_ package.
        
        
        Installation
        ------------
        
        The simplest and recommended way to install circuits is with pip.
        You may install the latest stable release from PyPI with pip::
        
        > pip install circuits
        
        If you do not have pip, you may use easy_install::
        
        > easy_install circuits
        
        Alternatively, you may download the source package from the
        `circuits Page on PyPI`_ or the `circuits Downloads page`_ on the
        `circuits Website`_; extract it and install using::
        
        > python setup.py install
        
        
        License
        -------
        
        circuits is licensed under the `MIT License`_.
        
        
        Feedback
        --------
        
        I welcome any questions or feedback about bugs and suggestions on how to
        improve circuits. Let me know what you think about circuits. I am on twitter
        `@therealprologic <http://twitter.com/therealprologic>`_.
        
        Do you have suggestions for improvement? Then please `Create an Issue`_
        with details of what you would like to see. I'll take a look at it and
        work with you to either incorporate the idea or find a better solution.
        
        
        Community
        ---------
        
        There is also a small community of circuits enthusiasts that you may
        find on the `circuits IRC Channel`_ and the `circuits Mailing List`_.
        
        
        Release Notes
        -------------
        
        .. _Issue #14: https://bitbucket.org/prologic/circuits/issue/14
        
        Features
        ........
        
        - circuits.core: **NEW** workers and futures modules.
        This adds thread and process concurrency support to circuits.
        
        - circuits.web: **NEW** Web Client for circuits.web
        
        - circuits.core: Implemented a basic handler cache on the Manager.
        Improves overall performance of circuits by as much as ~33%
        
        - circuits.core: Passing keyword argument `sleep` to `Manager.start(...)`
        or `Manager.run(...)` is now deprecated.
        
        
        Bug Fixes
        .........
        
        - circuits.app: Fixed `Issue #14`_.
        
        - circuits.web: Fixed streaming support for `wsgi.Gateway`
        
        - circuits.tools: Catch InvocationError from environments where pydot is
        installed but no graphviz executable (*Mac OS X*)
        
        - circuits.web: Fixed a bug where if no "Content-Length" was provided
        (*By Google Chrom's WebSocket*) but a body was given `circuits.web`
        would expect more data to be given.
        
        - circuits.net: Catch gaierror exceptions on calls to `gethostbyname()`
        to determine where we're binding.
        Fix for misconfigured desktop environments.
        
        - circuits.core: Ignore `ValueError` raised if we can't install signal
        handlers such as when running as a Windows Service.
        
        - circuits.web: Fixed -m/--multiprocessing mode and modified to accept a
        no. of processes to start (circuits.web binary/script).
        
        
Keywords: event framework distributed concurrent component asynchronous
Platform: POSIX
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Environment :: No Input/Output (Daemon)
Classifier: Environment :: Other Environment
Classifier: Environment :: Plugins
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: System Administrators
Classifier: Intended Audience :: Telecommunications Industry
Classifier: License :: OSI Approved
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: POSIX
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.5
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 3.0
Classifier: Topic :: Adaptive Technologies
Classifier: Topic :: Communications :: Chat
Classifier: Topic :: Communications :: Chat :: Internet Relay Chat
Classifier: Topic :: Communications :: Email
Classifier: Topic :: Communications :: Email :: Mail Transport Agents
Classifier: Topic :: Database
Classifier: Topic :: Internet
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: HTTP Servers
Classifier: Topic :: Internet :: WWW/HTTP :: WSGI
Classifier: Topic :: Internet :: WWW/HTTP :: WSGI :: Application
Classifier: Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware
Classifier: Topic :: Internet :: WWW/HTTP :: WSGI :: Server
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: System :: Clustering
Classifier: Topic :: System :: Distributed Computing

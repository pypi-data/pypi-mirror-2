snippet #!
	#!/usr/bin/env python

snippet #!u
	#!/usr/bin/env python
	# -*- coding: utf-8 -*-

# Single line doc string
snippet doc
	"""${1}"""
# Multi line doc string
snippet mdoc
	"""${1}
	"""
# Module import
snippet imp
	import ${1:module}
# Import module from package
snippet fimp
	from ${1:package} import ${2:module}
# While loop
snippet wh
	while ${1:condition}:
		${2:# code...}
# For loop
snippet for
	for ${1:needle} in ${2:haystack}:
		${3:# code...}
# New Class
snippet cl
	class ${1:ClassName}(${2:object}):
		def __init__(self${3}):
			${4:super($1, self).__init__()}
# New Function
snippet def
	def ${1:fname}(${2}):
		${3:pass}
# New method
snippet defm
	def ${1:fname}(self${2}):
		${3:pass}
# New __magic__ method
snippet def_
	def __${1:fname}__(self${2}):
		${3:pass}
# Lambda
snippet ld
	lambda ${1:arg}: ${2:action}
snippet try Try/Except
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
snippet try Try/Except/Else
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
snippet try Try/Except/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	finally:
		${5:pass}
snippet try Try/Except/Else/Finally
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
	finally:
		${6:pass}
# if __name__ == '__main__':
snippet ifmain
	if __name__ == '__main__':
		${1:main()}
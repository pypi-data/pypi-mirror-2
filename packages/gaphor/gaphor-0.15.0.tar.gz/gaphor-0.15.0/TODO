- get rid of this file and put remaining issues into trac system

For 0.10.0 and later:
---------------------

 === zope.component-3.4dev_r72749-py2.4.egg ===
 - bug in zope.component package: in zope.component.globalregistry.py zope.testing is included.  This package is only a dependency for the [test] setting. zope.testing is not mandatory.
 Use a more recent version

 - reimplement the mechanism that adds already existing relationships to the
   diagram if an item is copied to that diagram.

 - lot's of tests are dependent on a decently initialized main window.
   There is no need for these actions to depend on a main window, they only
   need a gaphas.View instance.

 - Use actions only for action definitions. use Events for notification
   between actions.
    * use zope.component.event for centralized event notification.
 
- Copy/Paste for diagramitems
  - How to do a copy/paste? shallow copy or deep copy? -> just create a diagram
    item item referening the same model element or also copy the model element?
    I think we should stick with shallow copy for now.

 - namedelement.py: from NamedElement

Older (long term ;) todo items:
-------------------------------

- At this point we have three event systems:
   2. Actions - used for (pseudo) menu actions (artifical actions are triggered
                some times (e.g. to notify about changes in the Undo Manager)
                works with string based notifiers.
   3. Zope - fairly optimized, works with interfaces and objects for a
             change.

   Actions work fine, for menu actions. Gaphor specific and should work
   with the GTK+ menu manager classes.
   Zope classes are quite optimized. However, mainly provides the same
   functionality as Actions, but not as fine grained.
   Use zope.component.events for all notification!

- Add meta data (such as text alignment) to the model file (add a meta:
  namespace?)
.
- Fix namespace relations between Lifeline and Interaction and Message and
  Interaction

- disable actions when editing.

- write really good test cases for undo functionality. Have some already.

- An option that shows the selected item (in the namespace view) in a diagram.

- Stereotype export and import function. Allow to export packages and import
  them into other models.

- How to figure out if a module exists without loading it? Solved by setuptools

- Create a good algorithm for placement of lines and maybe nodes too.

- Automatically draw relations when an item is DND-ed from the tree-view
  to the diagram.


UI
--
>I would like to see
> some logic to align diagrams like Visio does, it's probably hard to do
> correct though. Also Visio has a very nice feature for bending lines in
> 90 degree bends by holding down shift, something like that would be very
> nice in Gaphor

- Lineup selected elements vertically, horizontally in context menu

- I also intend to "merge" lines (as is often used for generalizations: a
  line with one arrow, which splits into two lines, one for each subclass)

- The text editing also needs a facelift.

